<?xml version="1.0" encoding="iso-8859-1"?>

<document>
    <properties>
        <author email="naresh@andromda.org">Naresh Bhatia</author>
        <title>Create a Value Object</title>
    </properties>

    <body>
        <section name="Create a Value Object">
            <p>
                In this section we will create the <code>PersonVO</code> value object. We will
                keep it pretty simple, mapping it one-to-one with the <code>Person</code> entity.
                Later in this tutorial we will model more complex value objects that will map to
                more than one entities. The model for the <code>PersonVO</code> value object
                is shown below.
            </p>

            <p>
                <div align="center">
                    <img src="images/magicdraw/PersonVO.jpg"/>
                </div>
            </p>

            <p>
                Note that we have added a dependency from <code>Person</code> to <code>PersonVO</code>.
                This will generate helper code in <code>PersonDao</code> to support translation between
                the <code>Person</code> entity and the <code>PersonVO</code> value object. In addition we have
                modeled a new type called <code>PersonVO[]</code>. This type will be used as a return value
                from one of our service methods.
            </p>

            <p>
                Now add <code>PersonVO</code> and <code>PersonVO[]</code> to your model. To do this,
                click the link below for your UML modeling tool.
            </p>

            <p>
                <a href="resources/uml-tools/argouml/create-personvo.html" target="_blank">ArgoUML</a>
                <a href="resources/uml-tools/magicdraw/create-personvo.html" target="_blank">MagicDraw</a>
            </p>
        </section>

        <section name="Generate Code">
                <p> Follow the steps below to generate code.
                    <ol>
                        <li>Open a Command Prompt and change your directory to <code>C:/timetracker</code>.</li>
                        <li>Execute the command <code>maven -o clean install</code>. The <code>clean</code> target
                        ensures that the target directories are cleaned up before the build. Make sure you get a
                        <code>BUILD SUCCESSFUL</code> message.</li>
                    </ol>
                </p>

                <p>
                    Open the folder C:/timetracker/common/target/src/org/andromda/timetracker/vo in Windows Explorer.
                    Note that the <code>PersonVO</code> class is generated here. Open the class and review its contents.
                </p>

                <p>
                    Now open the folder C:/timetracker/core/target/src/org/andromda/timetracker/domain in Windows Explorer.
                    Do you remember that this folder had six auto-generated files during the last build? This time it has
                    only five - <code>PersonDaoImpl.java</code> is missing! What happened? In fact, this class has
                    now moved from the target folder to the src folder. The reason is that we added a dependency from
                    <code>Person</code> to <code>PersonVO</code>. This triggered AndroMDA to generate some support code
                    in <code>PersonDaoBase.java</code> and <code>PersonDaoImpl.java</code> to allow translation between
                    <code>Person</code> and <code>PersonVO</code>. Most of this code is in the auto-generated
                    <code>PersonDaoBase</code> class. However if we need to modify the default translation, AndroMDA provides
                    override methods in the <code>PersonDaoImpl</code> class. In addition, the class is moved to the source
                    tree where it can be safely modified (see C:/timetracker/core/src/java/org/andromda/timetracker/domain).
                    Review the <code>PersonDaoBase</code> and <code>PersonDaoImpl</code> classes to see this conversion support.
                </p>
        </section>

        <section name="What's Next?">
            <p>
                Now that we have modeled the <code>PersonVO</code> value object, it is time to create a service that uses it.
                Click <a href="create-service.html">here</a> to model the <code>PeopleService</code>.
            </p>
        </section>
    </body>
</document>
