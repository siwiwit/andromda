<?xml version="1.0"?>

<document> 
	<properties>
    	<title>Configuring metafacades</title> 
        <author email="cwbrandon@users.sourceforge.net">Chad Brandon</author>
    </properties>
  	<body> 

  		<section name="Writing the metafacades descriptor">
  		    <p>
  		        Now that you have written metafacades, you'll want to tell
  		        AndroMDA under which conditions it should instantiate them.
            </p>
            <a name="descriptor"/>
            <p> 
                Each metafacades descriptor must comply with the following 
                <a href="descriptor-schema.html">XSD Schema</a>.
            </p>
            <p>
                The metafacade descriptor allows the <a href="../andromda-core/index.html">AndroMDA Core</a>
                to discover a set of metafacades on the classpath automatically.
                The <a href="../andromda-core/index.html">AndroMDA Core</a> also uses this
                descriptor to determine what metafacades must be mapped to what meta model
                objects.  The metafacades descriptor <strong>must</strong> reside within the 
                META-INF subdirectory of your cartridge (or shared metafacades library) 
                and <strong>must</strong> be named <em>andromda-metafacades.xml</em>
            </p>      
            <p>
                Let's have a look at part of a typical metafacades descriptor:
            <source><![CDATA[
<metafacades namespace="webservice">
    ...
    <property reference="arrayNamePrefix" default="ArrayOf"/>
    <property reference="schemaTypeMappingsUri"/>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLTypeLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.Classifier$Impl"/>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLTypeLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.UmlClass$Impl"/>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLTypeLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.DataType$Impl"/>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLEnumerationTypeLogicImpl">
        <mapping class="org.omg.uml.foundation.core.Classifier$Impl">
            <stereotype>ENUMERATION</stereotype>
        </mapping>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLEnumerationTypeLogicImpl">
        <mapping class="org.omg.uml.foundation.core.Interface$Impl">
            <stereotype>ENUMERATION</stereotype>
        </mapping>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLEnumerationTypeLogicImpl">
        <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
            <stereotype>ENUMERATION</stereotype>
        </mapping>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLTypeAssociationEndLogicImpl">
        <mapping class="org.omg.uml.foundation.core.AssociationEnd$Impl">
            <context>org.andromda.cartridges.webservice.metafacades.WSDLType</context>
        </mapping>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WSDLTypeAttributeLogicImpl">
        <mapping class="org.omg.uml.foundation.core.Attribute$Impl">
            <context>org.andromda.cartridges.webservice.metafacades.WSDLType</context>
        </mapping>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.Classifier$Impl">
            <stereotype>WEBSERVICE</stereotype>
        </mapping>
        <property reference="ejbJndiNamePrefix" default=""/>
        <property reference="ejbInterfacePattern" default="{0}.{1}"/>
        <property reference="ejbHomeInterfacePattern" default="{0}.{1}Home"/>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.Classifier$Impl">
            <stereotype>SERVICE</stereotype>
        </mapping>
        <property reference="ejbJndiNamePrefix" default=""/>
        <property reference="ejbInterfacePattern" default="{0}.{1}"/>
        <property reference="ejbHomeInterfacePattern" default="{0}.{1}Home"/>
    </metafacade>
    <metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
            <stereotype>WEBSERVICE</stereotype>
        </mapping>
        <property reference="ejbJndiNamePrefix" default=""/>
        <property reference="ejbInterfacePattern" default="{0}.{1}"/>
        <property reference="ejbHomeInterfacePattern" default="{0}.{1}Home"/>
    </metafacade>
    ...
</metafacades>]]>
            </source>
            </p>
            <p>
                The following describes each element/attribute within the andromda-metafacades.xml 
                file and what effect it has on the metafacade configuration process:
            </p>
            <a name="#metafacades"/> 
            <h3><![CDATA[<metafacades/>]]></h3>     
            <p>
              The <em><![CDATA[<metafacades/>]]></em> element is the root of the andromda-metafacades.xml
              file.  This root contains the rest of the metafacade configuration information. 
            </p>
            <table>
                <tr>
                    <th>Attribute</th>
                    <th>Description</th>
                    <th>Required?</th>
                </tr>
                <tr>
                    <a name="namespace"/>
                    <td>namespace</td>
                    <td>
                        Specifies the name of the namespace to which this set of metafacades applies.  For example:
                        <em><![CDATA[<metafacades namespace="spring">]]></em> tells us to apply the set of metafacades to the
                        <em>spring</em> namespace. Note that most of the time the namespace will match the name of a
                        cartridge.
                    </td>
                    <td >Yes</td>
                </tr>
                <tr>
                    <td>shared</td>
                    <td>
                        Indicates if metafacades described by the metafacades descriptor should be treated as <em>shared</em>.
                        Shared means: these metafacades will be made available to <strong>ALL</strong> namespaces. For example
                        we have the UML 1.4 metafacades descriptor defining its metafacades as shared because we want all cartridges
                        to be able to use the UML metafacades:
                        <source><![CDATA[
<metafacades namespace="uml-1.4" shared="true">
...
</metafacades>                            
                        ]]></source>
                    </td>
                    <td>
                        No, if undefined, the metafacades will only be available to the 
                        namespace defined by the <a href="#namespace">namespace</a> attribute
                    </td>
                </tr>
            </table>
            <a name="namespacePropertyReference"/>
            <h3><![CDATA[<property/>]]></h3>
            <p>
                If you've read the documentation on <a href="../andromda-cartridges/index.html">AndroMDA Cartridges</a>
                then you're probably familiar with <em>namespace properties</em>.  Namespace properties allow
                us to configure different <em>namespaces</em> or aspects of an AndroMDA plugin. 
            </p>
            <p>
                The root <a href="#metafacades"><![CDATA[<metafacades/>]]></a> element
                can take one or more <em>optional</em> nested <em>namespace</em> 
                <em><![CDATA[<property/>]]></em> elements.  Namespace property elements
                are used to define references as well as default values for these properties
                which can then be configured by the cartridge client.  Once these property 
                references are defined, each can then by retrieved from within a metafacade implementation
                class by calling <a href="../andromda-core/apidocs/org/andromda/core/metafacade/MetafacadeBase.html#getConfiguredProperty(java.lang.String)">getConfiguredProperty(java.lang.String)</a>.
                For example, this <em>daoNamePattern</em> in this metafacade descriptor snippet here 
                defines the pattern to use when constructing the DAO name within the 
                <a href="../andromda-spring-cartridge/index.html">Spring Cartridge</a>. 
                <a name="namespacePropertyReferenceExample"/>
                <source><![CDATA[
<metafacades namespace="spring">
    <property reference="daoNamePattern" default="{0}Dao"/>
    ...
    <metafacade class="org.andromda.cartridges.spring.metafacades.SpringEntityLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
            <stereotype>ENTITY</stereotype>
        </mapping>
    </metafacade>
    ...
</metafacades>               
                ]]></source>       
                This property can then be retrieved from within a metafacade implementation
                class contained within the <em>spring</em>, like so:
                <a name="getConfiguredProperty"/>
                <source><![CDATA[
private String getDaoNamePattern()
{
    return String.valueOf(this.getConfiguredProperty("daoNamePattern"));
}                    
                ]]></source>  
                <table>
                    <tr>
                        <th>Attribute</th>
                        <th>Description</th>
                        <th>Required?</th>
                    </tr>
                    <tr>
                        <td>reference</td>
                        <td>
                            <p>
                                Specifies the <em>reference</em> to the property that will be
                                externally configured.  This is the name that a cartridge client
                                must supply in order to configure the value of this property.
                            </p>
                        </td>
                        <td>Yes</td>
                    </tr>
                    <tr>
                        <td>default</td>
                        <td>
                            <p>
                                Supplies the default value to supply to the metafacade if no
                                property (and value) are supplied by the cartridge client.
                            </p>
                        </td>
                        <td>
                            No, if unspecified AndroMDA will output warning messages
                            when the cartridge client runs AndroMDA (that is, if no 
                            value has been provided by the client).
                        </td>
                    </tr>
                </table>       
            </p> 
            
            <h3><![CDATA[<default/>]]></h3>   
            <p>
                The root <a href="#metafacades"><![CDATA[<metafacade/>]]></a> element can have one and only one
                <em><![CDATA[<default/>]]></em> element.  This default element allows us to configure
                the default metafacade to be applied if no applicable metafacade mapping was found in any of
                <![CDATA[<metafacade/>]]> mapping definitions.  For example, within the UML 1.4 metafacades
                descriptor we have the following default configuration defined, which means: apply the model 
                element facade <em>org.andromda.metafacades.uml14.ModelElementFacadeLogicImpl</em> to any meta 
                model element that does not have any applicable metafacade mapping available.
                <source><![CDATA[
<metafacades namespace="uml-1.4" shared="true">
    ...
    <default class="org.andromda.metafacades.uml14.ModelElementFacadeLogicImpl"/>
    ...
</metafacades>
                ]]></source>
            </p>
            <table>
                <tr>
                    <th>Attribute</th>
                    <th>Description</th>
                    <th>Required?</th>
                </tr>
                <tr>
                    <td>class</td>
                    <td>
                        Defines the name of the metafacade implementation class for the default metafacade.
                    </td>
                    <td>Yes</td>
                </tr>
            </table>   
            <a name="metafacade"/>
            <h3><![CDATA[<metafacade/>]]></h3>     
            <p>
                The <em><![CDATA[<metafacade/>]]></em> element allows us to configure
                a mapping (and any applicable namespace properties) to a metafacade class. 
                The <em><![CDATA[<metafacade/>]]></em> is nested directly under the root
                <a href="#metafacades"><![CDATA[<metafacades/>]]></a> element.  
                For example this <em><![CDATA[<metafacade/>]]></em> 
                element below tells AndroMDA to construct an instance of 
                <em>org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl</em>
                when AndroMDA finds a meta model element of type <em>org.omg.uml.foundation.core.Operation$Impl</em>, 
                created within the context of <em>org.andromda.cartridges.spring.metafacades.SpringEntity</em>
                and having a valid <em>query</em> property (valid meaning the property is not-null, true if boolean,
                or a non-empty collection if a collection property).
                 <source><![CDATA[
<metafacades namespace="spring">
    ...    
    <metafacade class="org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl">
        <mapping class="org.omg.uml.foundation.core.Operation$Impl">
            <context>org.andromda.cartridges.spring.metafacades.SpringEntity</context>
            <property name="query"/>
        </mapping>
        ...
    </metafacade>    
    ...
</metafacades>
]]></source>
            </p>
            <table>
                <tr>
                    <th>Attribute</th>
                    <th>Description</th>
                    <th>Required?</th>
                </tr>
                <tr>
                    <td>class</td>
                    <td>
                        <p>
                            Specifies the metafacade implementation class that should be instantiated
                            when this mapping is matched.  
                        </p>
                    </td>
                    <td>Yes</td>
                </tr>
                <tr>
                    <td>contextRoot</td>
                    <td>
                        Indicates that this metafacade mapping will be treated as a context root
                        for other metafacades.  For example this metafacade mapping below is indicating that the
                        metafacade constructed from <em>org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl</em>
                        will be a context root (since it will play the context for the metafacade construced from a
                        <em>org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl</em> instance,
                        which in turn will be a context for some other metafacade).
                        <source><![CDATA[
...
<metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl" contextRoot="true">
    <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
        <stereotype>WEBSERVICE</stereotype>
    </mapping>
    ...
</metafacade>
...
<metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl" contextRoot="true">
    <mapping class="org.omg.uml.foundation.core.Operation$Impl">
        <context>org.andromda.cartridges.webservice.metafacades.WebService</context>
    </mapping>
    ...
</metafacade>
...
                        ]]></source>
                    </td>
                    <td>Yes</td>
                </tr>
            </table>
            <a name="metafacadePropertyReference"/>
            <h3><![CDATA[<property/>]]></h3>
            <p>
                Each <a href="#metafacade"><![CDATA[<metafacade/>]]></a> can take one or more <![CDATA[<property/>]]> references.
            </p>
            <p>
                Similar to the namespace <a href="#namespacePropertyReference"><![CDATA[<property/>]]></a> references
                described above, we also have property references which can be used within the scope of a single
                metafacade (whereas the namespace property references are available to the entire namespace).  
                This allows us to narrow the scope of the property, and if applicable be able to configure the property
                differently per metafacade within the same <em>namespace</em>.  For example, this is how we would define
                the same <em>daoNamePattern</em> property used in the <a name="#namespacePropertyReferenceExample">example</a> above.
                You'll notice the only difference is the property reference is a child of the <a href="#metafacade"><![CDATA[<metafacade/>]]></a> 
                instead of the <a href="#metafacades"><![CDATA[<metafacades/>]]></a> element like a 
                <a href="#namespacePropertyReference">namespace property reference</a>.  These property references can then
                be retrieved from within the metafacade implementation class (just like <a href="#getConfiguredProperty">above</a>).
                <source><![CDATA[
<metafacades namespace="spring">
    ...
    <metafacade class="org.andromda.cartridges.spring.metafacades.SpringEntityLogicImpl" contextRoot="true">
        <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
            <stereotype>ENTITY</stereotype>
        </mapping>
        <property reference="daoNamePattern" default="{0}Dao"/>
    </metafacade>
    ...
</metafacades>               
                ]]></source> 
            </p>
            <a name="mapping"/>
            <h3><![CDATA[<mapping/>]]></h3>     
            <p>
                Each <a href="#metafacade"><![CDATA[<metafacade/>]]></a> must take a single
                <em><![CDATA[<mapping/>]]></em> element. The <em><![CDATA[<mapping/>]]></em> 
                is the element containing the nested elements that tell AndroMDA how exactly 
                a meta model object should be mapped to a specific metafacade. 
                <ul>
                    This <em><![CDATA[<mapping/>]]></em> element allows metafacades to be mapped
                    by a combination of the following attributes:
                    <li>
                        <a href="#stereotype">stereotypes</a> - each meta model element can be mapped by one or more stereotypes.
                    </li>
                    <li>
                        <a href="#context">context</a> - each meta model element can be mapped by one context.  A context is
                        is a metafacade interface name, the context must be the context under which the
                        metafacade is created.
                    </li>
                    <li>
                        <a href="#mappingProperty">properties</a> - each meta model element can be mapped by one or more properties that
                        apply to it.
                    </li>
                </ul>
            </p>
            <table>
                <tr>
                    <th>Attribute</th>
                    <th>Description</th>
                    <th>Required?</th>
                </tr>
                <tr>
                    <td>class</td>
                    <td>
                        Specifies the class of the meta model element to which the metafacade should apply when this 
                        <a href="#mapping"><![CDATA[<mapping/>]]></a> is matched.
                        For example, you'll see that this mapping indicates that it shall be matched on each
                        occurence of <em>org.omg.uml.foundation.core.Operation$Impl</em> while the model is
                        being processed.
                        <source><![CDATA[
...
<mapping class="org.omg.uml.foundation.core.Operation$Impl">
    ...
</mapping>
...
                        ]]></source>                                                        
                    </td>
                    <td>Yes</td>
                </tr>
            </table>
            <a name="stereotype"/>
            <h3><![CDATA[<stereotype/>]]></h3>     
            <p>
                Each <a href="#mapping"><![CDATA[<mapping/>]]></a>
                can take one or more <em>optional</em> nested <em><![CDATA[<stereotype/>]]></em>
                elements.  Having a single stereotype tells AndroMDA to match the meta model element having that 
                stereotype.  For example this here tells AndroMDA to apply
                <em>org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl</em>
                to any meta model element of type <em>org.omg.uml.foundation.core.Classifier$Impl</em>
                having the stereotype <em>SERVICE</em>:
                <source><![CDATA[    
...  
<metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl">
    <mapping class="org.omg.uml.foundation.core.Classifier$Impl">
        <stereotype>SERVICE</stereotype>
    </mapping>
</metafacade>   
...                
                ]]></source>                  
                Having two or more stereotypes means match on the meta model element having all indicated stereotypes. 
                For example this here tells AndroMDA to apply
                <em>org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl</em>
                to any meta model element of type <em>org.omg.uml.foundation.core.UmlClass$Impl</em>
                having the stereotype <em>WEBSERVICE</em> <strong>AND</strong> <em>SERVICE</em>:
                <source><![CDATA[    
...
<metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl">
    <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
        <stereotype>WEBSERVICE</stereotype>
        <stereotype>SERVICE</stereotype>
    </mapping>
</metafacade>
...                    
                ]]></source>                     
                If you wanted to '<em>OR</em>' them together, meaning you wanted
                the metafacade applied for either stereotype you'd just create more 
                <a href="#metafacade"><![CDATA[<metafacade/>]]></a> elements containing the new 
                mapping with the new stereotype(s).  For example this here tells AndroMDA to apply
                <em>org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl</em> 
                to any meta model element of type <em>org.omg.uml.foundation.core.UmlClass$Impl</em>
                that has either the <em>WEBSERVICE</em> <strong>OR</strong> <em>SERVICE</em> stereotype.
                <source><![CDATA[    
...
<metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl">
    <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
        <stereotype>WEBSERVICE</stereotype>
    </mapping>
</metafacade>
<metafacade class="org.andromda.cartridges.webservice.metafacades.WebServiceLogicImpl">
    <mapping class="org.omg.uml.foundation.core.UmlClass$Impl">
        <stereotype>SERVICE</stereotype>
    </mapping>
</metafacade>
...                    
                ]]></source> 
                <a name="contextAndStereotypeExample"/>
                It is also possible to combine a <a href="#context"><![CDATA[<context/>]]></a> element with one
                or more stereotypes like this example here; which means apply
                <em>org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl</em>
                to any meta model element of type <em>org.omg.uml.foundation.core.Operation</em>
                that has the <em>FINDER_METHOD</em> stereotype and is created in the context of
                <em>org.andromda.cartridges.spring.metafacades.SpringEntity</em>.
                <source><![CDATA[ 
...
<metafacade class="org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl">
    <mapping class="org.omg.uml.foundation.core.Operation$Impl">
        <context>org.andromda.cartridges.spring.metafacades.SpringEntity</context>
        <stereotype>FINDER_METHOD</stereotype>
    </mapping>
</metafacade>     
...               
                ]]></source>                     
            </p>
            <a name="context"/>
            <h3><![CDATA[<context/>]]></h3>     
            <p>
                Each <a href="#mapping"><![CDATA[<mapping/>]]></a>
                can take an <em>optional</em> nested <em><![CDATA[<context/>]]></em>
                element.  This context allows us to specify that a metafacade
                must be created within the <em>context</em> of another metafacade
                in order to be mapped.  Note that <strong>you can only specify a single
                context per <a href="#mapping"><![CDATA[<mapping/>]]></a></strong>. 
                For example, this here tells AndroMDA to apply the 
                <em>org.andromda.metafacades.uml14.EntityAssociationEndFacadeLogicImpl</em>
                to any meta model element of type <em>org.omg.uml.foundation.core.AssociationEnd$Impl</em>
                when creating the metafacade within the context of <em>org.andromda.metafacades.uml.EntityFacade</em>.
                <source><![CDATA[ 
...
<metafacade class="org.andromda.metafacades.uml14.EntityAssociationEndFacadeLogicImpl">
    <mapping class="org.omg.uml.foundation.core.AssociationEnd$Impl">
        <context>org.andromda.metafacades.uml.EntityFacade</context>        
    </mapping>
</metafacade>
...
                ]]></source>   
                As you know, a context can be combined with one or more stereotypes like you saw 
                in the example <a href="#contextAndStereotypeExample">above</a>.  It can also be 
                combined with one or more <a href="#mappingProperty">properties</a> within a 
                <a href="#mapping"><![CDATA[<mapping/>]]></a> as well.  For example, this here
                is used to construct the EntityQueryOperationFacade, it tells AndroMDA to apply
                <em>org.andromda.metafacades.uml14.EntityQueryOperationFacadeLogicImpl</em> to 
                any meta model element of type <em>org.omg.uml.foundation.core.Operation$Impl</em>
                when constructed within the context of <em>org.andromda.metafacades.uml.EntityFacade</em>
                and when the <em>query</em> <a href="#mappingProperty">property</a> on the metafacade 
                evaluates as a valid <a href="#mappingProperty">property</a>.
                <source><![CDATA[
...
<metafacade class="org.andromda.metafacades.uml14.EntityQueryOperationFacadeLogicImpl">
    <mapping class="org.omg.uml.foundation.core.Operation$Impl">
        <context>org.andromda.metafacades.uml.EntityFacade</context>   
        <property name="query"/>   
    </mapping>
</metafacade>        
...            
                ]]></source>
            </p>
            <a name="mappingProperty"/>
            <h3><![CDATA[<property/>]]></h3>     
            <p>
                Each <a href="#mapping"><![CDATA[<mapping/>]]></a>
                can take one or more <em>optional</em> nested <em><![CDATA[<property/>]]></em>
                elements.  Properties can be used without specifying a value, or they can
                be used with a value.                      
            </p> 
            <a name="validProperty"/>
            <p class="highlight">
                When mapping without a value, the property must be 
                considered <em>valid</em>. 
            </p>
            <p>
                A property is considered <em>valid</em> in the following cases:
                <ul>
                    <li>
                        The property is not null.
                    </li>
                    <li>
                        If a collection type the property is not empty.
                    </li>
                    <li>
                        If a boolean type the property is not false.
                    </li>
                </ul>
            </p>
            <p>
                As you probably know from above, properties can be used in combination with
                both a <a href="#context"><![CDATA[<context/>]]></a> or one or more 
                <a href="#stereotype"><![CDATA[<stereotype/>]]></a> elements.
            </p>
            <table>
                <tr>
                    <th>Attribute</th>
                    <th>Description</th>
                    <th>Required?</th>
                </tr>
                <tr>
                    <td>
                        name
                    </td>
                    <td>
                        Defines the name of the property to be evaluated. This must be a <a href="#validProperty">valid</a>
                        property on the given metafacade in order to be mapped.
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <td>
                        value
                    </td>
                    <td>
                        Defines the value the property must match in order to be mapped.  For example, this here indicates
                        the query property on the metafacade must evaluate to <em>false</em> in order to be mapped.
                        <source><![CDATA[
...
<metafacade class="org.andromda.cartridges.spring.metafacades.BusinessOperationLogicImpl">
    <mapping class="org.omg.uml.foundation.core.Operation$Impl">
        <property name="query" value="false"/>
    </mapping>
</metafacade>
...
                            ]]></source>
                            <p class="highlight">
                                Please note that you can also specify the value as the contents of the 
                                property element, for example this below is equivalent to the previous example:
                                <source><![CDATA[
...
<metafacade class="org.andromda.cartridges.spring.metafacades.BusinessOperationLogicImpl">
    <mapping class="org.omg.uml.foundation.core.Operation$Impl">
        <property name="query">false</property>
    </mapping>
</metafacade>
...
                            ]]></source>
                        </p>
                    </td>
                    <td>
                        No
                    </td>
                </tr>
            </table>
		</section>
  	</body> 
</document>
