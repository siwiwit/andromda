<?xml version="1.0" encoding="UTF-8" ?>
<!--
  This is used to map the model types to 
  Oracle 9i types for generated code.
-->
<mappings name="Oracle9i">
    <mapping>
        <from>String</from>
        <from>PrimitiveTypes::String</from>
        <from>UML2::String</from>
        <from>UMLTypes::String</from>
        <from>UMLPrimitiveTypes::String</from>
        <from>datatype::String</from>
        <from>datatypes::String</from>
        <to>VARCHAR2(255)</to>
    </mapping>
    <mapping>
        <from>Date</from>
        <from>PrimitiveTypes::Date</from>
        <from>datatype::Date</from>
        <from>datatypes::Date</from>
        <to>TIMESTAMP(3)</to>
    </mapping>
    <mapping>
        <from>Time</from>
        <from>PrimitiveTypes::Time</from>
        <from>datatype::Time</from>
        <from>datatypes::Time</from>
        <to>DATE</to>
    </mapping>
    <mapping>
        <from>Timestamp</from>
        <from>DateTime</from>
        <from>PrimitiveTypes::Timestamp</from>
        <from>PrimitiveTypes::DateTime</from>
        <from>datatype::Timestamp</from>
        <from>datatype::DateTime</from>
        <from>datatypes::Timestamp</from>
        <from>datatypes::DateTime</from>
        <to>TIMESTAMP(9)</to>
    </mapping>
    <mapping>
        <from>char</from>
        <from>Character</from>
        <from>Java::char</from>
        <from>PrimitiveTypes::char</from>
        <from>PrimitiveTypes::Character</from>
        <from>UML Standard Profile::char</from>
        <from>datatype::char</from>
        <from>datatype::Character</from>
        <from>datatypes::char</from>
        <from>datatypes::Character</from>
        <to>CHAR</to>
    </mapping>
    <mapping>
        <from>byte</from>
        <from>Byte</from>
        <from>Java::byte</from>
        <from>PrimitiveTypes::byte</from>
        <from>PrimitiveTypes::Byte</from>
        <from>UML Standard Profile::byte</from>
        <from>datatype::byte</from>
        <from>datatype::Byte</from>
        <from>datatypes::byte</from>
        <from>datatypes::Byte</from>
        <to>NUMBER(3)</to>
    </mapping>
    <mapping>
        <from>short</from>
        <from>Short</from>
        <from>Java::short</from>
        <from>PrimitiveTypes::short</from>
        <from>PrimitiveTypes::Short</from>
        <from>UML Standard Profile::short</from>
        <from>datatype::short</from>
        <from>datatype::Short</from>
        <from>datatypes::short</from>
        <from>datatypes::Short</from>
        <to>NUMBER(5)</to>
    </mapping>
    <mapping>
        <from>int</from>
        <from>Integer</from>
        <from>Java::int</from>
        <from>PrimitiveTypes::int</from>
        <from>PrimitiveTypes::Integer</from>
        <from>UML Standard Profile::int</from>
        <from>UML2::Integer</from>
        <from>UMLPrimitiveTypes::Integer</from>
        <from>UML Standard Profile::Integer</from>
        <from>datatype::int</from>
        <from>datatype::Integer</from>
        <from>datatypes::int</from>
        <from>datatypes::Integer</from>
        <to>NUMBER(10)</to>
    </mapping>
    <mapping>
        <from>long</from>
        <from>Long</from>
        <from>Java::long</from>
        <from>PrimitiveTypes::long</from>
        <from>PrimitiveTypes::Long</from>
        <from>UML Standard Profile::long</from>
        <from>UML2::UnlimitedNatural</from>
        <from>UMLPrimitiveTypes::UnlimitedNatural</from>
        <from>datatype::long</from>
        <from>datatype::Long</from>
        <from>datatypes::long</from>
        <from>datatypes::Long</from>
        <to>NUMBER(19)</to>
    </mapping>
    <mapping>
        <from>float</from>
        <from>Float</from>
        <from>Java::float</from>
        <from>PrimitiveTypes::float</from>
        <from>PrimitiveTypes::Float</from>
        <from>UML Standard Profile::float</from>
        <from>datatype::float</from>
        <from>datatype::Float</from>
        <from>datatypes::float</from>
        <from>datatypes::Float</from>
        <to>NUMBER(38,7)</to>
    </mapping>
    <mapping>
        <from>double</from>
        <from>Double</from>
        <from>Money</from>
        <from>Java::double</from>
        <from>PrimitiveTypes::double</from>
        <from>PrimitiveTypes::Double</from>
        <from>PrimitiveTypes::Money</from>
        <from>Java::double</from>
        <from>UML Standard Profile::double</from>
        <from>datatype::double</from>
        <from>datatype::Double</from>
        <from>datatype::Money</from>
        <from>datatypes::double</from>
        <from>datatypes::Double</from>
        <from>datatypes::Money</from>
        <to>NUMBER(38,15)</to>
    </mapping>
    <mapping>
        <from>Boolean</from>
        <from>boolean</from>
        <from>Java::Boolean</from>
        <from>PrimitiveTypes::Boolean</from>
        <from>PrimitiveTypes::boolean</from>
        <from>UML2::Boolean</from>
        <from>UMLPrimitiveTypes::Boolean</from>
        <from>Java::boolean</from>
        <from>UML Standard Profile::boolean</from>
        <from>datatype::Boolean</from>
        <from>datatype::boolean</from>
        <from>datatypes::Boolean</from>
        <from>datatypes::boolean</from>
        <to>NUMBER(1)</to>
    </mapping>
    <mapping>
        <from>Decimal</from>
        <from>decimal</from>
        <from>PrimitiveTypes::Decimal</from>
        <from>PrimitiveTypes::decimal</from>
        <from>datatype::Decimal</from>
        <from>datatype::decimal</from>
        <from>datatypes::Decimal</from>
        <from>datatypes::decimal</from>
        <to>NUMBER(38,15)</to>
    </mapping>
    <mapping>
        <from>Blob</from>
        <from>PrimitiveTypes::Blob</from>
        <from>datatype::Blob</from>
        <from>datatypes::Blob</from>
        <to>BLOB</to>
    </mapping>
    <mapping>
        <from>Clob</from>
        <from>PrimitiveTypes::Clob</from>
        <from>datatype::Clob</from>
        <from>datatypes::Clob</from>
        <to>CLOB</to>
    </mapping>
</mappings>
