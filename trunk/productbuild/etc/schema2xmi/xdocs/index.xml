<?xml version="1.0"?>

<document>

  <properties>
    <author email="cwbrandon@users.sourceforge.net">Chad Brandon</author>
    <title>AndroMDA - Schema2XMI</title>
  </properties>

  <body>

    <section name="What is Schema2XMI?">
        <p>
			Schema2XMI is a generator that will read a database
			schema and write your schema's into an XMI model.
			This is useful for a couple of reasons:
			<ul>
				<li>
					Your company wants your DBA(s) to design your
					schema.
				</li>
				<li>
					Your application already has an existing schema.
				</li>
				<li>
					You want to move an legacy application to AndroMDA.
				</li>
			</ul>
        </p>
		<subsection name="How do I use Schema2XMI?">
			<p>
				Schema2XMI is a command line utility that you'll
				pass arguments to and then execute the main
				<a href="apidocs/org/andromda/schema2xmi/Schema2XMI.html">Schema2XMI</a> class.
				The usage is defined below:
			</p>
<source><![CDATA[
usage: org.andromda.schema2xmi.Schema2XMI [options] ...]]

Options:
 -P,--package <arg>         The package to output classifiers
 -c,--connectionUrl <arg>   JDBC connection URL
 -d,--driver <arg>          JDBC driver class
 -h,--help                  Display help information
 -i,--input <arg>           Input model file (to which model elements will
                            be added)
 -m,--mappings <arg>        The type mappings URI (i.e.
                            file:${basedir}/DataypeMappings.xml)
 -o,--output <arg>          Set output name to which the result of the
                            transformation will be written
 -p,--password <arg>        Schema user password
 -t,--tablePattern <arg>    The table name pattern of tables to process
                            (regular expression)
 -u,--user <arg>            Schema user name
 -v,--taggedValues <arg>    Whether or not to include persistence tagged
                            values, default is true
]]></source>
		</subsection>
    </section>

  </body>
</document>
