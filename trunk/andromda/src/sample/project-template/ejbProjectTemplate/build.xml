<project name="model-query" default="deploy">

   <property file="build.properties" />
   
   <property name="build.dir" value="build/"/>
   <property name="gensrc.dir" value="${build.dir}/gensrc/"/>
   <property name="classes.dir" value="${build.dir}/classes/"/>
   <property name="dist.dir" value="dist/"/>
   
   <target name="clean">
     <delete dir="${build.dir}"/>
     <delete dir="${dist.dir}"/>
   </target>
   
   <target name="init">
     <mkdir dir="${build.dir}"/>
     <mkdir dir="${dist.dir}"/>
     <mkdir dir="${classes.dir}"/>
   </target>
   
   <taskdef name="andromda"
       		classname="org.andromda.core.anttasks.AndroMDAGenTask">
      <classpath>
          <pathelement path="${andromda.classpath}"/>
      </classpath>
   </taskdef>
            
   <target name="compile-uml" depends="init">
   
     <andromda basedir="."
        genDestdir="${gensrc.dir}"
        implDestdir="${gensrc.dir}"
        modelURL="jar:file:${basedir}/${model}"
        lastModifiedCheck="true"
        templatePath="${andromda.home}/src/templates/ejb"
        useDefaultTemplateConfig="true"
        typeMappings="${andromda.home}/src/xml/typeMapping.xml">   				
     </andromda>
     
   </target>

   <!-- Let XDoclet generate all remaining EJB sources from the beans -->
   <target name="compile-xdoclet" depends="compile-uml,init">
    
        <taskdef name="ejbdoclet"
           	     classname="xdoclet.modules.ejb.EjbDocletTask">
           <classpath>
               <pathelement path="${build.classpath}"/>
           </classpath>
        </taskdef>
		
        <ejbdoclet destdir="${gensrc.dir}"
                   ejbspec="2.0"
                   force="false">
                   
            <fileset dir="${gensrc.dir}">
                <include name="**/*Bean.java" />
            </fileset>

            <dataobject/>
            <utilobject/>
            
            <remoteinterface/>
            <homeinterface/>
            <localinterface/>
            <localhomeinterface/>

            <deploymentdescriptor destdir="build/META-INF/"/>

            <jboss version="3.0"
                   xmlencoding="UTF-8"
                   typemapping="Hypersonic SQL"
                   datasource="java:/DefaultDS"
                   destdir="build/META-INF/"/>

        </ejbdoclet>

        <!--
             XDoclet stores the *Bean classes into ejb-jar.xml
             but the used andromda templates have created
             subclasses *BeanImpl and *BeanCMP.  Replace
             the names in the deployment descriptor so that
             everyone is happy.
         -->
        <replace file="build/META-INF/ejb-jar.xml" >
            <replacetoken><![CDATA[ServiceBean</ejb-class>]]></replacetoken>
            <replacevalue><![CDATA[ServiceBeanImpl</ejb-class>]]></replacevalue>
        </replace>
        <replace file="build/META-INF/ejb-jar.xml" >
            <replacetoken><![CDATA[Bean</ejb-class>]]></replacetoken>
            <replacevalue><![CDATA[BeanCMP</ejb-class>]]></replacevalue>
        </replace>
   </target>
    
   <target name="compile-java" depends="compile-xdoclet,compile-nogen"/>
   
   <target name="compile-nogen" depends="init">
   
   	 <path id="build.classpath">
   	   <pathelement location="${classes.dir}"/>
   	   <pathelement path="${build.classpath}"/>
   	 </path>
   	 
     <javac debug="true" destdir="${classes.dir}">
     	<src path="${gensrc.dir}"/>
     	<src path="src/java"/>
     	<classpath refid="build.classpath"/>
     </javac>
     
   </target>
   
   <target name="jar-ejbs" depends="compile-java,init">
   	  <jar destfile="${dist.dir}/ejb.jar">
   	 	<fileset dir="${classes.dir}" includes="**/*"/>
   	 	<fileset dir="${build.dir}">
   	 		<include name="META-INF/ejb-jar.xml"/>
   	 		<include name="META-INF/jboss*.xml"/> 
   	 	</fileset>
   	 </jar>
   </target>
   
   <target name="jar-ear" depends="jar-ejbs,init">
   	 <ear destfile="${dist.dir}/myapp.ear" appxml="src/xml/application.xml">
       <fileset dir="${dist.dir}" includes="*.jar,*.war"/>
     </ear>
   </target>
   
   <target name="build" depends="jar-ear">
   	 
   </target>
   
   <target name="deploy" depends="build">
     <copy todir="${jboss.home}/server/default/deploy" >
          <fileset dir="dist/" includes="*.ear" />
     </copy>
   </target>
   
</project>