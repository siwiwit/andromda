<project default="install"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven"
         xmlns:j="jelly:core"
         xmlns:util="jelly:util">

    <ant:property environment="env"/>

    <!-- ==================================================================
           Builds everything and installs it into the local Maven repository
         ================================================================== -->
    <goal name="install">
        <attainGoal name="multiproject:install"/>
    </goal>

    <!-- ==================================================================
           Cleans Everything
         ================================================================== -->
    <goal name="clean">
        <attainGoal name="multiproject:clean"/>
        <!-- get rid of all the log files -->
        <ant:delete>
          <ant:fileset dir=".">
            <ant:include name="**/*.log*"/>
            <ant:exclude name="maven.log"/>
          </ant:fileset>
        </ant:delete>
    </goal>

    <!-- ==================================================================
            Deploy the Application
         ================================================================== -->
    <goal name="deploy">
        <maven:maven
            descriptor="${maven.src.dir}/../app/project.xml"
            goals="deploy"/>
    </goal>

    <!-- ==================================================================
           Undeploy the Application
         ================================================================== -->
    <goal name="undeploy">
        <maven:maven
            descriptor="${maven.src.dir}/../app/project.xml"
            goals="undeploy"/>
    </goal>

#if ($web)
    <!-- ==================================================================
           Builds the Web component
         ================================================================== -->
    <goal name="web">
        <maven:maven
            descriptor="${maven.src.dir}/../web/project.xml"
            goals="war:install"/>
    </goal>

#end
    <!-- ==================================================================
            Builds the Core component
         ================================================================== -->
    <goal name="core">
        <maven:maven
            descriptor="${maven.src.dir}/../core/project.xml"
            goals="ejb:install"/>
    </goal>

    <!-- ==================================================================
            Builds the Common component
         ================================================================== -->
    <goal name="common">
        <maven:maven
        descriptor="${maven.src.dir}/../common/project.xml"
        goals="jar:install"/>
    </goal>

    <!-- ==================================================================
            Runs the MDA component
         ================================================================== -->
    <goal name="mda">
        <maven:maven
            descriptor="${maven.src.dir}/../mda/project.xml"
            goals="pom:install"/>
    </goal>

#if ($webservice)
    <!-- ==================================================================
            Builds the WebService component
         ================================================================== -->
    <goal name="webservice">
        <maven:maven
            descriptor="${maven.src.dir}/../webservice/project.xml"
            goals="war:install"/>
    </goal>
    
#end
    <!-- ============================================================
             Initializes the database schema for this application
         ============================================================ -->
    <goal name="create-schema">
        <j:set var="script" value="${dataSource.sql.init}"/>
        <attainGoal name="execute-script"/>
    </goal>

    <!-- ============================================================
             Drops the database schema for this application
         ============================================================ -->
    <goal name="drop-schema">
        <j:set var="script" value="${dataSource.sql.drop}"/>
        <attainGoal name="execute-script"/>
    </goal>

    <goal name="load-dummy-data">
        <j:set var="script" value="${dataSource.sql.load}"/>
        <attainGoal name="execute-script"/>
    </goal>

    <j:set var="generatedSourceDir" value="${maven.build.dir}"/>
    <ant:available
        file="${maven.build.src}"
        type="dir"
        property="generatedSrcAvailable"/>

     <!-- ============================================================
            Adds the generated source to the compile path for
            each subproject (if any exists)
          ============================================================ -->
    <preGoal name="java:compile">
        <!-- only attempt to add the generated source to the classpath
             if we have a source directory -->
        <j:set var="sourceDirectory" value="${pom.build.sourceDirectory}"/>
        <j:if test="${!empty sourceDirectory}">

            <ant:available
                file="${sourceDirectory}"
                type="dir"
                property="srcAvailable"/>

            <j:if test="${srcAvailable}">
                <j:if test="${generatedSrcAvailable}">
                    <!-- add the paths of the generated source to the
                         maven compile path -->
                    <ant:path
                        id="andromda.java.gen.src"
                        location="${generatedSourceDir}"/>
                    <maven:addPath
                        id="maven.compile.src.set"
                        refid="andromda.java.gen.src"/>
                </j:if>
            </j:if>
        </j:if>
    </preGoal>

    <!-- ============================================================
             Executes the given DDL script
         ============================================================ --> 
    <goal name="execute-script">
#set ($condition = '${script != null}')
        <j:if test="$condition">
            <util:file var="scriptFile" name="${script}"/>
            <j:if test="${scriptFile.exists()}">
                <ant:sql driver="${dataSource.driver.class}" src="${scriptFile}"
                    url="${dataSource.url}" userid="${dataSource.user}" password="${dataSource.password}" >
                    <ant:classpath>
                        <ant:pathelement location="${dataSource.driver.jar}"/>
                    </ant:classpath>
                </ant:sql>
            </j:if>
        </j:if>
    </goal>

</project>