<?xml version="1.0" encoding="UTF-8"?>

<project>
    <extend>../project.xml</extend>
    <name>${projectName} MDA</name>
    <artifactId>${projectId}-mda</artifactId>
    <shortDescription>${pom.name} Component</shortDescription>
    <description>Contains the ${pom.name} module</description>
    <dependencies>
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-profile</artifactId>
            <version>${andromda}</version>
            <type>xml.zip</type>
        </dependency>
        <dependency>
            <groupId>andromda</groupId>
             <artifactId>maven-andromda-plugin</artifactId>
             <version>${andromda}</version>
             <type>plugin</type>
             <properties>
                 <languageMappingsUri>Java</languageMappingsUri>
                 <wrapperMappingsUri>JavaWrapper</wrapperMappingsUri>
                 <sqlMappingsUri>${sql.mappings}</sqlMappingsUri>
                 <jdbcMappingsUri>JDBC</jdbcMappingsUri>
                 <maxSqlNameLength>30</maxSqlNameLength>
                 <foreignKeySuffix>_FK</foreignKeySuffix>
                 <ejbJndiNamePrefix>${pom.groupId}</ejbJndiNamePrefix>
             </properties>
        </dependency>
#if ($ejb)
        <!-- Specify and configure our cartridges -->
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-ejb-cartridge</artifactId>
            <version>${andromda}</version>
            <properties>
                <entity-beans>${maven.andromda.core.generated.dir}</entity-beans>
                <session-beans>${maven.andromda.core.generated.dir}</session-beans>
                <entity-impls>${maven.andromda.core.manual.dir}</entity-impls>
                <session-impls>${maven.andromda.core.manual.dir}</session-impls>
            </properties>
        </dependency>
#elseif ($hibernate)
        <!-- specify and configure our cartridges -->
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-hibernate-cartridge</artifactId>
            <version>${andromda}</version>
            <properties>
                <hibernateTypeMappingsUri>Hibernate</hibernateTypeMappingsUri>
                <dataSource>${dataSource}</dataSource>
                <hibernateDialect>${hibernate.db.dialect}</hibernateDialect>
                <hibernateTransactionManagerLookup>${hibernate.transaction.manager.lookup}</hibernateTransactionManagerLookup>
                <hibernateShowSql>${hibernate.db.showSql}</hibernateShowSql>
                <hibernateJdbcBatchSize>0</hibernateJdbcBatchSize>
				<hibernateUseQueryCache>false</hibernateUseQueryCache>
				<hibernateCacheProvider>net.sf.hibernate.cache.EhCacheProvider</hibernateCacheProvider>
				<hibernateQueryCacheFactory>net.sf.hibernate.cache.StandardQueryCacheFactory</hibernateQueryCacheFactory>
                <entities>${maven.andromda.core.generated.dir}</entities>
                <entity-impls>${maven.andromda.core.manual.dir}</entity-impls>
                <session-beans>${maven.andromda.core.generated.dir}</session-beans>
                <session-impls>${maven.andromda.core.manual.dir}</session-impls>
                <configuration>${maven.andromda.core.config.dir}</configuration>
            </properties>
        </dependency>
#else
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-spring-cartridge</artifactId>
            <version>${andromda}</version>
            <type>jar</type>
            <properties>
                <hibernateTypeMappingsUri>Hibernate</hibernateTypeMappingsUri>
                <dataSource>${dataSource}</dataSource>
                <hibernateDialect>${hibernate.db.dialect}</hibernateDialect>
                <hibernateShowSql>${hibernate.db.showSql}</hibernateShowSql>
				<hibernateUseQueryCache>false</hibernateUseQueryCache>
				<hibernateCacheProvider>net.sf.hibernate.cache.EhCacheProvider</hibernateCacheProvider>
				<hibernateQueryCacheFactory>net.sf.hibernate.cache.StandardQueryCacheFactory</hibernateQueryCacheFactory>
                <springTypesPackage>${pom.package}</springTypesPackage>
                <defaultHibernateGeneratorClass>${hibernate.generatorClass}</defaultHibernateGeneratorClass>
                <hibernateDefaultCascade>none</hibernateDefaultCascade>
                <daos>${maven.andromda.core.generated.dir}</daos>
                <dao-impls>${maven.andromda.core.manual.dir}</dao-impls>
                <spring-configuration>${maven.andromda.core.generated.dir}</spring-configuration>
                <services>${maven.andromda.core.generated.dir}</services>
                <service-impls>${maven.andromda.core.manual.dir}</service-impls>
                <session-ejbs>${maven.andromda.core.generated.dir}</session-ejbs>
                <!-- uncomment to enable EJB security -->
                <!-- <securityRealm>${pom.groupId}</securityRealm> -->
            </properties>
        </dependency>
#end
#if ($webservice)
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-webservice-cartridge</artifactId>
            <version>${andromda}</version>
            <type>jar</type>
            <properties>
                <schemaTypeMappingsUri>XmlSchema</schemaTypeMappingsUri>
                <defaultProvider>${default.provider}</defaultProvider>
                <applicationName>${pom.groupId}</applicationName>
                <wsdlSoapAddress>${wsdl.soap.address}</wsdlSoapAddress>
#if ($spring)
                <ejbInterfacePattern>{0}.ejb.{1}</ejbInterfacePattern>
                <ejbHomeInterfacePattern>{0}.ejb.{1}Home</ejbHomeInterfacePattern>
#end
                <wsdls>${maven.andromda.webservice.generated.dir}/wsdl</wsdls>
                <axis-configuration>${maven.andromda.webservice.generated.dir}/axis</axis-configuration>
                <java-types>${maven.andromda.common.generated.dir}</java-types>
            </properties>
        </dependency>
#end
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-java-cartridge</artifactId>
            <version>${andromda}</version>
            <properties>
                <enumerations>${maven.andromda.common.generated.dir}</enumerations>
                <exceptions>${maven.andromda.common.generated.dir}</exceptions>
#if (!$webservice)
                <value-objects>${maven.andromda.common.generated.dir}</value-objects>
#end
            </properties>
        </dependency>
#if ($web)
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-bpm4struts-cartridge</artifactId>
            <version>${andromda}</version>
            <properties>
                 <forms>${maven.andromda.web.generated.dir}</forms>
                 <pages>${maven.andromda.web.generated.dir}</pages>
                 <actions>${maven.andromda.web.generated.dir}</actions>
                 <controllers>${maven.andromda.web.generated.dir}</controllers>
                 <controller-impls>${maven.andromda.web.manual.java.dir}</controller-impls>
                 <messages>${maven.andromda.web.generated.dir}</messages>
                 <configuration>${maven.andromda.web.generated.dir}/WEB-INF</configuration>
                 <security>false</security>
                 <securityRealm>other</securityRealm>
#if ($spring)
                 <serviceAccessorPattern>${pom.package}.ServiceLocator.instance().get{1}()</serviceAccessorPattern>
#else
                 <serviceAccessorPattern>{0}.{1}Util.getHome().create()</serviceAccessorPattern>
#end
                 <mergeMappingsUri>file:${maven.conf.dir}/mappings/Bpm4StrutsMergeMappings.xml</mergeMappingsUri>
            </properties>
        </dependency>
#end
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-validation-library</artifactId>
            <version>${andromda}</version>
        </dependency>
        <dependency>
            <groupId>andromda</groupId>
            <artifactId>andromda-query-library</artifactId>
            <version>${andromda}</version>
        </dependency>
    </dependencies>
</project>
