<?xml version="1.0"?>

<project xmlns:j="jelly:core"
         xmlns:ant="jelly:ant"
         xmlns:x="jelly:xml"
         xmlns:u="jelly:util"
         xmlns:maven="jelly:maven">
         
    <j:set var="pluginResources" value="${plugin.resources}/andromda"/>
    <maven:set plugin="maven-xdoc-plugin" property="maven.xdoc.jsl" value="file:${maven.build.dir}/jsl/site.jsl"/>
    <maven:set plugin="maven-xdoc-plugin" property="maven.xdoc.date" value="left"/> 
    <maven:set plugin="maven-xdoc-plugin" property="maven.xdoc.date.format" value="dd MMMM yyyy HH:mm z"/>
    <maven:set plugin="maven-xdoc-plugin" property="maven.xdoc.version" value="${pom.currentVersion}"/> 
    <maven:set plugin="maven-xdoc-plugin" property="maven.xdoc.includeProjectDocumentation" value="yes"/>
    <maven:set plugin="maven-xdoc-plugin" property="maven.xdoc.theme.url" value="style/maven-andromda.css"/>  
         
    <!-- ===================================================================
          Add both the custom JSL style sheet, and the custom CSS files.
         =================================================================== -->
    <postGoal name="xdoc:copy-resources">
        <ant:copy todir="${maven.build.dir}/jsl">
            <ant:fileset dir="${pluginResources}/jsl"/>
        </ant:copy>
        <ant:copy todir="${maven.docs.dest}/style" overwrite="true">
            <ant:fileset dir="${pluginResources}/style"/>
        </ant:copy>
    </postGoal>

    <preGoal name="xdoc:copy-resources">
        <attainGoal name="xdoc:profile-xsl"/>
        <attainGoal name="xdoc:namespace-xsl"/>
    </preGoal>

    <goal name="xdoc:profile-xsl">
        <!-- if a namespace.xml is present then generate documentation for it -->
        <u:available file="${maven.src.dir}/META-INF/andromda-profile.xml">
            <!-- setting the XSLT factory provider @todo: do this only once (wouter)-->
            <j:invokeStatic var="dummy" method="setProperty" className="java.lang.System">
                <j:arg value="javax.xml.transform.TransformerFactory" type="java.lang.String"/>
                <j:arg value="org.apache.xalan.processor.TransformerFactoryImpl" type="java.lang.String"/>
            </j:invokeStatic>
            <!-- copy the stylesheet for this specific run -->
            <ant:copy file="${pluginResources}/xsl/profile.xsl" todir="${maven.build.dir}/xsl"/>
            <!-- replace the variable property in the stylesheet -->
            <ant:replace file="${maven.build.dir}/xsl/profile.xsl" token="%module%" value="${pom.name}"/>
            <!-- performing the transformations -->
            <ant:xslt force="true"
                in="${maven.src.dir}/META-INF/andromda-profile.xml"
                out="${maven.gen.docs}/profile.xml"
                style="${maven.build.dir}/xsl/profile.xsl"/>
        </u:available>
    </goal>

    <goal name="xdoc:namespace-xsl">
        <!-- if a profile.xml is present then generate documentation for it -->
        <u:available file="${maven.src.dir}/META-INF/andromda/namespace.xml">
            <!-- setting the XSLT factory provider @todo: do this only once (wouter)-->
            <j:invokeStatic var="dummy" method="setProperty" className="java.lang.System">
                <j:arg value="javax.xml.transform.TransformerFactory" type="java.lang.String"/>
                <j:arg value="org.apache.xalan.processor.TransformerFactoryImpl" type="java.lang.String"/>
            </j:invokeStatic>
            <!-- copy the stylesheet for this specific run -->
            <ant:copy file="${pluginResources}/xsl/namespace.xsl" todir="${maven.build.dir}/xsl"/>
            <!-- replace the variable property in the stylesheet -->
            <ant:replace file="${maven.build.dir}/xsl/namespace.xsl" token="%module%" value="${pom.name}"/>
            <!-- performing the transformations -->
            <ant:xslt force="true"
                in="${maven.src.dir}/META-INF/andromda/namespace.xml"
                out="${maven.gen.docs}/namespace.xml"
                style="${maven.build.dir}/xsl/namespace.xsl"/>
        </u:available>
    </goal>

</project>
