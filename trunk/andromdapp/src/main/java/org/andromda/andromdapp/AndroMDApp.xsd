<?xml version="1.0" encoding="UTF-8"?>
<!-- =========================================================================
     This schema defines the andromdapp.xml configuration file.
     CODING CONVENTION: NO TABS, INDENT 4 SPACES
     ========================================================================= -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="andromdapp">
		<xs:complexType>
			<xs:sequence>
                <xs:element ref="resourceLocations"/>
                <xs:element ref="templateEngine"/>
				<xs:element ref="prompts"/>
			</xs:sequence>
			<xs:attribute name="type" type="xs:string" use="required"/>
			<xs:attribute name="root" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>
                        Defines the root of the application (that is where the name of the directory
                        in which the application will be created)
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="condition">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="equal" minOccurs="0"/>
                <xs:element ref="notEqual" minOccurs="0"/>
                <xs:element ref="setPrompt" minOccurs="0"/>
                <xs:element ref="setProperty" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="conditions">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="condition" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
        <xs:unique name="uniqueConditionId">
            <xs:selector xpath="condition"/>
            <xs:field xpath="@id"/>
        </xs:unique>
	</xs:element>
	<xs:element name="equal" type="xs:string"/>
	<xs:element name="location" type="xs:string"/>
    <xs:element name="macrolibrary">
        <xs:annotation>
            <xs:documentation>
                Defines a macro library for use with the template engine.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="notEqual" type="xs:string"/>
	<xs:element name="precondition">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="prompt"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="preconditions">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="precondition"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="prompt">
		<xs:complexType>
			<xs:sequence>
                <xs:element ref="text" minOccurs="0"/>
                <xs:element ref="equal" minOccurs="0"/>
                <xs:element ref="notEqual" minOccurs="0"/>
				<xs:element ref="preconditions" minOccurs="0"/>
				<xs:element ref="responses" minOccurs="0"/>
				<xs:element ref="conditions" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
            <xs:attribute name="required" type="xs:boolean" use="optional" default="true"/>
            <xs:attribute name="setResponseAsTrue" type="xs:boolean" use="optional" default="false">
                <xs:annotation>
                    <xs:documentation>
                        Whether or not the response should be set as a property in the template context with
                        a boolean value of <code>true</code>.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="prompts">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="prompt" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
        <xs:unique name="uniquePromptId">
            <xs:selector xpath="prompt"/>
            <xs:field xpath="@id"/>
        </xs:unique>
	</xs:element>
	<xs:element name="resourceLocations">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="location" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="response">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
                    <xs:attribute name="type" type="xs:string" use="optional">
                        <xs:annotation>
                            <xs:documentation>
                                Defines the type (i.e. 'java.lang.Boolean') the response shall be when its added to the template context.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="responses">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="response" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="setPrompt">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="id" type="xs:string" use="required"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="setProperty">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="id" type="xs:string" use="required"/>
					<xs:attribute name="type" type="xs:string" use="required"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
    <xs:element name="templateEngine">
        <xs:annotation>
            <xs:documentation>
                Used to configure the template engine instance; this is the engine
                that actually processes your templates (such as Velocity, Freemarker, etc).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="templateLocations" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="macrolibrary" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="className" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The implementation class name of the TemplateEngine (must have a default constructor)
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="patterns" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>
                        Defines the file patterns that the template engine will process. (i.e. you'd
                        typically define it as "**/*.vsl" if you were using Velocity as your templating
                        engine).
                    </xs:documentation>
                </xs:annotation>                
            </xs:attribute>
        </xs:complexType>
    </xs:element>
	<xs:element name="templateLocations">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="location"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="text" type="xs:string"/>
</xs:schema>
