Bob Fields 2/2/2011

For EMF UML2, reference http://www.eclipse.org/modeling/mdt/uml2/docs/articles/Introduction_to_UML2_Profiles/article.html for making changes to profiles.

You need to add the stereotype, extend the metaclass, and define the profile (new) version. If the changes are completely backwards compatible, you can copy the profile version defined values (from the UML package just below the Profile definition) to the previous version (defined by /1 /0 etc for the namespace version number). After copying the namespace version definition items, the new namespace version can be deleted, in order to avoid the unnecessary profile migration message when opening the referencing model.

The naming convention to EMF-UML22 profiles is .profile.uml, for import model libraries (such as andromda datatypes) is .library.uml, and for regular models is .uml. The ModelArchiver plugin takes care of following the naming convention when installing profiles, <profile>-<version>.profile.uml. For RSM (Rational Software Modeller v7 or v7.5, which became Rational Software Architect RSA in v8), the convention is .epx for profiles and .emx for models and libraries. Use RSM v7.5 for maximum backwards compatibility with existing referencing models.

MagicDraw has basic flaws when exporting to UML2: All xmi:id values in ALL referenced profiles and model dependencies (including UML Standard Profile and 4 MagicDraw specific profiles) are changed and exported to the same directory, making the new profile completely incompatible with existing UML2 profiles used by existing models. MagicDraw export to UML2 should never be more than a one-time operation. This is absolutely horrible: We have 75+ models in AndroMDA, exporting them results in 375+ different versions of these referenced profiles.

MagicDraw profiles are completely backwards-compatible with earlier .xml.zip files even after internalID values are changed (apparently recognized by name rather than xmi:id), so profiles should be imported rather than exported. MD needs a separate plugin to export UML2 models and profiles to UML14 (http://www.magicdraw.com/plugins under Free: UML 2 to UML 1.4 Exporter, only works with MD 11.5?). This process is recommended because MagicDraw UML14 models are not forward compatible with UML2 models (all attributes become required, and only UML2 supports multiplicity * for operation parameters and operation returnTypes). Multiplicity * is strongly recommended, otherwise you will have to model the generic Collection/List types (no strongly-typed collections generated) or the Array types (inconvenient for coding).

MagicDraw UML14 profiles migrated forward to UML2 must have the <<modelLibrary>> and <<profile>> stereotypes in order to create profiles correctly.

Another incompatibility between UML14 and UML2 profiles: In UML2, all attributes (UML14 taggedValues) must belong to a stereotype, cannot be created dynamically within a model. All existing UML14 taggedValues have been moved under existing stereotypes in the respective profiles, don't create new standalone UML14 taggedValues. Not all test models have been fixed yet though: If a taggedValue does not correspond to an existing profile stereotype taggedValue, a new stereotype and profile is created when migrating the model to UML2. For this reason, model location pathmaps should always be used when referencing profiles, to avoid migrating UML14 models in-place, i.e. pointing andromda3.profiles pointing to profiles\emf\uml22 for UML2 and profiles\uml14 for UML14, maven2.profiles pointing to {m2repo}\org\andromda\profiles\emf\uml22\{version} for EMF and {m2repo}\org\andromda\profiles\uml2\{version} for MagicDraw UML2.xml.zip and {m2repo}\org\andromda\profiles\uml14\{version} for MD UML14.xml.zip. Avoid referencing profiles under MagicDraw\profiles directory, since those must be manually updated whenever profiles in the source tree are changed. Models should never have any hard-coded paths such as C:\Development.

An additional MagicDraw UML14/UML2 incompatibility: UML2 stereotypes and stereotype attributes must be valid Java identifiers. The existing andromda taggedValue naming convention (@andromda.type.taggedValue) is not a valid Java identifier (@ and . not allowed), so they have all been converted to andromda_type_taggedvalue in the latest versions of the profiles. Either convention works properly within andromda when reading values, it checks for both naming conventions.

RSM 7.5 has another problem: When a profile is modified and a new version is supposedly created, it does not go through the new namespace versioning process, so the new stereotype values cannot be used in referencing models.

RSM has other issues: Loaded profiles by referencing models can never be refreshed (RSM must be restarted in order to see changes after modifying a profile in the local filesystem); Datatypes in diagrams and the model tree always show as PrimitiveTypes::<InitCaps> even if the JavaPrimitiveTypes::<lowercase> type is actually used. RSM has a 'compress profile' option, do not use this unless you want to manually migrate referencing models, since RSM will be unable to load the old profile version before asking to migrate to the new version.

RSM6 (EMF UML2 v1.0) is not forward compatible with UML2/2.0 because the internal package hierarchy has been changed from org.eclipse.uml to org.eclipse.uml2. EMF-UML2 has been completely removed from Andromda because both UML2/1/0 and UML2/2.0 namespaces and dependencies cannot be loaded at the same time within andromda. UML2/2.0 has been supported since 2005, so everybody should have migrated off that version by now.

RSM also has a utility for modifying models with invalid profile references (changed xmi:id values), but it doesn't work very well (simply removes and reapplies the profile, rather than trying to maintain current stereotype references). This utlity is available at http://www-01.ibm.com/support/docview.wss?uid=swg21405462.

ArgoUML has an issue with UML14.xmi profiles exported by MagicDraw: the namespace package hierarchy is unexpected by ArgoUML, so it cannot find the stereotypes in the imported model, the ArgoUML developers suggest 'flattening' the profile structure. ArgoUML profile modifications need to be done manually. See http://forum.andromda.org/viewtopic.php?t=2245, http://www.argouml-users.net/index.php?title=AndroMDA and http://www.mail-archive.com/dev@argouml.tigris.org/msg01358.html. ArgoUML has been working on UML2 support for a long time, that plus using standard UML2Tools for profile editing will fix these issues.

Because of these issues, the approach for modifying profiles should be:
- Do not make any backwards incompatible profile changes if at all possible, such as deleting Stereotypes/attributes or changing attribute datatypes or removing metaclass associations - existing models will have to be extensively modified. If making these changes, a new profile version must be created and existing models manually migrated to the new profile versions.
- Start with modifications to the EMF UML22 (.profile.uml) profile using the Eclipse UML2 editor. Use the Eclipse 3.5 version (for namespace http://www.eclipse.org/uml2/2.0.0/UML), not the Eclipse 3.6 version: The UML2/2.0 profiles are forwards compatible and updated on-the-fly when loaded by the referencing model. Using Eclipse UML2/3.0 will result in a 'profile version not found' error message.
- Create the stereotype, stereotype attributes with UMLPrimitiveTypes datatypes such as String, Integer, Boolean. Add comments at all levels (Stereotype, attribute) and lower multiplicity values. Define the profile version (UMLEditor -> Profile -> Define), copy the new references to the old namespace version, delete the new namespace version (in accordance with http://www.eclipse.org/modeling/mdt/uml2/docs/articles/Introduction_to_UML2_Profiles/article.html). Be very careful when creating new profile internal namespace versions, to avoid unnecessary model migrations.
- Import the profile into RSM7.5 to create a new epx version under profiles\emf\rsm75
- Import the profile into MagicDraw (v15 or later), save the UML2.xml.zip file (version 2.0, not verson 3.0). Export the profile to UML14 using the MagicDraw plugin.
- Manually modify any ArgoUML profiles (TODO: Create a utility to put the MD XMI output in the proper format for ArgoUML).
