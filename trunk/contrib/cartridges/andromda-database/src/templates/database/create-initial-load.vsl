--
--  This script is still highly experimental, it will not work on
--  hibernate-inheritance tables and many-to-many relationships
--  (because a join table must be present - cannot be found in the model)
--

##
##      M A C R O S
##
#macro (columnNames $columns)
#set($comma="")
#foreach ($column in $columns)${comma}${column.columnName}#set($comma=",")#end
#end
##
#macro (keyValues $columns $count)
#set($comma="")
#foreach ($column in $columns)${comma}${column.columnName}=${column.getDummyValue($count)}#set($comma=",")#end
#end
##
#macro (dummyValues $columns $count)
#set($comma="")
#foreach ($column in $columns)${comma}${column.getDummyValue($count)}#set($comma=",")#end
#end
##
##  For each table render the sql statements
##
#foreach ($table in $tables)
##  insert plain data
#set ($columns = $table.nonForeignKeyColumns)
#if ($columns.size() > 0)
#foreach ($count in [1,2,3,4,5])
insert into $table.tableName (#columnNames($columns)) values (#dummyValues($columns $count))
#end
#end
#end

#foreach ($table in $tables)
##  insert foreign keys
#set ($columns = $table.foreignKeyColumns)
#set ($primKeys = $table.primaryKeyColumns)
#if ($columns.size() > 0)
#foreach ($count in [1,2,3,4,5])
#if ($primKeys.size() > 0)
update $table.tableName set #keyValues($columns $count) where #keyValues($primKeys $count) --
#else
update $table.tableName set #keyValues($columns $count) --
#end
#end
#end
#end
