##
##  This macro will render the Equals() method.
##  If an entity is rendered, only the identifiers are compared.
##  If an embedded value is renderer, then all attributes are compared.
##
#macro (renderEqualsMethod $class)
#if ($class.class.name == "org.andromda.cartridges.nhibernate.metafacades.HibernateEntityLogicImpl")
#set ($isEntity = true)
#set ($attributeSet = $class.getIdentifiers(false))
#else
#set ($isEntity = false)
#set ($attributeSet = $class.attributes)
#end
        public override bool Equals(Object obj)
        {
#if ($attributeSet.empty)
            return base.Equals(obj);
#else
            if (this == obj)
            {
                return true;
            }
            $class.name that = obj as $class.name;
            if (that == null)
            {
                return false;
            }
#foreach ($attribute in $attributeSet)
#set ($attrType = $attribute.type)
#set ($attrName = ${stringUtils.upperCamelCaseName($attribute.name)})
#if ($attrType.primitive)
#if ($isEntity)
            if (this.$attrName == 0 || that.$attrName == 0 || this.$attrName != that.$attrName)
            {
                return false;
            }
#else
            if (this.$attrName != that.$attrName)
            {
                return false;
            }
#end
#elseif ($attrType.enumeration)
            if (this.$attrName != that.$attrName)
            {
                return false;
            }
#elseif ($attrType.arrayType)
            if (!cs.util.Arrays.equals(this.$attrName, that.$attrName))
            {
                return false;
            }
#else
            if (this.$attrName == null || that.$attrName == null || !this.${attrName}.Equals(that.$attrName))
            {
                return false;
            }
#end
#end
            return true;
#end
        }
#end
##
##  This macro will render the GetHashCode() method
##  If an entity is rendered, the attributeSet consists of the identifiers,
##  if an value type is renderer, the attributeSet consists of all attributes
##
#macro (renderHashCodeMethod $class $attributeSet)
        public override int GetHashCode()
        {
#if ($attributeSet.empty)
            return base.GetHashCode();
#else
#if ($class.generalization)
            int hashCode = base.GetHashCode();
#else
            int hashCode = 0;
#end
#foreach ($attribute in $attributeSet)
#set ($attrType = $attribute.type)
#set ($attrName = ${stringUtils.upperCamelCaseName($attribute.name)})
#if  ($attribute.getterSetterTypeName == "bool")
            hashCode = 29 * hashCode + (${attrName} ? 1 : 0);
#elseif ($attribute.getterSetterTypeName == "System.Guid")
            hashCode = 29 * hashCode + ${attrName}.GetHashCode();
#elseif ($attrType.arrayType)
            // arrays are not part of the hashCode calculation
#elseif ($attrType.primitive || $attrType.enumeration)
            hashCode = 29 * hashCode + (int)${attrName};
#else
            hashCode = 29 * hashCode + (${attrName} == null ? 0 : ${attrName}.GetHashCode());
#end## if
#end## foreach
            return hashCode;
#end## $attributeSet.empty
        }
#end