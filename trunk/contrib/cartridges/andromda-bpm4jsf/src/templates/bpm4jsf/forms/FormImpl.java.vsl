#set ($generatedFile = "${action.fullyQualifiedFormImplementationPath}.java")
// license-header java merge-point
package $action.packageName;

/**
$action.getDocumentation(" * ")
 */
public class $action.formImplementationName
    implements $action.formImplementationInterfaceList
{

    /**
     * Stores any date or time formatters for this form.
     */
    private final java.util.Map dateTimeFormatters = new java.util.HashMap();

    public ${action.formImplementationName}()
    {
#foreach ($field in $action.formFields)
#if ($field.type.dateType)
#set ($lenient = !$field.strictDateFormat)
#if ($field.type.dateType)
        java.text.DateFormat $field.dateFormatter = new java.text.SimpleDateFormat("$field.dateFormat");
        ${field.dateFormatter}.setLenient($lenient);
        this.dateTimeFormatters.put("$field.name", $field.dateFormatter);
#elseif ($field.type.timeType)
        java.text.DateFormat $field.timeFormatter = new java.text.SimpleDateFormat("$field.timeFormat");
        this.dateTimeFormatters.put("$field.name", $field.timeFormatter);
#end
#end
#end
    }
#foreach ($field in $action.formFields)

    private $field.type.fullyQualifiedName $field.name;

    /**
$field.getDocumentation("     * ")
     */
    public $field.type.fullyQualifiedName ${field.getterName}()
    {
#if ($field.table)
        return ${managedBeansPackage}.CollectionSorter.sort(this.users, this.getUsersSortColumn(), this.isUsersSortAscending());
#else
        return this.${field.name};
#end
    }

    /**
$field.getDocumentation("     * ")
     */
    public void ${field.setterName}($field.type.fullyQualifiedName $field.name)
    {
        this.$field.name = $field.name;
    }
#if ($field.table)
    /**
     * The name of the sort column for the {@link #${field.name}} collection.
     */
    private String ${field.name}SortColumn;

#set ($upperCaseFieldName = $stringUtils.capitalize($field.name))
    /**
     * Gets the name of the sort column for the {@link #${field.name}} collection.
     * 
     * @return the name of the sort column.
     */
    public String get${upperCaseFieldName}SortColumn()
    {
        return this.${field.name}SortColumn;
    }

    /**
     * Sets the name of the {@link #${field.name}} sort column.
     * 
     * @param ${field.name}SortColumn the name of the column by which {@link #${field.name}}
     *        are sorted by.
     */
    public void set${upperCaseFieldName}SortColumn(final String ${field.name}SortColumn)
    {
        this.${field.name}SortColumn = ${field.name}SortColumn;
    }
    
    /**
     * The flag indicating whether or not {@link #${field.name}} should be sorted
     * ascending.
     */
    private boolean ${field.name}SortAscending = false;

    /**
     * Indicates whether or not {@link #${field.name}} should be sorted ascending
     * or not.
     * 
     * @return true/false
     */
    public boolean is${upperCaseFieldName}SortAscending()
    {
        return this.${field.name}SortAscending;
    }

    /**
     * Sets whether or not {@link #${field.name}} should be sorted ascending.
     * 
     * @param ${field.name}SortAscending true/false
     */
    public void set${upperCaseFieldName}SortAscending(final boolean ${field.name}SortAscending)
    {
        this.${field.name}SortAscending = ${field.name}SortAscending;
    }
#end
#end

    /**
     * Gets any date and time formatters (keyed by property name)
     * for this form.
     *
     * @return the Map containing any date and time formatters.
     */
    public java.util.Map getDateTimeFormatters()
    {
        return this.dateTimeFormatters;
    }

}