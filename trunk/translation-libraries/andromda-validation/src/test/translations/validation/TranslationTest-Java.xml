<?xml version="1.0" encoding="UTF-8"?>


<translation-test>

	<translation name="validation.Java"/>

    <expression>
        <from>
            context Customer
            inv: age &gt;= 18
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.greaterOrEqual(org.andromda.translation.validation.OCLIntrospector.invoke(this,"age"),18)
        </to>
    </expression>

    <expression>
        <from>
            context CustomerCard
            inv: validFrom.isBefore(goodThru)
        </from>
        <to>
            org.andromda.translation.validation.OCLIntrospector.invoke(org.andromda.translation.validation.OCLIntrospector.invoke(this,"validFrom"),"isBefore(goodThru)",new Object[]{org.andromda.translation.validation.OCLIntrospector.invoke(this,"goodThru")})
        </to>
    </expression>

    <expression>
        <from>
            context Membership
            inv: card.customer = customer
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"card.customer"),org.andromda.translation.validation.OCLIntrospector.invoke(this,"customer"))
        </to>
    </expression>

    <!--
    <expression>
        <from>
            context CustomerCard
            inv: printedName = customer.title.concat( customer.name )
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(printedName,customer.title.concat(customer.name))
        </to>
    </expression>
	-->

    <expression>
        <from>
            context LoyaltyProgram
            inv: serviceLevel-&gt;size() = 2
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLIntrospector.invoke(this,"serviceLevel")),2)
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: cards-&gt;select( valid = true )
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.select(org.andromda.translation.validation.OCLIntrospector.invoke(this,"cards"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"valid"),true);}})
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: program-&gt;size() = cards-&gt;select( valid = true )-&gt;size()
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLIntrospector.invoke(this,"program")),org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLCollections.select(org.andromda.translation.validation.OCLIntrospector.invoke(this,"cards"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"valid"),true);}})))
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices-&gt;forAll( pointsEarned = 0 and pointsBurned = 0 )
                    implies membership.loyaltyAccount-&gt;isEmpty()
        </from>
        <to>
            (org.andromda.translation.validation.OCLCollections.forAll(org.andromda.translation.validation.OCLIntrospector.invoke(this,"partners.deliveredServices"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"pointsEarned"),0)&amp;&amp;org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"pointsBurned"),0);}})?org.andromda.translation.validation.OCLCollections.isEmpty(org.andromda.translation.validation.OCLIntrospector.invoke(this,"membership.loyaltyAccount")):true)
        </to>
    </expression>

    <expression>
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer-&gt;size()
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"numberOfCustomers"),org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLIntrospector.invoke(this,"loyaltyProgram.customer")))
        </to>
    </expression>

    <expression>
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer-&gt;asSet()-&gt;size()
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"numberOfCustomers"),org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLCollections.asSet(org.andromda.translation.validation.OCLIntrospector.invoke(this,"loyaltyProgram.customer"))))
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices.transaction.points-&gt;sum() &lt; 10000
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.less(org.andromda.translation.validation.OCLCollections.sum(org.andromda.translation.validation.OCLIntrospector.invoke(this,"partners.deliveredServices.transaction.points")),10000)
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: customer-&gt;forAll( age &gt;= 18 )
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.forAll(org.andromda.translation.validation.OCLIntrospector.invoke(this,"customer"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.greaterOrEqual(org.andromda.translation.validation.OCLIntrospector.invoke(object,"age"),18);}})
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: name = 'Edward'
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"name"),"Edward")
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: self.name = 'Edward'
        </from>
        <to>
			org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"name"),"Edward")
        </to>
    </expression>

    <expression>
        <from>
            context Services
            inv: self.pointsOffered &gt; 0 implies not (self.pointsBurned = 0)
        </from>
        <to>
            (org.andromda.translation.validation.OCLExpressions.greater(org.andromda.translation.validation.OCLIntrospector.invoke(this,"pointsOffered"),0)?!(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"pointsBurned"),0)):true)
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: title = (if isMale = true then 'Mr.' else 'Ms.' endif)
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"title"),(if(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"isMale"),true)){"Mr.";}else{"Ms.";}))
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: self.age() &gt;= 0
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.greaterOrEqual(org.andromda.translation.validation.OCLIntrospector.invoke(this,"age()"),0)
        </to>
    </expression>

<!--
    <expression>
        <from>
            context Customer
            inv: self.isRelatedTo(self) = true
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(this.isRelatedTo(this),true)
        </to>
    </expression>
-->
    <expression>
        <from>
            context Membership
            inv: (actualLevel.name = 'Silver' implies card.color = Color::silver)
                 and
                 (actualLevel.name = 'Gold' implies card.color = Color::gold)
        </from>
        <to>
            ((org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"actualLevel.name"),"Silver")?org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"card.color"),org.andromda.translation.validation.OCLIntrospector.invoke(this,"Color::silver")):true))&amp;&amp;((org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"actualLevel.name"),"Gold")?org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"card.color"),org.andromda.translation.validation.OCLIntrospector.invoke(this,"Color::gold")):true))
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyAccount::isEmpty()
            post : result = (points = 0)
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"result"),(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(this,"points"),0)))
        </to>
    </expression>

    <expression>
        <from>
            context StrutsFinalState::getFullPath()
            pre: getModel().getAllUseCases()-&gt;one(name = 'Prince') = true
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.one(org.andromda.translation.validation.OCLIntrospector.invoke(getModel(),"getAllUseCases()"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"name"),"Prince");}}),true)
        </to>
    </expression>

    <expression>
        <from>
            context StrutsUseCase
            inv: let thisName : String = name in model.allUseCases-&gt;one(name = thisName)
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.one(org.andromda.translation.validation.OCLIntrospector.invoke(this,"model.allUseCases"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"name"),org.andromda.translation.validation.OCLIntrospector.invoke(this,"name"));}})
        </to>
    </expression>

    <expression>
        <from>
            context StrutsFinalState
            inv: let finalStateName : String = name
                  in finalStateName-&gt;notEmpty()
                      and model.allUseCases-&gt;one(name = finalStateName)
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.notEmpty(org.andromda.translation.validation.OCLIntrospector.invoke(this,"name"))&amp;&amp;org.andromda.translation.validation.OCLCollections.one(org.andromda.translation.validation.OCLIntrospector.invoke(this,"model.allUseCases"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"name"),org.andromda.translation.validation.OCLIntrospector.invoke(this,"name"));}})
        </to>
    </expression>
	
    <expression>
        <from>
            context OperationFacade
            inv: getReturnType()-&gt;notEmpty()
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.notEmpty(getReturnType())
        </to>
    </expression>

</translation-test>

