<?xml version="1.0" encoding="UTF-8"?>


<translation-test>

	<translation name="validation.Java"/>

    <expression>
        <from>
            context Customer
            inv: age >= 18
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.greaterOrEqual(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"age"),18));
        </to>
    </expression>

    <expression>
        <from>
            context CustomerCard
            inv: validFrom.isBefore(goodThru)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLIntrospector.invoke(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"validFrom"),"isBefore(goodThru)",new Object[]{org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"goodThru")}));
        </to>
    </expression>

    <expression>
        <from>
            context Membership
            inv: card.customer = customer
        </from>
        <to>
           final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"card.customer"),org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"customer")));
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: serviceLevel->size() = 2
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"serviceLevel")),2));
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: cards->select( valid = true )
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLCollections.select(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"cards"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"valid"),true);}}));
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: program->size() = cards->select( valid = true )->size()
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"program")),org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLCollections.select(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"cards"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"valid"),true);}}))));
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices->forAll( pointsEarned = 0 and pointsBurned = 0 )
                    implies membership.loyaltyAccount->isEmpty()
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure((Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLCollections.forAll(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"partners.deliveredServices"),new org.apache.commons.collections.Closure(){public void execute(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"pointsEarned"),0)&amp;&amp;org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"pointsBurned"),0);}}))).booleanValue()?org.andromda.translation.validation.OCLCollections.isEmpty(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"membership.loyaltyAccount")):true));
        </to>
    </expression>

    <expression>
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer->size()
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"numberOfCustomers"),org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"loyaltyProgram.customer"))));
        </to>
    </expression>

    <expression>
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer->asSet()->size()
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"numberOfCustomers"),org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLCollections.asSet(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"loyaltyProgram.customer")))));
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices.transaction.points->sum() &lt; 10000
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.less(org.andromda.translation.validation.OCLCollections.sum(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"partners.deliveredServices.transaction.points")),10000));
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: customer->forAll( age >= 18 )
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLCollections.forAll(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"customer"),new org.apache.commons.collections.Closure(){public void execute(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.greaterOrEqual(org.andromda.translation.validation.OCLIntrospector.invoke(object,"age"),18);}}));
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: name = 'Edward'
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"name"),"Edward"));
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: self.name = 'Edward'
        </from>
        <to>
			final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"name"),"Edward"));
        </to>
    </expression>

    <expression>
        <from>
            context Services
            inv: self.pointsOffered > 0 implies not (self.pointsBurned = 0)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure((Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLExpressions.greater(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"pointsOffered"),0))).booleanValue()?!(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"pointsBurned"),0)):true));
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: title = (if isMale = true then 'Mr.' else 'Ms.' endif)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"title"),(if(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"isMale"),true)){"Mr.";}else{"Ms.";})));
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: self.age() >= 0
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.greaterOrEqual(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"age()"),0));
        </to>
    </expression>

    <expression>
        <from>
            context Membership
            inv: (actualLevel.name = 'Silver' implies card.color = Color::silver)
                 and
                 (actualLevel.name = 'Gold' implies card.color = Color::gold)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(((Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"actualLevel.name"),"Silver"))).booleanValue()?org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"card.color"),org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"Color::silver")):true))&amp;&amp;((Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"actualLevel.name"),"Gold"))).booleanValue()?org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"card.color"),org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"Color::gold")):true)));
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyAccount::isEmpty()
            post : result = (points = 0)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"result"),(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"points"),0))));
        </to>
    </expression>

    <expression>
        <from>
            context StrutsFinalState::getFullPath() : String
            pre: getModel().getAllUseCases()->one(name = 'Prince') = true
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.one(org.andromda.translation.validation.OCLIntrospector.invoke(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"getModel()"),"getAllUseCases()"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"name"),"Prince");}}),true));
        </to>
    </expression>

    <expression>
        <from>
            context StrutsUseCase
            inv: let contextElementName : String = name in model.allUseCases->one(name = contextElementName)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLCollections.one(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"model.allUseCases"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"name"),org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"name"));}}));
        </to>
    </expression>
	
    <expression>
        <from>
            context StrutsUseCase
            inv: let contextElementName : String = getName() in model.allUseCases->one(getName() = contextElementName)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLCollections.one(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"model.allUseCases"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"getName()"),org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"getName()"));}}));
        </to>
    </expression>

    <expression>
        <from>
            context StrutsFinalState
            inv: let finalStateName : String = name
                  in finalStateName->notEmpty()
                      and model.allUseCases->one(name = finalStateName)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLCollections.notEmpty(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"name"))&amp;&amp;org.andromda.translation.validation.OCLCollections.one(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"model.allUseCases"),new org.apache.commons.collections.Predicate(){public boolean evaluate(java.lang.Object object){return org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(object,"name"),org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"name"));}}));
        </to>
    </expression>
	
    <expression>
        <from>
            context OperationFacade
            inv: getReturnType()->notEmpty()
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLCollections.notEmpty(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"getReturnType()")));
        </to>
    </expression>
    
    <expression>
        <from>
            context SpringEntityAssociationEnd inv: one2One = true implies composition or aggregation
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure((Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"one2One"),true))).booleanValue()?Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"composition"))).booleanValue():true)||Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"aggregation"))).booleanValue());
        </to>
    </expression>
    
    <expression>
        <from>
            context SpringEntityAssociationEnd inv: one2One implies (composition or aggregation or otherEnd.composition or otherEnd.aggregation)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure((Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"one2One"))).booleanValue()?(Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"composition"))).booleanValue()||Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"aggregation"))).booleanValue()||Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"otherEnd.composition"))).booleanValue()||Boolean.valueOf(String.valueOf(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"otherEnd.aggregation"))).booleanValue()):true));
        </to>
    </expression>
    
    <expression>
        <from>
            context WebService inv : operations -> isUnique(name)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLCollections.isUnique(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"operations"),new org.apache.commons.collections.Transformer(){public Object transform(java.lang.Object object){return org.andromda.translation.validation.OCLIntrospector.invoke(object,"name");}}));
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: age.oclIsKindOf(Integer)
        </from>
        <to>
            final java.lang.Object contextElement = this; boolean constraintValid = org.andromda.translation.validation.OCLResultEnsurer.ensure(org.andromda.translation.validation.OCLIntrospector.invoke(contextElement,"age") instanceof Integer);
        </to>
    </expression>

</translation-test>

