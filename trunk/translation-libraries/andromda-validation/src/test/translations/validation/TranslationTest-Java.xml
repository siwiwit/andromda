<?xml version="1.0" encoding="UTF-8"?>


<translation-test>

	<translation name="validation.Java"/>

    <expression>
        <from>
            context Customer
            inv: age &gt;= 18
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.greaterOrEqual(age,18)
        </to>
    </expression>

    <expression>
        <from>
            context CustomerCard
            inv: validFrom.isBefore(goodThru)
        </from>
        <to>
            validFrom.isBefore(goodThru)
        </to>
    </expression>

    <expression>
        <from>
            context Membership
            inv: card.customer = customer
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(card.customer,customer)
        </to>
    </expression>

    <expression>
        <from>
            context CustomerCard
            inv: printedName = customer.title.concat( customer.name )
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(printedName,customer.title.concat(customer.name))
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: serviceLevel-&gt;size() = 2
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.size(serviceLevel),2)
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: cards-&gt;select( valid = true )
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.select(cards,new org.apache.commons.collections.Predicate(){public boolean evaluate(Object object){return org.andromda.translation.validation.OCLExpressions.equal(object.valid,true);}})
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: program-&gt;size() = cards-&gt;select( valid = true )-&gt;size()
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.size(program),org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLCollections.select(cards,new org.apache.commons.collections.Predicate(){public boolean evaluate(Object object){return org.andromda.translation.validation.OCLExpressions.equal(object.valid,true);}})))
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices-&gt;forAll( pointsEarned = 0 and pointsBurned = 0 )
                    implies membership.loyaltyAccount-&gt;isEmpty()
        </from>
        <to>
            (org.andromda.translation.validation.OCLCollections.forAll(partners.deliveredServices,new org.apache.commons.collections.Predicate(){public boolean evaluate(Object object){return org.andromda.translation.validation.OCLExpressions.equal(object.pointsEarned,0)&amp;&amp;org.andromda.translation.validation.OCLExpressions.equal(object.pointsBurned,0);}})?org.andromda.translation.validation.OCLCollections.isEmpty(membership.loyaltyAccount):true)
        </to>
    </expression>

    <expression>
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer-&gt;size()
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(numberOfCustomers,org.andromda.translation.validation.OCLCollections.size(loyaltyProgram.customer))
        </to>
    </expression>

    <expression>
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer-&gt;asSet()-&gt;size()
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(numberOfCustomers,org.andromda.translation.validation.OCLCollections.size(org.andromda.translation.validation.OCLCollections.asSet(loyaltyProgram.customer)))
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices.transaction.points-&gt;sum() &lt; 10000
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.less(org.andromda.translation.validation.OCLCollections.sum(partners.deliveredServices.transaction.points),10000)
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyProgram
            inv: customer-&gt;forAll( age &gt;= 18 )
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.forAll(customer,new org.apache.commons.collections.Predicate(){public boolean evaluate(Object object){return org.andromda.translation.validation.OCLExpressions.greaterOrEqual(object.age,18);}})
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: name = 'Edward'
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(name,"Edward")
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: self.name = 'Edward'
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(this.name,"Edward")
        </to>
    </expression>

    <expression>
        <from>
            context Membership
            inv: customer.card.membership->includes( self )
        </from>
        <to>
            org.andromda.translation.validation.OCLCollections.includes(customer.card.membership,new org.apache.commons.collections.Predicate(){public boolean evaluate(Object object){return object.this;}})
        </to>
    </expression>

    <expression>
        <from>
            context Services
            inv: self.pointsOffered &gt; 0 implies not (self.pointsBurned = 0)
        </from>
        <to>
            (org.andromda.translation.validation.OCLExpressions.greater(this.pointsOffered,0)?!(org.andromda.translation.validation.OCLExpressions.equal(this.pointsBurned,0)):true)
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: title = (if isMale = true then 'Mr.' else 'Ms.' endif)
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(title,(if(org.andromda.translation.validation.OCLExpressions.equal(isMale,true)){"Mr.";}else{"Ms.";}))
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: self.age() &gt;= 0
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.greaterOrEqual(this.age(),0)
        </to>
    </expression>

    <expression>
        <from>
            context Customer
            inv: self.isRelatedTo(self) = true
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(this.isRelatedTo(this),true)
        </to>
    </expression>

    <expression>
        <from>
            context Membership
            inv: (actualLevel.name = 'Silver' implies card.color = Color::silver)
                 and
                 (actualLevel.name = 'Gold' implies card.color = Color::gold)
        </from>
        <to>
            ((org.andromda.translation.validation.OCLExpressions.equal(actualLevel.name,"Silver")?org.andromda.translation.validation.OCLExpressions.equal(card.color,Color):true))&amp;&amp;((org.andromda.translation.validation.OCLExpressions.equal(actualLevel.name,"Gold")?org.andromda.translation.validation.OCLExpressions.equal(card.color,Color):true))
        </to>
    </expression>

    <expression>
        <from>
            context LoyaltyAccount::isEmpty()
            pre : result = (points = 0)
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(result,(org.andromda.translation.validation.OCLExpressions.equal(points,0)))
        </to>
    </expression>

    <expression>
        <from>
            context StrutsFinalState::getFullPath()
            pre: getModel().getAllUseCases()->one(name = 'Prince') = true
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.one(getModel().getAllUseCases(),new org.apache.commons.collections.Predicate(){public boolean evaluate(Object object){return org.andromda.translation.validation.OCLExpressions.equal(object.name,"Prince");}}),true)
        </to>
    </expression>

<!--
    <expression>
        <from>
            context StrutsFinalState::getFullPath()
            pre: getModel().getAllUseCases()->one(item | item.name = 'Prince') = true
        </from>
        <to>
            org.andromda.translation.validation.OCLExpressions.equal(org.andromda.translation.validation.OCLCollections.one(getModel().getAllUseCases(),

            new Filter()
            {
                public boolean filter(Object item)
                {
                    return org.andromda.translation.validation.OCLExpressions.equal(MethodUtils.invokeMethod(item,"name",null),"Prince");
                }
            }


            ),true)
        </to>
    </expression>
-->

<!--
    <expression>
        <from>
        </from>
        <to>
        </to>
    </expression>
-->

</translation-test>

