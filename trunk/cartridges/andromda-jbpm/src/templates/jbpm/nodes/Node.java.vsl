#set ($generatedFile = "${node.nodeClassName}.java")
#if ($stringUtils.isNotBlank($node.nodePackageName))
#set ($generatedFile = "$stringUtils.replace($node.nodePackageName,'.','/')/$generatedFile")
package $node.nodePackageName;

#end
#set ($nodeInterfaceName = $node.processDefinition.nodeInterfaceName)
public final class $node.nodeClassName implements $nodeInterfaceName
{
    private org.jbpm.graph.exe.Token token = null;

    ${node.nodeClassName}(final org.jbpm.graph.exe.Token token)
    {
        this.token = token;
    }

    public org.jbpm.graph.exe.Token getToken()
    {
        return this.token;
    }

#if ($node.finalState)
    public void endProcess()
    {
        this.token.end();
        this.token.getProcessInstance().end();
    }

#elseif ($node.taskNode)
#foreach ($task in $node.tasks)
#set ($taskName = $stringUtils.upperCamelCaseName($task.name))
    public void start${taskName}Task()
    {
        final org.jbpm.taskmgmt.exe.TaskInstance task = this.get${taskName}Task();
        if (task != null)
        {
            task.start();
        }
    }

    public void finish${taskName}Task()
    {
        final org.jbpm.taskmgmt.exe.TaskInstance task = this.get${taskName}Task();
        if (task != null)
        {
            task.end();
        }
    }

    public boolean is${taskName}TaskFinished()
    {
        final org.jbpm.taskmgmt.exe.TaskInstance task = this.get${taskName}Task();
        return task == null ? true : task.hasEnded();
    }

#set ($taskField = "task${taskName}")
    private org.jbpm.taskmgmt.exe.TaskInstance $taskField = null;

    org.jbpm.taskmgmt.exe.TaskInstance get${taskName}Task()
    {
        if (this.$taskField == null)
        {
            final java.util.Collection tasks = this.token.getProcessInstance().getTaskMgmtInstance().getTaskInstances();
            for (final java.util.Iterator taskIterator = tasks.iterator(); taskIterator.hasNext() && this.$taskField == null;)
            {
                final org.jbpm.taskmgmt.exe.TaskInstance taskInstance = (org.jbpm.taskmgmt.exe.TaskInstance)taskIterator.next();
                if ("$task.name".equals(taskInstance.getName()))
                {
                    this.$taskField = taskInstance;
                }
            }
        }
        return this.$taskField;
    }

#end
#if ($node.outgoing.size() == 1)
    public $nodeInterfaceName signal()
    {
        this.token.signal();
        return new ${node.outgoing.iterator().next().target.nodeClassName}(this.token);
    }

#else
#foreach ($transition in $node.outgoing)
    public $nodeInterfaceName signal$stringUtils.upperCamelCaseName($transition.name)()
    {
        this.token.signal("transition.name");
        return new ${transition.target.nodeClassName}(this.token);
    }

#end
#end
#end
}