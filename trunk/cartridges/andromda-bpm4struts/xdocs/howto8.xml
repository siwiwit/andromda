<?xml version="1.0" encoding="iso-8859-1"?>

<document>

    <properties>
        <author email="draftdog@users.sourceforge.net">Wouter Zoons</author>
        <title>AndroMDA - Bpm4Struts - HowTo - Tables</title>
    </properties>

    <body>
        <section name="Tables">
            <p>
                It's possible to have the cartridge render tables for you from certain parameters
                modeled in UML. These tables are using the <a href="http://www.displaytag.org/">displaytag</a>
                tag-library behind the scenes.
            </p>
            <p>
                In order to have these tables rendered for you you will need to model a
                <a href="howto2.html#Page_Variables">page variable</a> that maps onto a descendant of
                <code>java.util.Collection</code> (for example <code>datatype::Collection</code>).
            </p>
            <p class="highlight">
                Do not specify type <code>java.util.Collection</code> directly, but use use
                <code>datatype::Collection</code> instead.
            </p>
            <p>
                Next you will simply need
                to model one or more tagged values onto that parameter. (If you choose to specify more than
                one property per value you can also separate them using commas, nevertheless, it is
                recommended to specify a value per property)
            </p>
<source><![CDATA[
@andromda.struts.view.table.columns=property1,property2,...,propertyN
]]></source>
            <p>
                Just make sure that each property listed has corresponding accessor methods for each element
                in the collection parameter. This requirement cannot be checked during development so failing
                to conform to it will result in a runtime error.
            </p>
            <subsection name="Hyperlinks">
                <p>
                    It's very common that users want to click on a row in the table and continue to the next page,
                    possibly showing the item in more detail. It's possible to have this feature generated by
                    associating one of the table columns to one of the exiting events on the same page.
                </p>
                <p>
                    First of all you will need to model an event with one or more parameters (if you are not sure how to
                    do that then re-read <a href="howto2.html#Event_Parameters">this previous section</a>), make sure
                    this event transition is going <em>out</em> of the page containing the table page-variable.
                </p>
                <p>
                    Second, you will need to make sure the event will be rendered as an hyperlink and not as a regular
                    form post, you can do that by using the <code>@andromda.struts.action.type=hyperlink</code>
                    tagged value on the transition itself.
                </p>
                <p>
                    Finally link this event to the table page-variable and specify the column in which the hyperlink is
                    to be rendered, this is particularly important since there
                    might be more than a single table from which to choose. In order to achieve this we will be using
                    the <code>@andromda.struts.action.tablelink=myTable.myColumn</code> tagged value on the transition
                    (replace <code>myTable</code> with the name of your table, and notice how to dot separates both
                    fields).
                </p>
                <p class="highlight">
                    If you don't specify a column name then the hyperlink will be rendered in its own column, the
                    link will show the name of your event, rather than the cell value.
                </p>
            </subsection>
            <subsection name="Submitting rows">
                <p>
                    Not only hyperlinks can be modeled this way, also events that work on individual rows. This is
                    very similar to the modeling of hyperlink events.
                </p>
                <p>
                    Model an event going out of the page holding showing the table, add one or more parameters to this
                    event. Every one of these parameters will now be rendered in a widget, and next to each
                    row there will be a button to apply this action on it. Clicking the button will invoke a JavaScript
                    function that will sumbit a form to the target action; browsers not supporting JavaScript or having
                    JavaScript disabled will not be able to use this functionality.
                </p>
                <p>
                    Don't forget to add the tagged value, but it's not needed to specify any column this time:
                    <code>@andromda.struts.action.tablelink=myTable</code> No need to specify a column name in this
                    tagged value as these buttons will always be put in their own column.
                </p>
                <p>
                    Any widget is allowed, but if you still prefer to have plain text rendered instead of a widget
                    then simply use the <code>plaintext</code> field type, like this:
<source><![CDATA[
    @andromda.struts.view.field.type=plaintext
]]></source>
                </p>
                <p class="highlight">
                    If there are many events linked to the same table, and the same parameter is repeated across
                    different events, then the hyperlink events with take priority, meaning you will never see any
                    input widget for those parameters in an hyperlink event.
                </p>
            </subsection>
            <subsection name="Multibox">
                <p>
                    One very special type of widget, which is a little more complicated to understand at first, is
                    the <code>multibox</code> widget. Basically it allows you to render checkboxes whose
                    <code>checked</code> statuses need to be controlled by another property.
                </p>
                <p>
                    Let's say you want to render a checkbox for each row, but the value behind is not of a
                    <code>boolean</code> type but a <code>String</code>; in that case you can setup a page-variable
                    which holds an <code>array</code> or a <code>Collection</code> of <code>String</code> instances,
                    when a value for a specific row matches at least one of the elements the checkbox will be checked.
                </p>
                <p>
                    The <code>available</code> column of the table in the image above has the following tagged values:
                </p>
<source><![CDATA[
@andromda.struts.view.field.tablelink=itemList
@andromda.struts.view.field.type=multibox
@andromda.struts.view.field.multibox=availableItems
]]></source>
                <p>
                    In this example the <code>availableItems</code> page-variable is used to match the
                    <code>available</code> property against.
                </p>
            </subsection>
        </section>
        <section name="Example">
            <p>
                This example is taken from the
                <a href="andromda-bpm4struts-cartridge/samples.html#online-store">Online Store</a> sample.
                It is showing two hyperlink events, on the <code>id</code> and <code>publisher</code> columns
                respectively, and one form event that will submit the <code>id</code>, <code>edition</code> and
                <code>available</code> fields (see the
                <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/andromda/samples/online-store/mda/src/uml/online-store.xml.zip">
                UML model</a>, opens in MagicDraw only).
            </p>
            <p>
                <img src="resources/howto/org/andromda/test/online-store-table.gif"/>
            </p>
            <subsection name="The 'id' hyperlink">
                <p>
                    In the <code>id</code> column you can see an hyperlink for each row. This has been achieved by
                    modeling the following things:
                </p>
                <p>
                    <ul>
                        <li>model an event going out of the page</li>
                        <li>add a parameter to this event's trigger, give it the name <code>id</code></li>
                        <li>add the <code>@andromda.struts.action.tablelink</code> tag to the event, the value should
                            be the name of the table separated from the column name using a dot, ie.
                            <code>itemList.id</code>. Not specifying the column name will make put this link in
                            a separate column on the right.
                        </li>
                        <li>add the <code>@andromda.struts.action.type=hyperlink</code> tag to the event, this denotes
                            this action to be rendered as an hyperlink pointing to the target Struts action.
                        </li>
                    </ul>
                </p>
                <p>
                    This feature is interesting when you want to see the details of a specific item in the list.
                </p>
            </subsection>
            <subsection name="The 'publisher' hyperlink">
                <p>
                    Equivalent to the <code>id</code> hyperlink, except that this time we add two parameters to this
                    event: <code>id</code> and <code>publisher</code>.
                </p>
                <p>
                    Make sure to have the hyperlink point to the <code>publisher</code> column, like this:
                    <code>@andromda.struts.action.tablelink=itemList.publisher</code>.
                </p>
                <p>
                    This feature is interesting when you want to see information on a related property, in this case
                    the homepage of the company or person that has published this item.
                </p>
            </subsection>
            <subsection name="The 'edition', 'available' and 'buy' widgets">
                <p>
                    All these elements make up a specific event, which has been modeled like this:
                </p>
                <p>
                    <ul>
                        <li>model an event going out of the page, call it <code>buy</code></li>
                        <li>for each field model a parameter, specify the appropriate widget for each of these
                            parameters (go <a href="howto2.html#Event_Parameters">here</a> if you don't remember
                            how to do that), in this example <code>edition</code> is a 'select' and
                            <code>available</code> is a 'multibox'
                        </li>
                        <li>add the <code>@andromda.struts.action.tablelink</code> tag to the event, the value should
                            be the name of the table
                        </li>
                    </ul>
                </p>
                <p class="highlight">
                    If you wish to include the <code>title</code> parameter but you don't want to have it rendered
                    as an input field, then simply use the <code>@andromda.struts.view.field.type=plaintext</code>
                    tagged value on that parameter.
                </p>
            </subsection>
        </section>
        <section name="Next">
            <p>
                Next up is the <a href="howto9.html">Other Content</a> section.
            </p>
        </section>
    </body>
</document>
