##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML hyperlink tags for the argument action
##
##
#macro ( renderHyperlink $action $indent )
#set ($roles = $action.actionRoles)
#set ($triggerKey = $action.actionTrigger.triggerKey)
#set ($parameters = $action.actionParameters)
#set ($formBeanName = $action.activityGraph.useCase.formBeanName)
#set ($securityEnabled = ($security=="true") && ($roles != "") )
#if ($securityEnabled)
${indent}<logic:present role="$roles">
#end
#if(!$parameters.empty)
#set ($mapName = "$str.toJavaMethodName($triggerKey)Parameters")
${indent}<%
${indent}  java.util.Map $mapName = new java.util.HashMap();
${indent}  pageContext.setAttribute("$mapName", $mapName, javax.servlet.jsp.PageContext.PAGE_SCOPE);
${indent}%>
#end
#foreach ($parameter in $parameters)
#if ($parameter.hasBackingList())
${indent}<logic:iterate id="$parameter.name" name="$formBeanName" property="$parameter.backingListName" scope="page">
${indent}<%
${indent}    ${mapName}.put("$parameter.name", $parameter.name);
${indent}%>
#else
${indent}<%
${indent}    ${mapName}.put("$parameter.name", ${formBeanName}.${parameter.getterName}());
${indent}%>
#end
#end
${indent}    <p>
#if($parameters.empty)
${indent}        <html:link action="$action.actionPath" titleKey="${action.messageKey}.$triggerKey" scope="page">
#else
${indent}        <html:link action="$action.actionPath" titleKey="${action.messageKey}.$triggerKey" name="$mapName" scope="page">
#end
${indent}            <bean:message key="${action.messageKey}.$triggerKey"/>:
#if(!$parameters.empty)
${indent}            <bean:write name="$mapName" scope="page"/>
#end
${indent}        </html:link>
${indent}    </p>
#foreach ($parameter in $parameters)
#if ($parameter.hasBackingList())
${indent}    </logic:iterate>
#end
#end
#if ($securityEnabled)
${indent}</logic:present>
${indent}<logic:notPresent role="$roles">
${indent}   <bean:message key="${action.messageKey}.$triggerKey"/> <br/>
${indent}</logic:notPresent>
#end
#end
##
##
##      This macro takes care of rendering the appropriate Struts
##      HTML button tags for the argument action
##
##
#macro ( renderFormButtons $action $indent )
#set ($messageKey = $action.messageKey)
#set ($trigger = $action.actionTrigger)
#set ($roles = $action.actionRoles)
#set ($securityEnabled = ($security=="true") && ($roles != "") )
#if ($securityEnabled)
${indent}<logic:present role="$roles">
#end
${indent}   <html:submit titleKey="${messageKey}.$trigger.titleKey">
${indent}       <bean:message key="${messageKey}.$trigger.triggerKey"/>
${indent}   </html:submit>
#if ($action.resettable)
${indent}   <html:reset titleKey="${messageKey}.$trigger.resetTitleKey">
${indent}       <bean:message key="${messageKey}.$trigger.resetMessageKey"/>
${indent}   </html:reset>
#end
#if ($securityEnabled)
${indent}</logic:present>
${indent}<logic:notPresent role="$roles">
${indent}   <html:submit titleKey="${messageKey}.$trigger.notAllowedTitleKey" disabled="true">
${indent}       <bean:message key="${messageKey}.$trigger.triggerKey"/>
${indent}   </html:submit>
#if ($action.resettable)
${indent}   <html:reset titleKey="${messageKey}.$trigger.resetNotAllowedTitleKey" disabled="true">
${indent}       <bean:message key="${messageKey}.$trigger.resetMessageKey"/>
${indent}   </html:reset>
#end
${indent}</logic:notPresent>
#end
#end
##
##
##      This macro takes care of rendering the appropriate Struts tags
##      for the argument form field
##
##
#macro ( renderFormField $action $field $indent)
#set ($fieldName = $field.name)
#set ($widgetType = $field.widgetType)
#set ($formBeanName = $action.activityGraph.useCase.formBeanName)
##
##  Depending on the type of the input field we render a different widget
##
##
##      R A D I O B U T T O N
##
#if ($widgetType == 'radio')
#if ($field.readOnly)
#set ($disabled = 'disabled="disabled"')
#else
#set ($disabled = '')
#end
${indent}<table>
#foreach ($optionKey in $field.optionKeys)
${indent}    <tr>
${indent}        <td>
${indent}            <input type="$widgetType" name="$fieldName" value="$optionKey" title="<bean:message key="${messageKey}.${optionKey}.title"/>" $disabled><bean:write name="$formBeanName" property="$fieldName" scope="page"/></input>
${indent}            <bean:message key="${messageKey}.$optionKey"/>
${indent}        </td>
${indent}    </tr>
#end
${indent}</table>
##
##      C H E C K B O X
##
#elseif ($widgetType == 'checkbox')
#if ($field.readOnly)
#set ($disabled = 'disabled="disabled"')
#else
#set ($disabled = '')
#end
${indent}<input type="$widgetType" name="$fieldName" value="<bean:write name="$formBeanName" property="$fieldName" scope="page"/>" title="<bean:message key="${messageKey}.$field.titleKey"/>" $disabled></input>
##
##      T E X T F I E L D       &       P A S S W O R D
##
#elseif ( ($widgetType == 'text') || ($widgetType == 'password') )
#if ($field.readOnly)
#set ($readonly = 'readonly="readonly"')
#else
#set ($readonly = '')
#end
${indent}<input type="$widgetType" name="$fieldName" title="<bean:message key="${messageKey}.$field.titleKey"/>" $readonly value="<bean:write name="$formBeanName" property="$fieldName" scope="page"/>"></input>
##
##      T E X T A R E A
##
#elseif ($widgetType == 'textarea')
#if ($field.readOnly)
#set ($readonly = 'readonly="readonly"')
#else
#set ($readonly = '')
#end
${indent}<$widgetType title="<bean:message key="${messageKey}.$field.titleKey"/>" $readonly>
${indent}    <bean:write name="$formBeanName" property="$fieldName" scope="page"/>
${indent}</$widgetType>
##
##      H I D D E N
##
#elseif ($widgetType == 'hidden')
${indent}<input type="$widgetType" name="$fieldName" value="<bean:write name="$formBeanName" property="$fieldName" scope="page"/>"></input>
##
##      C O M B O B O X     &      L I S T
##
#elseif ($widgetType == 'select')
#if ($field.multiple)
#set ($multiple = 'multiple="multiple"')
#else
#set ($multiple = '')
#end
#if ($field.readOnly)
#set ($disabled = 'disabled="disabled"')
#else
#set ($disabled = '')
#end
#if ($field.type.collectionType)
#set ($selectProperty = "${fieldName}AsArray")
#else
#set ($selectProperty = "$fieldName")
#end
${indent}<select name="$selectProperty" title="<bean:message key="${messageKey}.$field.titleKey"/>" $disabled $multiple>
${indent}   <logic:iterate id="option" name="$formBeanName" property="$field.backingListName" scope="page">
${indent}       <logic:equal name="$formBeanName" property="$selectProperty" value="option" scope="page">
${indent}           <option selected value="<bean:write name="option" scope="page"/>"><bean:write name="option" scope="page"/></option>
${indent}       </logic:equal>
${indent}       <logic:notEqual name="$formBeanName" property="$selectProperty" value="option" scope="page">
${indent}           <option value="<bean:write name="option" scope="page"/>"><bean:write name="option" scope="page"/></option>
${indent}       </logic:notEqual>
${indent}   </logic:iterate>
${indent}</select>
##
##      Any other field will be rendered as plain text (no input)
##
#else
${indent}<bean:write name="$formBeanName" property="$fieldName" scope="page"/>
#end
#end
