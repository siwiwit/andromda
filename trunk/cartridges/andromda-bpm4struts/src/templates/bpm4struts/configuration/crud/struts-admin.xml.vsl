#if (!$manageables.empty)
##
##  CONSTANTS
##
#if(!$applicationUseCases.empty)#set($applicationUseCase=$applicationUseCases.iterator().next())#end
#set ($validationDesired = ($clientValidation=='true' || $serverValidation=='true'))
##
##  START TEMPLATE
##
<?xml version="1.0" encoding="$xmlEncoding" ?>

<!DOCTYPE struts-config PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
    "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">

<struts-config>

    <form-beans>
#foreach ($manageable in $manageables)
        <form-bean name="$manageable.preloadFormBeanName" type="$manageable.formBeanType" />
#if ($manageable.create)
        <form-bean name="$manageable.createFormBeanName" type="$manageable.formBeanType" />
#end
#if ($manageable.read)
        <form-bean name="$manageable.readFormBeanName" type="$manageable.formBeanType" />
#end
#if ($manageable.update)
        <form-bean name="$manageable.updateFormBeanName" type="$manageable.formBeanType" />
#end
#if ($manageable.delete)
        <form-bean name="$manageable.deleteFormBeanName" type="$manageable.formBeanType" />
#end
#end
    </form-beans>

    <global-forwards>
#foreach ($manageable in $manageables)
#if ($manageable.preload)
        <forward name="$manageable.preloadForwardName" path="${manageable.preloadForwardPath}.do" redirect="false" />
#end
#end
    </global-forwards>

   <action-mappings>
#foreach ($manageable in $manageables)
#if ($manageable.preload)
        <action path="$manageable.preloadActionPath" type="$manageable.preloadActionType" name="$manageable.preloadFormBeanName"
            scope="request" input="$manageable.pageFullPath" unknown="false" validate="false">
        </action>
#end
#if ($manageable.create)
        <action path="$manageable.createActionPath" type="$manageable.createActionType" name="$manageable.createFormBeanName"
            scope="request" input="$manageable.actionInput" unknown="false" validate="false">
            <exception type="java.lang.Exception" key="$manageable.createExceptionKey" path="$manageable.createExceptionPath" scope="request" />
        </action>
#end
#if ($manageable.read)
        <action path="$manageable.readActionPath" type="$manageable.readActionType" name="$manageable.readFormBeanName"
            scope="request" input="$manageable.pageFullPath" unknown="false" validate="false">
            <exception type="java.lang.Exception" key="$manageable.readExceptionKey" path="$manageable.readExceptionPath" scope="request" />
        </action>
#end
#if ($manageable.update)
        <action path="$manageable.updateActionPath" type="$manageable.updateActionType" name="$manageable.updateFormBeanName"
            scope="request" input="$manageable.actionInput" unknown="false" validate="false">
            <exception type="java.lang.Exception" key="$manageable.updateExceptionKey" path="$manageable.updateExceptionPath" scope="request" />
        </action>
#end
#if ($manageable.delete)
        <action path="$manageable.deleteActionPath" type="$manageable.deleteActionType" name="$manageable.deleteFormBeanName"
            scope="request" input="$manageable.actionInput" unknown="false" validate="false">
            <exception type="java.lang.Exception" key="$manageable.deleteExceptionKey" path="$manageable.deleteExceptionPath" scope="request" />
        </action>
#end
#end
   </action-mappings>

  <message-resources parameter="application-resources" null="false"/>

#*
#if ($applicationUseCase.applicationValidationRequired && $validationDesired)
  <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
    <set-property property="pathnames" value="/WEB-INF/validation-admin.xml,/WEB-INF/validator-rules.xml"/>
    <set-property property="stopOnFirstError" value="false"/>
  </plug-in>

#end
*#
  <plug-in className="org.apache.struts.tiles.TilesPlugin">
    <set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml"/>
    <set-property property="definitions-parser-validate" value="true"/>
    <set-property property="moduleAware" value="true"/>
  </plug-in>

</struts-config>
#end
