#set ($generatedFile = "${operation.interfaceFullPath}.java")
package $operation.interfacePackageName;

/**
 * This form encapsulates the fields that are used in the execution of the
 * <code>$operation.name</code> method, which is located on the
 * <code>$operation.controller.fullyQualifiedName</code> controller.
 *
$operation.getDocumentation(" * ")
 *
 * @see ${operation.controller.fullyQualifiedName}#${operation.name}
 */
public interface $operation.interfaceName
{
#foreach ($field in $operation.formFields)
#set ($fieldType = $field.type.fullyQualifiedName)
#set ($fieldName = $field.name)
#if ($field.type.collectionType)
    /**
     * This field is a collection type, and this method allows you to set it into the form.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.setterName}AsArray(Object[])
     */
    public void ${field.setterName}($fieldType $fieldName);
    
    /**
     * This field is a collection type, and this method allows you to get it from the form.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.getterName}AsArray()
     */
    public $fieldType ${field.getterName}();

    /**
     * This field is a collection type, and this method allows you to set it as an
     * array into the form, conversion will be automatically performed.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.setterName}($fieldType)
     */
    public void ${field.setterName}AsArray(Object[] $fieldName);
    
    /**
     * This field is a collection type, and this method allows you to get it as an
     * array from the form, conversion will be automatically performed.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.getterName}()
     */
    public Object[] ${field.getterName}AsArray();
    
#elseif ($field.date)
    /**
     * This field is a date type, and this method allows you to set it into the form.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.setterName}(java.lang.String)
     */
    public void ${field.setterName}AsDate($fieldType $fieldName);
    
    /**
     * This field is a date type, and this method allows you to get it from the form.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.getterName}()
     */
    public $fieldType ${field.getterName}AsDate();

    /**
     * This field is a date type, and this method allows you to set it into the form as a String.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.setterName}AsDate($fieldType)
     */
    public void ${field.setterName}(java.lang.String ${fieldName});
    
    /**
     * This field is a date type, and this method allows you to get it from the form as a String.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.getterName}AsDate()
     */
    public java.lang.String ${field.getterName}();
    
#elseif ($field.type.mapType)
    /**
     * Sets the argument value for the specified key into the <code>$field.name</code> Map.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.setterName}(java.util.Map)
     */
    public void ${field.setterName}Value(java.lang.String key, Object value);
    
    /**
     * Gets the argument value for the specified key from the <code>$field.name</code> Map.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.getterName}()
     */
    public java.lang.Object ${field.getterName}Value(java.lang.String key);

    /**
     * Sets the <code>$field.name</code> Map to the specified value.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.setterName}(java.util.Map)
     */
    public void ${field.setterName}(java.util.Map $fieldName);
    
    /**
     * Gets the <code>$field.name</code> Map.
     *
$field.getDocumentation("     * ")
     *
     * @see #${field.getterName}Value(java.lang.String)
     */
    public java.util.Map ${field.getterName}();
    
#else
    /**
     * Sets the <code>$field.name</code> field.
     *
$field.getDocumentation("     * ")
     */
    public void ${field.setterName}($fieldType $fieldName);
    
    /**
     * Gets the <code>$field.name</code> field.
     *
$field.getDocumentation("     * ")
     */
    public $fieldType ${field.getterName}();
    
#end
    /**
     * Resets the <code>$field.name</code> field.
     */
    public void ${field.resetName}();

#if ($field.selectable)
#set ($listType = "Object[]")
#set ($backingListName = $field.backingListName)
#set ($backingListMethod = $str.capitalize($backingListName))
#set ($valueListName = $field.valueListName)
#set ($valueListMethod = $str.capitalize($valueListName))
#set ($labelListName = $field.labelListName)
#set ($labelListMethod = $str.capitalize($labelListName))
    /**
     * The <code>$field.name</code> field can be selected from a list,
     * this method allows you to retrieve the current elements from that list.
     * <p/>
     * <i>Please note that the elements from that list are key value pairs, so you will
     * need to call <code>getLabel()</code> and <code>getValue()</code> to get the label and
     * value for this entry respectively.</i>
     *
     * @see #${field.getterName}()
     * @see #get${valueListMethod}()
     * @see #get${labelListMethod}()
     */
    public $listType get${backingListMethod}();
    
    /**
     * The <code>$field.name</code> field can be selected from a list,
     * this method allows you to retrieve the values from that list.
     *
     * @see #${field.getterName}()
     * @see #get${backingListMethod}()
     */
    public $listType get${valueListMethod}();
    
    /**
     * The <code>$field.name</code> field can be selected from a list,
     * this method allows you to set the values for that list.
     *
     * @see #${field.getterName}()
     * @see #get${backingListMethod}()
     */
    public void set${valueListMethod}($listType $valueListName);
    
    /**
     * The <code>$field.name</code> field can be selected from a list,
     * this method allows you to retrieve the labels from that list.
     *
     * @see #${field.getterName}()
     * @see #get${backingListMethod}()
     */
    public $listType get${labelListMethod}();
    
    /**
     * The <code>$field.name</code> field can be selected from a list,
     * this method allows you to set the labels for that list.
     *
     * @see #${field.getterName}()
     * @see #get${backingListMethod}()
     */
    public void set${labelListMethod}($listType $labelListName);

#end
#end
}
