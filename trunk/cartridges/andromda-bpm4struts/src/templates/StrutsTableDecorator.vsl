#set ($generatedFile = "${table.decoratorFullPath}.java")
#set ($quote = '"')
#set ($separator = false)## this is initialization
##
##      START TEMPLATE
##
package $table.decoratorPackageName;

#set ($useCase = $table.jsp.useCase)
#if ($useCase.formBeanPackageName != $table.decoratorPackageName)
import $useCase.formBeanType;
#end

import javax.servlet.jsp.PageContext;
import javax.servlet.http.HttpServletRequest;

import org.displaytag.decorator.TableDecorator;
import org.apache.commons.beanutils.PropertyUtils;

public class $table.decoratorClassName extends TableDecorator
{
    // this class uses underscores to avoid naming conflict with user properties
#foreach ($link in $table.tableLinks)

    public String ${link.getterName}()
    {
        try
        {
#set ($formType = $useCase.formBeanType)
            final $formType _form = ($formType)getPageContext().getAttribute("$useCase.formBeanName", PageContext.SESSION_SCOPE);

            final Object _row = getCurrentRowObject();
            final StringBuffer _link = new StringBuffer();

            _link.append("<a href=\"");
            _link.append(((HttpServletRequest)getPageContext().getRequest()).getContextPath());
            _link.append("${link.action.actionPath}.do");
#foreach ($parameter in $link.action.actionParameters)
#if ($parameter.tableLink)
#set ($getter = "PropertyUtils.getProperty(_row, $quote$parameter.name$quote)")
#else
#set ($getter = "_form.${parameter.getterName}()")
#end
#if ($separator)
#set ($separator = '&')
#else
#set ($separator = '?')
#end
#if ($parameter.type.arrayType)
            Object[] $parameter.name = (Object[])$getter;
            if (array != null)
            {
                for (int i=0; i<${parameter.name}.length; i++)
                {
                    _link.append("$separator$parameter.name=");
                    _link.append(array[i]);
                }
            }
#elseif ($parameter.type.collectionType)
            java.util.Collection $parameter.name = (java.util.Collection)$getter;
            if ($parameter.name != null && !${parameter.name}.isEmpty())
            {
                for (java.util.Iterator iterator=${parameter.name}.iterator(); iterator.hasNext();)
                {
                    _link.append("$separator$parameter.name=");
                    _link.append(iterator.next());
                }
            }
#elseif ($parameter.type.primitiveType)
            _link.append("$separator$parameter.name=");
            _link.append($getter);
#else
            Object $parameter.name = $getter;
            if ($parameter.name != $parameter.nullValue)
            {
                _link.append("$separator$parameter.name=");
                _link.append($parameter.name);
            }
#end
#end
            _link.append("\">");
            _link.append(PropertyUtils.getProperty(_row, "$link.tableLinkColumnName"));
            _link.append("</a>");

            return _link.toString();
        }
        catch (Exception e)
        {
            return e.getMessage();
        }
    }
#end
}
