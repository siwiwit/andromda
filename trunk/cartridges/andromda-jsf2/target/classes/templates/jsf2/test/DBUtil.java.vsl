// license-header java merge-point
// Generated by andromda-jsf cartridge (test\DBUtil.java.vsl) DO NOT EDIT!
#set ($className = "DBUtil")
#if ($stringUtils.isNotEmpty($managedBeansPackage))
package $managedBeansPackage;
#end

public class DBUtil {

	private java.sql.Connection connection;
	private org.dbunit.database.IDatabaseConnection iDatabaseconnection;
	
	public DBUtil() {
		try {
			Class.forName(System.getProperty("dbunitDriver"));
		} catch (ClassNotFoundException e) {
			throw new IllegalStateException("Database driver not found.");
		}
	}
	
	public void cleanDataBase(String file) throws Exception {
		try {
			openDataBaseConnection();
			final org.dbunit.dataset.IDataSet dataSet = new org.dbunit.dataset.xml.FlatXmlDataSetBuilder().build(new java.io.File(file));
			org.dbunit.operation.DatabaseOperation.CLEAN_INSERT.execute(iDatabaseconnection, dataSet);
		} finally {
			closeDataBaseConnection();
		}
	}
	
	public int getTableRowCount(String table) throws Exception {
		int rowCount;
		try {
			openDataBaseConnection();
			final org.dbunit.dataset.IDataSet databaseDataSet = iDatabaseconnection.createDataSet();
			final org.dbunit.dataset.ITable iTable = databaseDataSet.getTable(table);
			rowCount = iTable.getRowCount();
		} finally {
			closeDataBaseConnection();
		}
		return rowCount;
	}
	
	private void openDataBaseConnection() {
		final String url = System.getProperty("dbunitUrl");
		final String username = System.getProperty("dbunitUsername");
		final String password = System.getProperty("dbunitPassword");
		try {
			if(connection != null && !connection.isClosed()) {
				closeDataBaseConnection();
			}
			connection = java.sql.DriverManager.getConnection(url, username, password);
			iDatabaseconnection = new org.dbunit.database.DatabaseConnection(connection);
		} catch (Exception e) {
			throw new IllegalStateException("Could not open a connection to the database.");
		} 
	}
	
	private void closeDataBaseConnection() {
		try {
			iDatabaseconnection.close();
			connection.close();
		} catch (java.sql.SQLException e) {
			throw new IllegalStateException("Could not close a connection to the database.");
		}		
	}
}
