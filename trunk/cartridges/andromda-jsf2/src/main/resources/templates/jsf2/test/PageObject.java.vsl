#set ($className = "${view.pageObjectClassName}Page")
#set ($generatedFile = "${view.fullyQualifiedPageObjectClassPath}Page.java")
// license-header java merge-point
// Generated by andromda-jsf cartridge (test\PageObject.java.vsl)
package $view.packageName;

import ${managedBeansPackage}.PageBase;
import ${managedBeansPackage}.FieldValue;

/**
 * PageObject of $view.name
 */
public abstract class ${className} extends PageBase
{

#foreach ($action in $view.actions)

#foreach ($field in $action.formFields)
#set($constName = "CONST_${action.formBeanName.toUpperCase()}_${field.name.toUpperCase()}")
    public static final String ${constName} = "${action.formBeanName}:${field.name}";
    public static final String ${constName}_ICON = "${action.formBeanName}:${field.name}::icon";
    public static final String ${constName}_MSG = "${action.formBeanName}:${field.name}::msg";
    
    public boolean isDisplayed${stringUtils.upperCamelCaseName($action.formBeanName)}${stringUtils.upperCamelCaseName($field.name)}Icon()
    {
        waitVisibilityById(${constName}_ICON);
        return isDisplayedById(${constName}_ICON);    
    }
    
    public String getDisplayed${stringUtils.upperCamelCaseName($action.formBeanName)}${stringUtils.upperCamelCaseName($field.name)}Msg() {
        waitVisibilityById(${constName}_MSG);
        return getTextById(${constName}_MSG);
    }    
#end

#if(!$action.tableLink)
#set($triggerId="${action.triggerName}Action")
#set($triggerConst="CONST_${action.triggerName.toUpperCase()}_ACTION")
    public static final String ${triggerConst} = "${action.formBeanName}:${triggerId}";
    
    public void do${stringUtils.upperCamelCaseName($action.formBeanName)}${stringUtils.upperCamelCaseName($triggerId)}(FieldValue... fields)
    {
        setForm(fields);
        sendClickById(${triggerConst});
    }
    
#end
#end

}
