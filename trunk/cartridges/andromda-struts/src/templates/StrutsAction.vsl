#set ($packagename = $class.packageName)
package $packagename;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

#foreach ( $associationEnd in $class.associationEnds )
#set ($target = $associationEnd.target)
#if ($target.navigable)
    #set ($class2 = $target.type)
    #if ($class2)
        #set ($class2packagename = ${class2.packageName})
        #if ($class2packagename != $packagename)
import ${class2.fullyQualifiedName};
        #end
    #end
#end
#end

#foreach ( $dep in $class.sourceDependencies )
    #set ($class2 = $dep.targetElement)
    #if ($class2)
        #set ($class2packagename = $class2.packageName)
        #if ($class2packagename != $packagename)
import ${class2.fullyQualifiedName};
        #end
    #end
#end

/**
$class.getDocumentation(" * ");
 *
 *
#foreach ( $tgv in $class.taggedValues )
#if ($tgv.tag != "documentation")
#if ($tgv.tag == "---")
    #set ($tag = "")
#else
    #set ($tag = $tgv.tag)
#end
 * $tag    $tgv.value
#end
#end
 *
 */
public class ${class.name} extends Action
{

    /**
     * @see Action#perform(ActionMapping, ActionForm, HttpServletRequest, HttpServletResponse)
     */
    public ActionForward perform(
        ActionMapping mapping,
        ActionForm form,
        HttpServletRequest request,
        HttpServletResponse response)
        throws IOException, ServletException
    {
        // Validate the request parameters specified by the user
        ActionErrors errors = new ActionErrors();

#foreach ( $associationEnd in $class.associationEnd )
#set($target = $associationEnd.otherEnd)
#if ($target.navigable)
#if ($target.name == "form")
    #set ($class2 = $target.type)
    #if ($class2)
        $class2.name myForm = ($class2.name) form;
    #end
#end
#end
#end

        try
        {
            // do somethingd
            // myForm.setSomething(...);

	        // if (something goes wrong)
            //    errors.add(ActionErrors.GLOBAL_ERROR,
            //                new ActionError("error.my.resource"));

            // Report any errors we have discovered back to the original form
            if (!errors.empty()) {
                saveErrors(request, errors);
                return (new ActionForward(mapping.getInput()));
            }

            // return control
            return (mapping.findForward("success"));
        }
        catch (Exception e)
        {
            throw new ServletException(e.getMessage());
            // or ... return (mapping.findForward("failure"));
        }
    }
}
