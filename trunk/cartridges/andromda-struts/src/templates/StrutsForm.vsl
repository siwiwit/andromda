#set ($packagename = $class.packageName)
package $packagename;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;

import org.andromda.cartridges.struts.FormFieldMapper;
import java.text.ParseException;

#if ($class.hasIdentifiers())
#set ($primKey = $class.identifiers.iterator().next())
#end
#set ($primKeyTypeName = $primKey.type.fullyQualifiedName)

#foreach ( $associationEnd in $class.associationEnds)
#set($target = $associationEnd.otherEnd)
#if ($target.navigable)
    #set ($class2 = $target.type)
    #if ($class2)
        #set ($class2packagename = $class2.type.packageName)
        #if ($class2packagename != $packagename)
import $class2.type.fullyQualifiedName;
        #end
    #end
#end
#end

#foreach ( $dep in $class.dependencies )
    #set ($class2 = $dep.targetElement)
    #if ($class2)
        #set ($class2packagename = $class2.type.packageName)
        #if ($class2packagename != $packagename)
import $class2.type.fullyQualifiedName;
        #end
    #end
#end

/**
$class.getDocumentation(" * ")
 *
 * @struts:form name="$class.name"
 *
#foreach ( $tgv in $class.taggedValues )
#if ($tgv.name != "documentation")
#if ($tgv.name == "---")
    #set ($tag = "")
#else
    #set ($tag = $tgv.name)
#end
 * $tag    $tgv.value
#end
#end
 *
 */
public class ${class.name} extends ActionForm
{
#foreach ( $att in $class.attributes )
#set ($attfqtypename = $att.type.fullyQualifiedName)
#if ($attfqtypename == "java.util.Collection")
  #set ($attJavaType = "java.util.Collection")
#else
  #set ($attJavaType = "String")
#end
    private $attJavaType ${att.name};
#end

#foreach ( $att in $class.attributes )
#set ($attfqtypename = $att.type.fullyQualifiedName)
#set ($atttypename = $att.type.name)
#if ($attfqtypename == "java.util.Collection")
  #set ($attJavaType = "java.util.Collection")
#else
  #set ($attJavaType = "String")
#end

   /**
$att.getDocumentation("    * ")
    *
    */
#if ($attfqtypename != "java.util.Collection")
    public String get${str.capitalize(${att.name})}()
    {
        return this.${att.name};
    }

    public void set${str.capitalize(${att.name})}(String newValue)
    {
        this.${att.name} = newValue;
    }

    public $attfqtypename getDecoded${str.capitalize(${att.name})}()
        throws ParseException
    {
#if ($attfqtypename == "java.lang.String")
        return this.${att.name};
#elseif ($attfqtypename == "java.lang.int" || $attfqtypename == "int")
        return (this.${att.name} == null) ? 0 : FormFieldMapper.mapToInt(this.${att.name});
#else
        return (this.${att.name} == null) ? null : FormFieldMapper.mapTo${atttypename}(this.${att.name});
#end
    }

    public void setDecoded${str.capitalize(${att.name})}(${attfqtypename} newValue)
    {
#if ($attfqtypename == "java.lang.String")
        this.${att.name} = newValue;
#elseif ($attfqtypename == "java.lang.int" || $attfqtypename == "int")
        this.${att.name} = FormFieldMapper.mapFromInt(newValue);
#else
        this.${att.name} = (newValue == null) ? null : FormFieldMapper.mapFrom${atttypename}(newValue);
#end
    }

#else   ## Collection
    public $attJavaType get${str.capitalize(${att.name})}()
    {
        return this.${att.name};
    }

    public void set${str.capitalize(${att.name})}($attJavaType newValue)
    {
        this.${att.name} = newValue;
    }
#end

#end
}
