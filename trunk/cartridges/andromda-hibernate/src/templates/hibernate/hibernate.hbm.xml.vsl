## Only produce the file if the entity is
## a root entity in hibernate terms.
#if ($entity.rootInheritanceEntity)
#set ($generatedFile = "${entity.packagePath}/${entity.entityName}.hbm.xml")
<?xml version="1.0" encoding="$xmlEncoding"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 2.0//EN"
          "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">

<hibernate-mapping default-cascade="$entity.hibernateDefaultCascade">
    <class name="$entity.fullyQualifiedEntityImplementationName" table="$entity.tableName"#if($entity.hibernateProxy) proxy="$entity.fullyQualifiedEntityImplementationName"#end>
#if($hibernateEnableCache == "true")
        <cache usage="$entity.hibernateCacheType" />
#end
#set ($identifier = $entity.identifiers.iterator().next())
        <id name="$identifier.name" type="$identifier.type.fullyQualifiedName" column="$identifier.columnName" unsaved-value="null">
            <generator class="$entity.hibernateGeneratorClass">
#if ($entity.sequenceHibernateGeneratorClass)
                <param name="sequence">${entity.tableName}_SEQ</param>
#elseif ($entity.foreignHibernateGeneratorClass)
                <param name="property">$entity.parentEnd.name</param>
#end
            </generator>
        </id>
#if (!$entity.specializations.empty && $entity.hibernateInheritanceClass)
        <discriminator column="$entity.hibernateDiscriminatorColumn" type="$entity.hibernateDiscriminatorType"/>
#end
#if ($stringUtils.isNotBlank($versionProperty))
        <version name="$versionProperty" type="int" column="$versionProperty"/>
#end
## If super inheritance == interface, render super properties etc
#set ( $generalization = $entity.generalization )
#if($generalization && $generalization.hibernateInheritanceInterface)
#renderPropertiesAndAssociations($generalization)
#end
## render the properties and associations (if any)
#renderPropertiesAndAssociations($entity)
## Provide the specialization if this is a superclass
#if (!$entity.specializations.empty)
## render the subclass elements if class or subclass strategy.
#if ( $entity.hibernateInheritanceClass || $entity.hibernateInheritanceSubclass )
#foreach ($entity in $entity.specializations)
#renderSubClass($entity)
#end ## foreach
#end ## ( $entity.hibernateInheritanceClass || $entity.hibernateInheritanceSubclass )
#end ## end (!$entity.specializations.empty)
    </class>
</hibernate-mapping>
#end