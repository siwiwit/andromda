#set ($packagename = $transform.findPackageName($class.package))
package $packagename;

#foreach ( $dep in $class.dependencies )
    #set ($class2 = $transform.findClassById($dep.targetType))
    #if ($transform.getStereotype($dep.id) == "exception")
        #set ($defaultException = $class2)
    #end
#end

public class ${class.name}BeanImpl
    extends ${class.name}Bean
    implements javax.ejb.SessionBean
{
    // concrete business methods that were declared
    // abstract in class ${class.name}Bean ...

#foreach ( $op in $class.operations)
#set ($msig = $transform.getOperationSignature($op))
#set ($returntype = $transform.findFullyQualifiedName($op.getType()))
#if ($defaultException)
    $op.visibility $returntype ${msig}
        throws $defaultException.name {
#else
    $op.visibility $returntype ${msig} {
#end
        // TODO: put your implementation here.
#if ("void" != $returntype)

        // Dummy return value, just that the file compiles
#if (!$str.isPrimitiveType($returntype))
        return null;
#elseif ("boolean" == $returntype)
        return false;
#else
        return ($returntype)0;
#end
#end
    }


#end

    // ---------- the usual session bean stuff... ------------

    public void setSessionContext(javax.ejb.SessionContext ctx)
    {
        //Log.trace("${class.name}Bean.setSessionContext...");
        super.setSessionContext (ctx);
    }

    public void ejbRemove()
    {
        //Log.trace(
        //    "${class.name}Bean.ejbRemove...");
    }

    public void ejbPassivate()
    {
        //Log.trace("${class.name}Bean.ejbPassivate...");
    }

    public void ejbActivate()
    {
        //Log.trace("${class.name}Bean.ejbActivate...");
    }
}
