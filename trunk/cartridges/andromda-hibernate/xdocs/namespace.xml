<?xml version="1.0" encoding="UTF-8"?>

<document>
    <properties>
        <title>Hibernate Cartridge Namespace</title>
    </properties>
    <body>
        <section name="Hibernate Cartridge Namespace Properties">
            <p>
                In addition to the applicable
                <a href="../andromda-metafacades-uml/namespace.html">UML Metafacade</a> namespace
                properties which may also be used, this page describes
                namespace properties specific to this cartridge only.
            </p>
            <table>
                <tr>
                    <td>
                          hibernateTypeMappingsUri
                    </td>
                    <td>
                          URI specifying the specific mappings from model types to hibernate types.
                          (i.e.
                        <code>file:${basedir}/HibernateTypeMappings.xml</code>). This
                        is not necessary but useful for defining hibernate user types (when
                        hibernate doesn't support a specific type in the manner needed
                        for your application).
                    </td>
                    <td>
                          No
                    </td>
                </tr>
                <tr>
                    <td>
                        customTypesPackage
                    </td>
                    <td>
                        The package to which hibernate custom types contained
                        within the cartridge should be output.
                    </td>
                    <td>
                        No, default is
                        <code>org.andromda.persistence.hibernate</code>
                    </td>
                </tr>
                <tr>
                    <td>
                          entities
                    </td>
                    <td>
                          The directory to which hibernate entities are generated.
                    </td>
                    <td>
                          Yes (unless
                        <code>ignore</code> is specified for this property)
                    </td>
                </tr>
                <tr>
                    <td>
                          entity-impls
                    </td>
                    <td>
                          The location to which hibernate entity implementation files
                          are generated.
                    </td>
                    <td>
                          Yes (unless
                        <code>ignore</code> is specified for this property)
                    </td>
                </tr>
                <tr>
                    <td>
                          session-beans
                    </td>
                    <td>
                          The directory to which Session Bean files are generated.
                    </td>
                    <td>
                          Yes (unless
                        <code>ignore</code> is specified for this property)
                    </td>
                </tr>
                <tr>
                    <td>
                          session-impls
                    </td>
                    <td>
                          The directory to which Session Bean implementation files are generated.
                    </td>
                    <td>
                          Yes (unless
                        <code>ignore</code> is specified for this property)
                    </td>
                </tr>
                <tr>
                    <td>
                        defaultIdentifierType
                    </td>
                    <td>
                         The type to give default identifiers.
                         This setting is overridden from
                         <a href="../andromda-metafacades-uml/namespace.html#defaultIdentifierType">
                         UML Metafacade defaultIdentifierType</a>
                         in order to make it consistent with idGeneratorClass setting.
                         If the idGeneratorClass setting is changed then the
                         defaultIdentifier setting should be consistent with the
                         change.
                    </td>
                    <td>
                        No, default is
                        <code>datatype.String</code>.
                    </td>
                </tr>
                <tr>
                    <a name="ejbJndiNamePrefix"/>
                    <td>
                        ejbJndiNamePrefix
                    </td>
                    <td>
                        The prefix to give to the Session EJB JNDI names (this allows
                        the same Session EJB to be deployed multiple times in the same
                        container)
                    </td>
                    <td>
                        No, default is
                        <code>no prefix</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                          idGeneratorClass
                    </td>
                    <td>
                          The class to use for Hibernate ID generation.
                    </td>
                    <td>
                          No, default is
                        <code>uuid.hex</code>
                    </td>
                </tr>
                <tr>
                    <td>
                          versionProperty
                    </td>
                    <td>
                          The name of the property/attribute to automatically add to entities
                          for versioning purposes. If this value is not specified or it contains
                          only whitespace characters it will be ignored and the property will
                          not be generated.
                    </td>
                    <td>
                          No, default is the empty string
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTypeMappingsUri
                    </td>
                    <td>
                        URI specifying the specific mappings from model types to hibernate types. 
                        (i.e. <code>file:${basedir}/HibernateTypeMappings.xml</code>). This
                        is not necessary but useful for defining hibernate user types (when
                        hibernate doesn't support a specific type in the manner needed
                        for your application). 
                    </td>
                    <td>
                        No
                    </td>		          	
                </tr>
                <tr>
                    <td>
                        customTypesPackage
                    </td>
                    <td>
                        The package to which hibernate custom types contained
                        within the cartridge should be output.
                    </td>
                    <td>
                        No, default is <code>org.andromda.persistence.hibernate</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        defaultHibernateGeneratorClass
                    </td>
                    <td>
                        The default hibernate generator class.  This is what is used
                        if no <a href="modeling.html#@andromda.hibernate.generator.class">@andromda.hibernate.generator.class</a> is defined
                        for an entity.
                    </td>
                    <td>
                        No, default is <code>native</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateDefaultCascade
                    </td>
                    <td>
                        The value of the <code>default-cascade</code>
                        attribute of the hibernate entity XML mapping.
                    </td>
                    <td>
                        No, default is <code>none</code>.
                    </td>
                </tr>
				<tr>
					<td>
                        driver
					</td>
					<td>
                        JDBC Driver to make database connection
					</td>
					<td>
                        No
					</td>
				</tr>
				<tr>
					<td>
                        username
					</td>
					<td>
                        The database user login name.
					</td>
					<td>
                        No
					</td>
				</tr>
				<tr>
					<td>
                        password
					</td>
					<td>
                        The database user password.
					</td>
					<td>
                        No
					</td>
				</tr>
				<tr>
					<td>
                        dataSource
					</td>
					<td>
                        JNDI name of data source to use. (would be used instead
						of the connection properties, driver, username, password, etc).
					</td>
					<td>
                        No
					</td>
				</tr>
				<tr>
					<td>
                        connectionUrl
					</td>
					<td>
                        URL for the JDBC Driver to make the connection to the database.
					</td>
					<td>
                        No
					</td>
				</tr>
                <tr>
                    <td>
                        hibernatePoolSize
                    </td>
                    <td>
                        Hibernate connection pool size.
                    </td>
                    <td>
                        No 
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTransactionManagerStrategy
                    </td>
                    <td>
                        Strategy for obtaining the JTA TransactionManager
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateUserTransactionName
                    </td>
                    <td>
                        The JNDI name of the JTA UserTransaction object
                    </td>
                    <td>
                        No, default is <code>UserTransaction</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTransactionFactoryClass
                    </td>
                    <td>
                        The name of the hibernate transaction factory class to use.
                    </td>
                    <td>
                        No, default is <code>net.sf.hibernate.transaction.JTATransactionFactory</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTransactionManagerLookup
                    </td>
                    <td>
                        The fully qualified class name of the Hibernate TransactionFactory implementation
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateUseOuterJoin
                    </td>
                    <td>
                        Whether or not to use outer join
                    </td>
                    <td>
                         No, defaults to <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateShowSql
                    </td>
                    <td>
                        Whether or not to log SQL statements
                    </td>
                    <td>
                        No, defaults to <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateJndiName
                    </td>
                    <td>
                        JNDI name bound to the SessionFactory.
                    </td>
                    <td>
                        No, default is <code>java:/hibernate/SessionFactory</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateDialect
                    </td>
                    <td>
                        SQL dialect of the database
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateDefaultSchema 
                    </td>
                    <td>
                        Qualify unqualified tablenames with the given
                        schema/tablespace in generated SQL.
                    </td>
                    <td>
                        No
                    </td>
                </tr> 		
                <tr>
                    <td>
                        hibernateJdbcFetchSize
                    </td>
                    <td>
                        A non-zero value determines the JDBC fetch size
                    </td>
                    <td>
                        No
                    </td>
                </tr> 
                <tr>
                    <td>
                        hibernateMaxFetchDepth
                    </td>
                    <td>
                        Sets a maximum "depth" for the outer join fetch tree. 
                        eg. recommended values between 0 and 3
                    </td>
                    <td>
                        No
                    </td>
                </tr>    
                <tr>
                    <td>
                        hibernateJdbcBatchSize
                    </td>
                    <td>
                        A nonzero value enables use of JDBC2 batch updates by Hibernate.
                        ex: recommended values between 5 and 30
                    </td>
                    <td>
                        No
                    </td>
                </tr>    	
                <tr>
                    <td>
                        hibernateJdbcUseScrollableResultSet
                    </td>
                    <td>
                        Whether or not to enable use of JDBC2 scrollable resultsets by Hibernate. 
                        This property is only necessary when using user supplied connections. 
                        Hibernate uses connection metadata otherwise.
                    </td>
                    <td>
                        No
                    </td>
                </tr>        
                <tr>
                    <td>
                        hibernateJdbcUseStreamsForBinary
                    </td>
                    <td>
                        Whether or not to use streams when writing / reading binary or serializable types to/from JDBC
                    </td>
                    <td>
                        No
                    </td>
                </tr>  
                <tr>
                    <td>
                        hibernateHbm2DDLAuto
                    </td>
                    <td>
                        Automatically export schema DDL to the database when the SessionFactory 
                        is created. With create-drop, the database schema will be dropped when 
                        the SessionFactory is closed explicitely. Permitted values are: 
                        update | create |  
                        <ol>
                            <li>update</li>
                            <li>create</li>
                            <li>create-drop</li>
                        </ol>                        
                    </td>
                    <td>
                        No
                    </td>
                </tr>  
                <tr>
                    <td>
                        hibernateQuerySubstitutions
                    </td>
                    <td>
                        Allows you to define new Hibernate query tokens. For example:
                        given this a value of <em>true=1, false=0</em>                            
                        would cause the tokens true and false to be translated to integer 
                        literals in the generated SQL. 
                    </td>
                    <td>
                        No
                    </td>
                </tr>  	
                <tr>
                    <td>
                        hibernateQueryNamedParameters
                    </td>
                    <td>
                        Whether or not named parameters (i.e. ':someParameter') or unnamed 
                        (i.e. '?') parameters should be used in the HQL queries embedded 
                        within the model.
                        <strong>NOTE:</strong> Does not apply to queries written in OCL.
                    </td>
                    <td>
                        No, default is <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateAssociationEndOuterJoin
                    </td>
                    <td>
                         Defines the default outer join value for many to one and 
                         one to one association ends. Possible values are:
                         <ul>
                            <li>auto</li>
                            <li>true</li>
                            <li>false</li>
                         </ul>
                    </td>
                    <td>
                        No, default is <code>auto</code>.
                    </td>
                </tr>    
            </table>
        </section>
    </body>
</document>