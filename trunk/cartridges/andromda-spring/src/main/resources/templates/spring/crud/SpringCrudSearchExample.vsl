##TODO review the 'replace' and use a metafacade
#set ($generatedFile = "${manageable.manageableSearchExampleFullPath}.java")
##
##  START TEMPLATE
##
// license-header java merge-point
// Generated by crud/SpringCrudSearchExample.vsl in andromda-spring-cartridge#if($dateTimeGeneratedText) on $springUtils.date#end. Do not modify by hand!. 
package $manageable.manageablePackageName;

/**
$manageable.getDocumentation(" * ")
 */
public class $manageable.manageableSearchExampleClassName
#if ($manageable.generalization)
    extends $manageable.generalization.fullyQualifiedManageableSearchExampleName
#else
    implements java.io.Serializable
#end
{
    /** The serial version UID of this class. Needed for serialization. */
    private static final long serialVersionUID = ${manageable.serialVersionUID}L;

#foreach ($member in $manageable.getAttributes(false))
#set ($visibility = $member.visibility)
#if (!$member.inputFile && !$member.needsFileUpload)
#if ($visibility.equals("public"))#set ($visibility = "private")#end
#if ($member.type.primitive)
#set ($memberTypeName = ${member.type.wrapperName})
#else
#set ($memberTypeName = ${member.getterSetterTypeName})
#end
    $visibility $memberTypeName $member.name;

    /**
$member.getDocumentation("     * ")
     * @return $member.name
     */
    $member.visibility $memberTypeName ${member.getterName}()
    {
        return this.$member.name;
    }

    /**
$member.getDocumentation("     * ")
     * @param ${member.name}In
     */
    $member.visibility void ${member.setterName}($memberTypeName ${member.name}In)
    {
        this.$member.name = ${member.name}In;
    }

#end
#end
#foreach ($member in $manageable.manageableAssociationEnds)
#if (!$manageable.generalization.manageableAssociationEnds.contains($member))## do not process associations defined in an ancestor
#if ($member.type.compositeIdentifier)
#set ($fieldType = "Object")
#else
#set ($fieldType = $member.type.fullyQualifiedIdentifierTypeName)
#end
#if ($member.many)
#set ($fieldType = "${fieldType}[]")
#end
#set ($visibility = $member.visibility)
#if ($visibility.equals("public"))#set ($visibility = "private")#end

    $visibility $fieldType $member.name;

    /**
$member.getDocumentation("     * ")
     * @return $member.name
     */
    $member.visibility $fieldType ${member.getterName}()
    {
        return this.$member.name;
    }

    /**
$member.getDocumentation("     * ")
     * @param ${member.name}In
     */
    $member.visibility void ${member.setterName}($fieldType ${member.name}In)
    {
        this.$member.name = ${member.name}In;
    }
#end
#end

    // spring-crud-search-example merge-point
}