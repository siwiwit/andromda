<cartridge name="spring">

    <templateEngine>
        <macrolibrary name="templates/spring/RenderPreconditions.vm"/>
        <!-- cartridge-macrolibrary merge-point-->
    </templateEngine>

    <templateObject name="stringUtils" className="org.apache.commons.lang.StringUtils"/>
    <templateObject name="springUtils" className="org.andromda.cartridges.spring.SpringUtils"/>
    <templateObject name="escapeUtils" className="org.apache.commons.lang.StringEscapeUtils"/>
    <!-- cartridge-templateObject merge-point-->

    <property reference="driver" default=""/>
    <property reference="username" default=""/>
    <property reference="password" default=""/>
    <property reference="connectionUrl" default=""/>
    <property reference="dataSource" default=""/>
    <property reference="hibernatePoolSize" default=""/>
    <property reference="hibernateTransactionManagerStrategy" default=""/>
    <property reference="hibernateUserTransactionName" default=""/>
    <property reference="hibernateTransactionManagerLookup" default=""/>
    <property reference="hibernateUseOuterJoin" default=""/>
    <property reference="hibernateShowSql" default=""/>
    <property reference="hibernateJndiName" default=""/>
    <property reference="hibernateDialect" default=""/>
    <property reference="hibernateDefaultSchema" default=""/>
    <property reference="hibernateMaxFetchDepth" default=""/>
    <property reference="hibernateJdbcFetchSize" default=""/>
    <property reference="hibernateJdbcBatchSize" default=""/>
    <property reference="hibernateJdbcUseScrollableResultSet" default=""/>
    <property reference="hibernateMaxFetchDepth" default=""/>
    <property reference="hibernateJdbcUseStreamsForBinary" default=""/>
    <property reference="hibernateHbm2DDLAuto" default=""/>
    <property reference="hibernateQuerySubstitutions" default=""/>
    <property reference="hibernateCustomTypesPackage" default="org.andromda.persistence.hibernate"/>
    <property reference="hibernateUseQueryCache" default="false"/>
    <property reference="hibernateCacheProvider" default="net.sf.hibernate.cache.EhCacheProvider"/>
    <property reference="hibernateQueryCacheFactory" default="net.sf.hibernate.cache.StandardQueryCacheFactory"/>
    <!-- not really used from the template except to check if it has been defined
         or not, this allows us to determine whether or not we need to generate
         entity related information -->
    <property reference="daos" default=""/>
    <!-- default name for the application context file -->
    <property reference="applicationContext" default="applicationContext.xml"/>
    <!-- default name for the CRUD application context file -->
    <property reference="applicationContextCrud" default="applicationContext-crud.xml"/>
    <!-- default name of the datasource application context file -->
    <property reference="applicationContextDataSource" default="applicationContext-dataSource.xml"/>
    <!-- default name for the remote services application context xml file (server side) -->
    <property reference="serverContext" default="serverContext.xml"/>
    <!-- default name for the remote services application context xml file (client side) -->
    <property reference="clientContext" default="clientContext.xml"/>
    <property reference="beanRefFactory" default="beanRefFactory.xml"/>
    <property reference="beanRefFactoryId" default="beanRefFactory"/>
    <property reference="transactionManager" default="org.springframework.orm.hibernate.HibernateTransactionManager"/>
    <property reference="sessionFactory" default="org.springframework.orm.hibernate.LocalSessionFactoryBean"/>
    <!-- the package to which extra types are generated (i.e. ServiceLocator) -->
    <property reference="springTypesPackage" default="org.andromda.spring"/>
    <!-- the name to give the service locator class -->
    <property reference="serviceLocatorName" default="ServiceLocator"/>
    <!-- the name to give the CRUD service locator class -->
    <property reference="crudServiceLocatorName" default="CrudServiceLocator"/>
    <!-- the name to give the client service locator class -->
    <property reference="clientServiceLocatorName" default="ClientServiceLocator"/>
    <!-- whether the client service locator should switch the thread context class loader during
         retrieval of the client application context xml file -->
    <property reference="clientServiceLocatorClassloaderSwitching" default="off"/>
    <!-- the name for the client side exception handling advice -->
    <property reference="clientExceptionHandlingAdviceName" default="ClientExceptionHandlingAdvice"/>
    <!-- the base name for the hibernate criteria search utility classes -->
    <property reference="criteriaSearchBaseName" default="CriteriaSearch"/>
    <!-- the name to give the principal store class -->
    <property reference="principalStoreName" default="PrincipalStore"/>
    <property reference="ejbViewType" default="local"/>
    <!-- the kind of remoting to use for a spring service -->
    <property reference="springRemotingType" default="none"/>
    <property reference="securityRealm" default=""/>
    <!-- not really used from the template except to check if it has been defined
         or not, so that we can determine whether or not we'll use the session
         EJBs for transaction management (rather than Spring's transaction framework) -->
    <property reference="session-ejbs" default=""/>
    <!-- used to determine if the advice-impls outlet has been defined -->
    <property reference="advice-impls" default=""/>
    <!-- Whether or not parameters should be checked if they're required (on DAOs and services) -->
    <property reference="parameterRequiredCheck" default="true"/>
    <!-- encoding for xml documents -->
    <property reference="xmlEncoding" default="UTF-8"/>
    <!-- cartridge-property merge-point -->

    <!-- cartridge-resource merge-point -->

    <template
        path="templates/spring/SpringServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringClientServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringClientExceptionHandlingAdvice.vsl"
        outputPattern="$generatedFile"
        outlet="advice-impls"
        overwrite="false"
        outputToSingleFile="true"
        outputOnEmptyElements="false"
        required="false">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSessionEJBLocator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringService.vsl"
        outputPattern="{0}/{1}.java"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringWebServiceDelegator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="webService"/>
                </type>
            </modelElement>
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="webServiceOperations"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringServiceBase.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringPrincipalStore.java.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"/>

    <template
        path="templates/spring/SpringServiceImpl.vsl"
        outputPattern="$generatedFile"
        outlet="service-impls"
        overwrite="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/DefaultServiceException.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="allowDefaultServiceException"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/SpringDao.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/SpringHibernateDaoBase.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/SpringHibernateDaoImpl.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity">
                    <property name="daoImplementationRequired">false</property>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/hibernate/SpringHibernateDaoImplManual.vsl"
        outputPattern="$generatedFile"
        outlet="dao-impls"
        overwrite="false"
        required="false">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity">
                    <property name="daoImplementationRequired"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSessionBean.vsl"
        outputPattern="$generatedFile"
        outlet="session-ejbs"
        overwrite="true"
        required="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSession.vsl"
        outputPattern="$generatedFile"
        outlet="session-ejbs"
        overwrite="true"
        required="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/SpringSessionHome.vsl"
        outputPattern="$generatedFile"
        outlet="session-ejbs"
        overwrite="true"
        required="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/applicationContext.xml.vsl"
        outputPattern="$applicationContext"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/applicationContext-dataSource.xml.vsl"
        outputPattern="$applicationContextDataSource"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/serverContext.xml.vsl"
        outputPattern="$serverContext"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/clientContext.xml.vsl"
        outputPattern="$clientContext"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="remotable"/>
                </type>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/ejb-jar.xml.vsl"
        outputPattern="META-INF/ejb-jar.xml"
        outlet="session-ejbs"
        overwrite="true"
        required="false"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/ejb/jboss.xml.vsl"
        outputPattern="META-INF/jboss.xml"
        outlet="session-ejbs"
        overwrite="true"
        required="false"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements variable="services">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/beanRefFactory.xml.vsl"
        outputPattern="$beanRefFactory"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="cruds">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/spring/hibernate/HibernateSearch.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false"
        outputToSingleFile="true">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/spring/hibernate/HibernateSearchConfiguration.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false"
        outputToSingleFile="true">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/spring/hibernate/HibernateSearchParameter.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false"
        outputToSingleFile="true">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/spring/hibernate/SearchCriteria.vsl"
        outputPattern="{0}/{1}.java"
        outlet="daos"
        overwrite="true"
        required="false">
        <modelElements variable="class">
            <modelElement stereotype="CRITERIA"/>
        </modelElements>
    </template>    

    <!--
            C R U D
    -->

    <template
        path="templates/spring/crud/applicationContext-crud.xml.vsl"
        outputPattern="$applicationContextCrud"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="cruds">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="cruds">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudService.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        required="false">
        <modelElements variable="crud">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudServiceBase.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        required="false">
        <modelElements variable="crud">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudDao.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false">
        <modelElements variable="crud">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudDaoBase.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false">
        <modelElements variable="crud">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <template
        path="templates/spring/crud/SpringCrudValueObject.vsl"
        outputPattern="$generatedFile"
        outlet="daos"
        overwrite="true"
        required="false">
        <modelElements variable="crud">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>

    <!-- cartridge-template merge-point -->

</cartridge>
