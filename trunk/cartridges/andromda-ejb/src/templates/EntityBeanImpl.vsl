#set ($packagename = $transform.findPackageName(${class.package}))
package $packagename;

import javax.ejb.EntityBean;
import javax.ejb.EntityContext;

import java.util.Collection;
import java.util.Date;
import java.math.BigDecimal;


public abstract class ${class.name}BeanImpl 
       extends ${class.name}Bean
       implements EntityBean
{
    // concrete business methods that were declared
    // abstract in class ${class.name}Bean ...

#foreach ( $op in $class.operations)
#if ($transform.getStereotype($op.id) != "FinderMethod")
#set ($returntype = $transform.findFullyQualifiedName($op.getType()))
#set ($msig = $transform.getOperationSignature($op))
#if ($defaultException)
    $op.visibility $returntype ${msig}
        throws $defaultException.name {
#else
    $op.visibility $returntype ${msig} {
#end
        // TODO: put your implementation here.
#if ("void" != $returntype)

        // Dummy return value, just that the file compiles
#if (!$str.isPrimitiveType($returntype))
        return null;
#elseif ("boolean" == $returntype)
        return false;
#else
        return ($returntype)0;
#end
#end
    }

#end
#end

    // ------------ and the rest of the EJB stuff ---------------

    private EntityContext context;

    public void setEntityContext(EntityContext ctx)
    {
        //Log.trace("${class.name}Bean.setEntityContext...");
        context = ctx;
    }

    public void unsetEntityContext()
    {
        //Log.trace("${class.name}Bean.unsetEntityContext...");
        context = null;
    }

    public void ejbRemove() throws javax.ejb.RemoveException
    {
        //Log.trace(
        //    "${class.name}Bean.ejbRemove...");
    }

    public void ejbLoad()
    {
        //Log.trace("${class.name}Bean.ejbLoad...");
    }

    public void ejbStore()
    {
        //Log.trace("${class.name}Bean.ejbStore...");
    }

    public void ejbPassivate()
    {
        //Log.trace("${class.name}Bean.ejbPassivate...");
    }

    public void ejbActivate()
    {
        //Log.trace("${class.name}Bean.ejbActivate...");
    }
}
