package $service.packageName;

import javax.ejb.SessionContext;
//import org.apache.log4j.Logger;

/**
 * The $service.name session bean.
 *
$service.getDocumentation(" * ")
 *
 * <p>This class is intended to hold manual changes to the autogenerated
 * implementation in {@link ${service.name}Bean}.</p>
 */
public class ${service.name}BeanImpl extends ${service.name}Bean {
    //private static Logger log = Logger.getLogger(${service.name}BeanImpl.class);
    private SessionContext context;

    public void setSessionContext(SessionContext ctx) {
        //if(log.isDebugEnabled()) log.debug("${service.name}BeanImpl.setSessionContext...");
        context = ctx;
    }

    public void ejbRemove() {
        //if(log.isDebugEnabled()) log.debug("${service.name}BeanImpl.ejbRemove...");
    }

    public void ejbPassivate() {
        ///if(log.isDebugEnabled()) log.debug("${service.name}BeanImpl.ejbPassivate...");
    }

    public void ejbActivate() {
        //if(log.isDebugEnabled()) log.debug("${service.name}BeanImpl.ejbActivate...");
    }

#foreach ($operation in $service.operations)
#set ($returnType = $operation.returnType.fullyQualifiedName)
#set ($signature = $operation.signature)
#set ($visibility = $operation.visibility)
## Public static methods are exposed on the home
## interface instead of the component interface and must
## be prepended with "ejbHome"
#if ($visibility == "public" && $operation.static)
#set ($signature = "ejbHome${str.capitalize($signature)}")
#end
    /**
$operation.getDocumentation("     * ")
     */
    $visibility $returnType $signature
#if ($operation.exceptionsPresent)
        throws $operation.exceptionList
#end
    {
        //TODO: put your implementation here.
#if ($operation.returnTypePresent)
        // Dummy return value, just that the file compiles
        return $operation.returnType.javaNullString;
#end
    }

#end
}
