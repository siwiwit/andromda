<cartridge name="ejb">

    <templateEngine>
        <!-- library of macros used in template engine -->
       <macrolibrary name="templates/EJB.vm" />
    </templateEngine>

    <!-- define the template objects that are made availble to the template -->
    <templateObject name="str" className="org.andromda.core.common.StringUtilsHelper"/>
    <templateObject name="transform" className="org.andromda.cartridges.ejb.EJBScriptHelper"/>
    
    <template
        path="templates/EntityBean.vsl"
        outputPattern="{0}/{1}Bean.java"
        outlet="entity-beans"
        overwrite="true">
        <modelElements variable="class">
            <modelElement stereotype="Entity"/>    
        </modelElements>
    </template>

    <template
        path="templates/EntityLocalIntf.vsl"
        outputPattern="{0}/{1}.java"
        outlet="entity-beans"
        overwrite="true">
        <modelElements variable="class">
            <modelElement stereotype="Entity"/>    
        </modelElements>
    </template>

    <template
        path="templates/EntityHome.vsl"
        outputPattern="{0}/{1}LocalHome.java"
        outlet="entity-beans"
        overwrite="true">
        <modelElements variable="class">
            <modelElement stereotype="Entity"/>    
        </modelElements>
    </template>
    
    <template
        path="templates/EntityBeanImpl.vsl"
        outputPattern="{0}/{1}BeanImpl.java"
        outlet="entity-impls"
        overwrite="false">
        <modelElements variable="class">
            <modelElement stereotype="Entity"/>  
        </modelElements>  
    </template>
    
<!--
     The following definitions map services to session beans.
     The templates map a service to a session bean
     and the template itself decides to generate a stateless or stateful
     session bean, based on the fact that the UML class contains attributes or not.
     (Matthias Bohlen)
-->

    <template
        path="templates/SessionBean.vsl"
        outputPattern="{0}/{1}Bean.java"
        outlet="session-beans"
        overwrite="true">
        <modelElements variable="class">
            <modelElement stereotype="Service"/>   
        </modelElements> 
    </template>
    
    <template
        path="templates/SessionLocalIntf.vsl"
        outputPattern="{0}/{1}Local.java"
        outlet="session-beans"
        overwrite="true"
        generateEmptyFiles="false">
        <modelElements variable="class">        
            <modelElement stereotype="Service"/>
        </modelElements>       
    </template>

    <template
        path="templates/SessionRemoteIntf.vsl"
        outputPattern="{0}/{1}.java"
        outlet="session-beans"
        overwrite="true"
        generateEmptyFiles="false">
        <modelElements variable="class">            
            <modelElement stereotype="Service"/>  
        </modelElements> 
    </template>

    <template
        path="templates/SessionLocalHome.vsl"
        outputPattern="{0}/{1}LocalHome.java"
        outlet="session-beans"
        overwrite="true"
        generateEmptyFiles="false">
        <modelElements variable="class">           
            <modelElement stereotype="Service"/> 
        </modelElements>   
    </template>

    <template
        path="templates/SessionRemoteHome.vsl"
        outputPattern="{0}/{1}Home.java"
        outlet="session-beans"
        overwrite="true"
        generateEmptyFiles="false">
        <modelElements variable="class">               
            <modelElement stereotype="Service"/>  
        </modelElements>  
    </template>

    <template
        path="templates/SessionBeanImpl.vsl"
        outputPattern="{0}/{1}BeanImpl.java"
        outlet="session-impls"
        overwrite="false">
        <modelElements variable="class">          
            <modelElement stereotype="Service"/>   
        </modelElements> 
    </template>
    
</cartridge>
