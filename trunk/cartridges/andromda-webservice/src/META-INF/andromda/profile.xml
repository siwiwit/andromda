<?xml version="1.0" encoding="ISO-8859-1" ?>

<profile>
    <elements>
        <documentation>
            Actors represent roles within your model.  To designate that a role has access
            to a given web service you must draw a dependeny from an Actor to the <![CDATA[<<WebService>>]]>.
        </documentation>
        <elementGroup name="Stereotypes">
            <element name="SERVICE">
                <documentation>
                    Creates a WSDD file for each model element with
                    this stereotype.  Each method to be exposed, must be
                    stereotyped with the <![CDATA[<<WebServiceOperation>>]]> stereotype.
                </documentation>
                <value>Service</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="WEB_SERVICE">
                <documentation>
                    Creates a WSDD service fragment and exposes ALL methods of the element
                    as a web service.
                </documentation>
                <value>WebService</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="WEB_SERVICE_OPERATION">
                <documentation>
                    This is used in conjunction with the <![CDATA[<<Service>>]]> stereotype.
                    Adds the method to the list of allowed methods
                    which will be exposed as a web service.  You <strong>MUST</strong>
                    place this stereotype on an operation if you want it exposed
                    as a web service (unless you add the <![CDATA[<<WebService>>]]> stereotype to your class).
                </documentation>
                <value>WebServiceOperation</value>
                <appliedOnElement>Service operation</appliedOnElement>
            </element>
            <element name="VALUE_OBJECT">
                <documentation>
                    Allows the definition of complex types.  These types can be related
                    to each other through associations and if the association multiplicity
                    is greater than 1, then an array reference will be generated (instead
                    of a Collection)
                </documentation>
                <value>ValueObject</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="ENUMERATION">
                <documentation>
                    Allows the definition of enumerated types.  These types <strong>MUST</strong>
                  define their attributes as <em>frozen</em>.
                </documentation>
                <value>Enumeration</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="NULLABLE">
                <documentation>
                    Allows you to define whether or not operation parameters can be nullable
                    or <em>nillable</em> (in WSDL terms).  If this is <strong>NOT</strong>
                    defined on a parameter, then a null check will be generated for that
                    parameter on the service operation.
                </documentation>
                <value>Nullable</value>
                <appliedOnElement>Service operation parameter</appliedOnElement>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values">
            <element name="WEB_SERVICE_STYLE">
                <documentation>
                    Defines the style of the web service to be generated (i.e. wrapped, document, rpc).
                </documentation>
                <value>@andromda.webservice.style</value>
                <appliedOnElement>Service and WebService</appliedOnElement>
            </element>
            <element name="WEB_SERVICE_USE">
                <documentation>
                    The use of the service to be generated (i.e. literal, encoded).
                </documentation>
                <value>@andromda.webservice.use</value>
                <appliedOnElement>Service and WebService</appliedOnElement>
            </element>
            <element name="WEB_SERVICE_PROVIDER">
                <documentation>
                    The provider to use for the service, by default its <code>RPC</code>
                    which will use a plain java object as the provider.  Another value
                    that can be specified is <code>EJB</code>, if this is specified,
                    then its expected that either the EJB or Hibernate cartridge
                    is being used with this cartridge.
                </documentation>
                <value>@andromda.webservice.provider</value>
                <appliedOnElement>Service and WebService</appliedOnElement>
            </element>
            <element name="ROLE_NAME">
                <documentation>
                    Optionally allows you to define the name of the role (if it needs
                    to be different than the name of the actor that defines the role).
                </documentation>
                <value>@andromda.role.name</value>
                <appliedOnElement>An actor with a dependency to a <![CDATA[<<WebService>>]]></appliedOnElement>
            </element>
        </elementGroup>
    </elements>
</profile>