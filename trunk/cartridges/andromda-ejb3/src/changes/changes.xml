<document>
  <properties>
    <title>EJB3 Cartridge Plugin Project</title>
    <author email="vance@andromda.org">Vance Karimi</author>
  </properties>
  <body>
    <release version="1.0-SNAPSHOT" date="2006-06-01" desc="Changes for 1.0-SNAPSHOT">
      <action dev="vancek" type="add">
        Introduced changes.xml and report.
      </action>
      <action dev="vancek" type="add">
        Added manageable entity support.
      </action>
      <action dev="vancek" type="add">
        Added JBoss cache support.
      </action>
      <action dev="vancek" type="update">
        Set default discriminator value consisting of first character of entity name if one isn't
        explicitly specified.
      </action>
      <action dev="vancek" type="add">
        Added DAO support for every entity POJO.
      </action>
      <action dev="vancek" type="update">
        Refactored javax.ejb package for interceptor related annotations to javax.annotation.
        NOTE: These annotations are NOT used anyway since interceptor components are configured
        via XML descriptor.
      </action>
      <action dev="vancek" type="update">
        Added Maven reporting facilities to site generation. Using new AndroMDA site skin for site
        generation.  To run these reports, the following Maven report plugins need to be installed.
        Some may only exist on the Maven sandox.  maven-site-plugin, maven-project-info-reports-plugin,
        maven-javadoc-plugin, maven-surefire-report-plugin, maven-jxr-plugin, maven-pmd-plugin,
        maven-checkstyle-plugin, maven-changes-plugin and maven-changelog-plugin.  The maven-changelog-plugin
        will require you to have cvs.exe (if on windows platform) in your path.
      </action>
      <action dev="vancek" type="fix">
        Many-to-Many association owning side JoinTable - JoinColumn name property fixed. JIRA EJB-25
      </action>
      <action dev="vancek" type="fix">
        NamedQuery definition to pick up firstResult and maxResult arguments modelled with these
        stereotypes and NOT include then in where clause.
      </action>
      <action dev="vancek" type="add">
        Added installation howto.
      </action>
      <action dev="vancek" due-to="tlu" type="add">
        Added equals, hashCode and toString methods to entities.
      </action>
      <action dev="vancek" type="update">
        Updates to bring up to date with EJB 3.0 FR.
        Now require JBoss 4.0.4-GA with EJB 3.0 RC8-PFD update.
        Update include
          @javax.annotation.EJB --> @javax.ejb.EJB
          Interceptor related classes and annotations moved to javax.interceptor package.
      </action>
      <action dev="vancek" type="fix">
        MDB base class must implement javax.jms.MessageListener to avoid the following error message
        on deployment:
           java.lang.RuntimeException: unable to determine messagingType interface for MDB
      </action>
      <action dev="vancek" type="remove">
        Removed container configuration option via tagged value on message driven beans since it
        is no longer supported.
      </action>
      <action dev="vancek" type="add">
        Added minimumPoolSize (@andromda.ejb.mdb.pool.size.min) and maximumPoolSize
        (@andromda.ejb.mdb.pool.size.min) tagged value options for message 
        driven beans i.e. to allow singleton message driven beans.  These are added as
        activation config properties to the ejb-jar.xml.  Added documentation.
      </action>
      <action dev="vancek" type="update">
        Updated the EJB3MetafacadeModel.xml to use the maven2.repository environment variable rather than
        hard coded paths for profiles.
      </action>
      <action dev="vancek" type="update">
        If session bean is a Seam component, then don't set the bean type to stateful if the bean contains an
        attribute.  For session bean Seam components, the only way to specify it as a SFSB is via tagged value on
        the class.
      </action>
      <action dev="vancek" type="fix">
        Don't restrict rendering of accessor methods for session bean attributes that only have 'public'
        visibility.  Accessors generated for all attributes for all visilities.
      </action>
      <action dev="vancek" type="add">
        Introduce JBoss Seam components corresponding with Seam 1.0.0-CR3.
        Always generate a local interface for a session bean if it is a Seam component.
      </action>
      <action dev="vancek" due-to="tlu" type="fix">
        If a session bean operation is modelled for the local view type interface, a local interface is NOT
        generated.  When returning a view type from the EJB3SessionFacade, must lookup all business operations to 
        determine their view type individually and return a view type for the session bean to accomodate local,
        remote and both. JIRA EJB-27
        Refactor service delegate templates and introduce a parent base class which all service delegates extend.
        Fix problem with exposing only remote operations as webservice endpoints.
      </action>
      <action dev="vancek" due-to="tlu" type="add">
        Added support for adding ejb-jar elements to the persistence.xml. JIRA EJB-28.
      </action>
      <action dev="vancek" due-to="tlu" type="update">
        Generate documentation for enumeration literals.
      </action>
      <action dev="vancek" type="fix">
        Inheritance hierarchies where the super class is a mapped superclass, the subclass should not
        render the DiscriminatorValue annotation.  This annotation should only be rendered in subclasses of
        single table inheritance hierarchies.
      </action>
      <action dev="vancek" type="add">
        Added FAQ support section menu to site.
      </action>
      <action dev="vancek" type="fix">
        Remove references to attributes modelled with a @Version annotation (optimistic lock value for entity) in 
        manageable service components.  Initial work removed attribute from getAttributes, but that caused problems
        from the manageable web tier action methods create and update. To account for this, allow the attribute as
        arguement to the methods, but do not call the set accessor.
      </action>
      <action dev="vancek" type="fix">
        Moved the @Version annotation to the entity attribute.  It had no effect on the getter method.
        Removed all annotations on the corresponding getter method.
      </action>
      <action dev="vancek" type="update">
        Render the @Table annotation on every entity to avoid application server detting the default table name
        mapped to by this entity.  Currently, the annotation is only rendered when there is an inheritence hierarchy
        or a mapped superclass.
      </action>
      <action dev="vancek" type="update">
        Update the default Collection for one-to-many and many-to-many associations to the java.util.SortedSet (in
        namespace.xml).  
        Moving away from bag collection as the default since it is unnecessary in the majority of cases.  
        As a result, the @org.hibernate.annotations.Sort annotation is also rendered with a NATURAL sort type.
        The create and update methods of the manageable service implementation wraps the retrieved bag collection(List)
        for the 'many' side of the association with an appropriate collection implementation (unless java.util.List
        is specified as the default).
      </action>
      <action dev="vancek" type="fix">
        Ignore the argument on create and update methods of DAO implementation components where the corresponding 
        entity attribute is modelled as an optimistic lock value with the Version stereotype.  This should be improved
        to eliminate the attribute when retrieving the attribute collection.
      </action>
      <action dev="vancek" type="update">
        Each finder is overloaded in the DAO components.  One finder method that doesn't supply a manual query 
        argument should use the NamedQuery defined on the corresponding entity.  Currently, it generates the query.
      </action>
      <action dev="vancek" type="fix">
        Minor fixes to the EJBQL of the finder methods in the manageable service base for manageable entities.
      </action>
      <action dev="vancek" type="fix">
        In the findAll method of the manageable service base implementation, the query now includes 'left join fetch'
        for all related 'many' association ends where the target entity does not define a display attribute (where
        the attribute is modelled with the Unique stereotype).
      </action>
      <action dev="vancek" type="update">
        Updated the metafacade definitions of EJB3AssociationEndFacadeLogicImpl, EJB3AssociationEndFacadeLogicImpl
        and EJB3MessageDrivenOperationFacadeLogicImpl in metafacade.xml.
      </action>
      <action dev="vancek" type="add">
        Added support for default list, set and map type implementations for collection association ends in 
        namespace.xml.  Also added the ability
        for association end collection index name and type (further map support) to be specified via tagged values 
        @andromda.persistence.collection.index and @andromda.persistence.collection.index.type.  This introduced
        a new facade called EJB3TypeFacade.
      </action>
      <action dev="vancek" type="fix">
        Fixed isRequired in EJB3AssociationEndFacade and EJB3EntityAttributeFacade to exclude property if
        the entity has a generalization to an mapped superclass.
      </action>
      <action dev="vancek" type="update">
        EJB3ManageableEntityAssociationEndFacade now also extends EJB3AssociationEndFacade with precedence tagged value
        set.  EJB3ManageableEntityAttributeFacade also extends EJB3EntityAttributeFacade.  This eliminates the
        need for the existing overwritten methods in the manageable entity facades.
      </action>
    </release>
  </body>
</document>