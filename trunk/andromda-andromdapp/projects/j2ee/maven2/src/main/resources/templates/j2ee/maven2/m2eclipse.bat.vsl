@REM This is a one time execution to create multiple Eclipse projects from generated andromda output.
@REM Maven eclipse plugin reference: http://maven.apache.org/plugins/maven-eclipse-plugin
@REM Import all projects into Eclipse when finished

@REM This manages all dependencies from within pom.xml files, re-run if dependencies change.
@REM If the Eclipse workspace dir is the same as the top level project dir, projects
@REM will not have appname- in front of project name.

@REM App generator does not copy empty directories into project, but they must exist for eclipse plugin to work
mkdir Workspace
mkdir common\src
mkdir common\target\src-gen

#if (!$transactionPersistenceType.equals("none") || $cxf)
mkdir core\src
mkdir core\target\src-gen

#end
#if ($web || ($war && !$cxf))
mkdir web\src
mkdir web\target\src-gen

#end
#if ($webservice)
mkdir webservice\src
mkdir webservice\target\src-gen

#end
#if ($cxf)
mkdir CXF\src
mkdir CXF\target\src-gen

#end
#if ($workflow)
mkdir workflow\src
mkdir workflow\target\src-gen

#end
rename ..\.project old.project
rename ..\.classpath old.classpath

call mvn eclipse:eclipse -DdownloadSources=true -DdownloadJavadocs=true
#if ($cxf)
call mvn -f CXF/pom.xml eclipse:eclipse -DdownloadSources=true
#end

pause
