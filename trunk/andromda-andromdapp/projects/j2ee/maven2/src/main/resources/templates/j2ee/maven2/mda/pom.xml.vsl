<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <!-- These settings apply specifically to the andromda code generation process. To generate code without
    compiling or testing or packaging, run mvn install from /mda instead of from the root directory. -->
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>$applicationPackage</groupId>
        <artifactId>$applicationId</artifactId>
        <version>$applicationVersion</version>
    </parent>
    <artifactId>${applicationId}-mda</artifactId>
    <packaging>pom</packaging>
    <name>${applicationName} MDA</name>
    <dependencies>
#if ($modelType.equals("uml1.4"))
        <dependency>
            <groupId>org.andromda.profiles.uml14</groupId>
            <artifactId>andromda-profile</artifactId>
            <version>${andromda.version}</version>
            <type>xml.zip</type>
            <scope>runtime</scope>
        </dependency>
#elseif ($modelType.equals("uml2"))
        <dependency>
            <groupId>org.andromda.profiles.uml2</groupId>
            <artifactId>andromda-profile</artifactId>
            <version>${andromda.version}</version>
            <type>xml.zip</type>
            <scope>runtime</scope>
        </dependency>
#elseif ($modelType.equals("emf-uml22") || $modelType.equals("rsm7"))
        <dependency>
            <groupId>org.andromda.profiles.emf.uml22</groupId>
            <artifactId>andromda-common</artifactId>
            <version>${andromda.version}</version>
            <type>profile.uml</type>
            <scope>runtime</scope>
        </dependency>
#end
#if ($jbossSeam)
#if ($modelType.equals("uml1.4"))
        <dependency>
            <groupId>org.andromda.profiles.uml14</groupId>
            <artifactId>andromda-profile-seam</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>xml.zip</type>
            <scope>runtime</scope>
        </dependency>
#elseif ($modelType.equals("uml2"))
        <dependency>
            <groupId>org.andromda.profiles.uml2</groupId>
            <artifactId>andromda-profile-seam</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>xml.zip</type>
            <scope>runtime</scope>
        </dependency>
#elseif ($modelType.equals("emf-uml22") || $modelType.equals("rsm7"))
        <dependency>
            <groupId>org.andromda.profiles.emf.uml22</groupId>
            <artifactId>andromda-seam</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>profile.uml</type>
            <scope>runtime</scope>
        </dependency>
#end
#end
#if ($ejb)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-ejb-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#elseif ($ejb3)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-ejb3-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#elseif ($spring)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-spring-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#end
#if ($hibernate || $spring)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-hibernate-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#end
#if ($workflow)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-jbpm-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#end
#if ($webservice && !$jsr181Webservice)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-webservice-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#end
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-java-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#if ($struts)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-bpm4struts-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#elseif ($jsf)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-jsf-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>runtime</scope>
        </dependency>
#end
#if ($jbossSeam)
        <dependency>
            <groupId>org.andromda.cartridges</groupId>
            <artifactId>andromda-seam-cartridge</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>runtime</scope>
        </dependency>
#end
#if ($spring)
        <dependency>
            <groupId>org.andromda.translationlibraries</groupId>
            <artifactId>andromda-ocl-validation-library</artifactId>
            <scope>runtime</scope>
        </dependency>
#end
#if (!$transactionPersistenceType.equals("none"))
        <dependency>
            <groupId>org.andromda.translationlibraries</groupId>
            <artifactId>andromda-ocl-query-library</artifactId>
            <scope>runtime</scope>
        </dependency>
#end
#if ($cxf)
        <!-- CXF 2.3.x wsdl2java on JDK6 gives NoSuchMethodException: javax.xml.bind.annotation.XmlElementRef.required()
        unless we roll back XJC version -->
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- Need to reference the classpath for ant in wsdl2java java2ws -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-bundle</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- Contains xjc plugins to customize cxf/jaxb2 generated code, see https://jaxb2-commons.dev.java.net/ -->
        <!-- If put in compile classpath, the xjc plugins are not added to ant maven.compile.classpath -->
        <dependency>
            <groupId>org.andromda.thirdparty.jaxb2_commons</groupId>
            <artifactId>jaxb-commons</artifactId>
            <version>0.4.1.5</version>
            <type>pom</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf.xjcplugins</groupId>
            <artifactId>cxf-xjc-dv</artifactId>
            <version>${cxf.xjc.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf.xjcplugins</groupId>
            <artifactId>cxf-xjc-ts</artifactId>
            <version>${cxf.xjc.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
           <groupId>org.apache.cxf</groupId>
           <artifactId>cxf-tools</artifactId>
           <version>${cxf.version}</version>
           <type>pom</type>
           <scope>runtime</scope>
        </dependency>
#end
    </dependencies>
    <profiles>
        <profile>
            <id>eclipse</id>
            <build>
                <plugins>
                    <!-- This will overwrite top level .project and .classpath each time.
                         The maven Eclipse plugin in mda/pom.xml does a better job anyway. See mda/eclipse.bat.-->
                    <plugin>
                        <groupId>org.andromda.maven.plugins</groupId>
                        <artifactId>andromdapp-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>eclipse</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludes>
                                <exclude>app/pom.xml</exclude>
                            </excludes>
#if ($ejb3)
                            <classpathMerge>
                                <![CDATA[
                                <classpathentry kind="var" path="M2_REPO/org/testng/testng/5.14.2/testng-5.14.2.jar"/>
                                ]]>
                            </classpathMerge>
#end
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <sourceDirectory>${project.basedir}/src/main/uml</sourceDirectory>
        <plugins>
#if (!$cxf && $modelType.equals("emf-uml22") && $andromdaVersion.endsWith("-SNAPSHOT"))
            <!-- Update the .uml snapshot profiles from the maven download to the local model directory (avoid PATHMAP references) -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.basedir}/src/main/uml" preservelastmodified="true" flatten="true" failonerror="false" verbose="true">
                                    <fileset dir="${m2repo}/org/andromda/profiles/emf/uml22"
                                     includes="**/${andromda.version}/andromda-*-${andromda.version}.*uml"/>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
#end
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromda-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
#if ($stringUtils.isNotBlank($configurationUri))
                    <configurationUri>$configurationUri</configurationUri>
#else
                    <configurationUri>${project.basedir}/src/main/config/andromda.xml</configurationUri>
#end
                    <!-- Check model dates vs output file dates from previous gen, skip if files are later -->
                    <lastModifiedCheck>true</lastModifiedCheck>
                </configuration>
            </plugin>
#if ($cxf)
            <!-- Clean any Impl files that should be overwritten each time -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>..</directory>
                            <!-- Modify as necessary to customize for this project -->
                            <includes>
                                <include>**/*.exc</include>
                                <include>**/*.log</include>
                                <include>**/*.class</include>
                                <include>**/*.ref</include>
                                <include>CXF/**/WEB-INF/wsdl/**</include>
                                <include>CXF/**/WEB-INF/lib/**</include>
                                <include>webservice/**/*.wsdl</include>
                                <include>webservice/**/*.xsd</include>
                                <include>webservice/**/*.xjb</include>
                                <!--include>webservice/**/web*.xml</include>
                                <include>webservice/**/applicationContext*.xml</include-->
                                <include>webservice/**/index*.html</include>
                            </includes>
                            <excludes>
                                <exclude>CXF/src/main/webapp/WEB-INF/*.xml</exclude>
                            </excludes>
                            <followSymlinks>true</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- Run the generated buildWS ant script which runs CXF wsdl2java and java2ws and copies ObjectFactory etc to andromda projects -->
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <!-- $modelType $andromdaVersion $andromdaVersion.endsWith("-SNAPSHOT") -->
#if ($modelType.equals("emf-uml22") && $andromdaVersion.endsWith("-SNAPSHOT"))
                <!-- Update the .uml snapshot profiles from the maven download to the local model directory (avoid PATHMAP references) -->
                <execution>
                    <phase>initialize</phase>
                    <configuration>
                        <target>
                            <copy todir="${project.basedir}/src/main/uml" preservelastmodified="true" flatten="true" failonerror="false" verbose="true">
                                <fileset dir="${settings.localRepository}/org/andromda/profiles/emf/uml22"
                                 includes="**/${andromda.version}/andromda-*-${andromda.version}.*uml"/>
                            </copy>
                        </target>
                    </configuration>
                    <goals>
                        <goal>run</goal>
                    </goals>
                </execution>
#end
                <!-- Clean the implementation code and WSDL code also, during mvn clean -->
                <execution>
                  <id>clean</id>
                  <phase>clean</phase>
                  <configuration>
                    <target>
                        <echo message="andromda.project is ${andromda.project}"/>
                        <echo message="project.parent.basedir is ${project.parent.basedir}"/>
                        <property name="andromda.project" value="${andromda.project}"/>
                        <property name="project" value="${project.basedir}/.."/>
                        <property name="build.compiler" value="extJavac"/>
                        <ant antfile="${project.basedir}/build.xml">
                            <target name="clean"/>
                        </ant>
                        <ant antfile="${project.basedir}/build.xml">
                            <target name="cleanWSDL"/>
                        </ant>
                        <!-- Comment this to stop deleting Implementation code each build -->
                        <ant antfile="${project.basedir}/build.xml">
                            <target name="cleanImpl"/>
                        </ant>
                    </target>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
                <!-- Generated ant script runs wsdl2java and java2ws for each service -->
                <execution>
                  <id>buildWS</id>
                  <phase>generate-sources</phase>
                  <configuration>
                    <target>
                        <echo message="andromda.project is ${andromda.project}"/>
                        <property name="build.compiler" value="extJavac"/>
                        <property name="andromda.project" value="${andromda.project}"/>
                        <property name="project" value="${project.basedir}/.."/>
                        <property name="compile_classpath" refid="maven.compile.classpath"/>
                        <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                        <property name="test_classpath" refid="maven.test.classpath"/>
                        <ant antfile="${project.basedir}/../webservice/buildWSNew.xml">
                            <target name="wsgenall"/>
                        </ant>
                    </target>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
              <dependencies>
                  <!-- Ant optional tasks are not included by default, very annoying -->
                  <dependency>
                      <groupId>org.apache.ant</groupId>
                      <artifactId>ant-nodeps</artifactId>
                      <version>1.7.1</version>
                  </dependency>
              </dependencies>
            </plugin>
#end
        </plugins>
    </build>
    <properties>
        <!-- Avoid JDK6 XJC runtime error on wdsl2java from conflicting Jaxb2.2 -->
        <!-- Versioned independently from CXF core, only used for wsdl2java -->
        <cxf.xjc.version>2.3.2</cxf.xjc.version>
#if ($stringUtils.isNotBlank($model))
        <model.uri>$model</model.uri>
#else
#if ($modelType.equals("uml1.4"))
        <model.uri>file:${project.basedir}/src/main/uml/${applicationId}.xmi</model.uri>
#elseif ($modelType.equals("emf-uml22") || $modelType.equals("uml2"))
        <model.uri>file:${project.basedir}/src/main/uml/${applicationId}.uml</model.uri>
#elseif ($modelType.equals("rsm7"))
        <model.uri>file:${project.basedir}/src/main/uml/${applicationId}.emx</model.uri>
#end
#end
        <filter></filter>
        <validation>true</validation>
        <!-- ant script location for temp copy of resources -->
        <andromda.project>${project.basedir}/..</andromda.project>
        <conf.dir>${project.basedir}/src/main/config</conf.dir>
        <!-- cartridge output locations -->
        <common.generated.dir>${project.basedir}/../common/target/src/main/java</common.generated.dir>
        <common.manual.dir>${project.basedir}/../common/src/main/java</common.manual.dir>
        <core.generated.dir>${project.basedir}/../core/target/src/main/java</core.generated.dir>
        <core.manual.dir>${project.basedir}/../core/src/main/java</core.manual.dir>
        <core.manual.java.dir>${project.basedir}/../core/src/main/java</core.manual.java.dir>
#if ($groovy)
        <core.manual.groovy.dir>${project.basedir}/../core/src/main/groovy</core.manual.groovy.dir>
#end
#if ($ejb3 || $cxf)
        <core.manual.test.resources>${project.basedir}/../core/src/test/resources</core.manual.test.resources>
        <core.generated.test.dir>${project.basedir}/../core/target/src/main/java</core.generated.test.dir>
        <core.manual.test.dir>${project.basedir}/../core/src/test/java</core.manual.test.dir>
#end
#if ($war || $web)
        <web.generated.dir>${project.basedir}/../web/target</web.generated.dir>
        <web.generated.java.dir>${web.generated.dir}/src/main/java</web.generated.java.dir>
        <web.generated.web.dir>${web.generated.dir}/src/main/webapp</web.generated.web.dir>
        <web.manual.dir>${project.basedir}/../web/src/main</web.manual.dir>
        <web.manual.web.dir>${web.manual.dir}/webapp</web.manual.web.dir>
        <web.manual.java.dir>${web.manual.dir}/java</web.manual.java.dir>
#end
#if ($workflow)
        <workflow.generated.dir>${project.basedir}/../workflow/target/src/main/java</workflow.generated.dir>
        <workflow.manual.dir>${project.basedir}/../workflow/src/main</workflow.manual.dir>
#end
#if ($webservice && !$jsr181Webservice)
        <webservice.project>${project.basedir}/../webservice</webservice.project>
#if ($cxf || $axis)
        <webservice.generated.dir>${project.basedir}/../webservice/src/main/webapp</webservice.generated.dir>
#else
        <webservice.generated.dir>${web.generated.dir}</webservice.generated.dir>
#end
        <webservice.manual.java.dir>${project.basedir}/../webservice/src/main/java</webservice.manual.java.dir>
#if ($axisVersion.equals("1"))
        <webservice.generated.wsdl.dir>${webservice.generated.dir}/WEB-INF/classes</webservice.generated.wsdl.dir>
#end
#if ($cxf)
        <webservice.test.dir>${project.basedir}/../webservice/src/test/java</webservice.test.dir>
#end
        <webservice.host>localhost</webservice.host>
        <webservice.port>8080</webservice.port>
#end
#if ($ejb3)
        <application.config.dir>${project.basedir}/../app/src/main/config</application.config.dir>
        <application.metainf.dir>${project.basedir}/../app/src/main/application/META-INF</application.metainf.dir>
#end
#if ($jbossSeam)
        <application.generated.dir>${project.basedir}/../app/target/src</application.generated.dir>
#end
#if ($hibernate || $spring)
        <!-- hibernate configuration -->
#if ($hibernate)
        <hibernate.transaction.manager.lookup>org.hibernate.transaction.JBossTransactionManagerLookup</hibernate.transaction.manager.lookup>
#end
        <!-- default strategy to use when using inheritance -->
        <hibernate.inheritance.strategy>subclass</hibernate.inheritance.strategy>
        <!-- hibernate generator class to use for identifiers -->
        <hibernate.generatorClass>native</hibernate.generatorClass>
#end
    </properties>
</project>