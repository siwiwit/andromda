<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>
            Customizing the Look and Feel
        </title>
    </properties>
    <body>
        <section name="Customizing the Look and Feel">

            <p>
                In this section we will customize the look and feel of the search screen as specified
                in the TimeTracker prototype.
            </p>

            <p>
                The basic process for front-end customization is pretty simple. As you know, AndroMDA
                generates front-end elements (such as JSPs, style sheets and javascript) in the
                web\target\src directory. If you need to customize any of these elements, just copy
                them over to the web\src\main directory, maintaining the same tree structure. Now
                you can make any edits to these files. When you build your application again, maven
                will copy the artifacts from the src directory to the target directory, overwriting
                the automatically generated files. It will then proceed to build the
                <tt>war</tt>
                from the target directory. Thus you can have a mix for auto-generated and customized
                files in your <tt>war</tt>. Note that it is best to wait until a screen is functionally
                complete before starting to customize the look and feel - making functional changes
                after customization makes it difficult to syncronize the artifacts.
            </p>
            <p>
                With this background, we are ready to customize our front-end. Note that customizations
                requires detailed knowledge of HTML, CSS, JSP, Struts, Tiles, JavaScript and related
                front-end technologies. We cannot possibly cover all these topics in this tutorial,
                so we will simply provide the customized files to you. Follow the steps below to
                customize the search screen and run the application:
            </p>
            <ol style="list-style-type: decimal">
                <li>Download
                    <a href="custom-look-and-feel.zip">custom-look-and-feel.zip</a>
                    and unzip it at <tt>C:\timetracker\web\src\main</tt>.
                    You will get a sub-directory under
                    <tt>main</tt>
                    called <tt>jsp</tt>. This
                    directory further contains 3 sub-directories:
                    <ul>
                        <li> <tt>layout</tt>: a new Tiles layouts and related files
                        </li>
                        <li> <tt>org</tt>: customized JSP for the search screen
                        </li>
                        <li> <tt>styles</tt>: a new style sheet used by our custom JSP
                        </li>
                    </ul>
                </li>
                <li>Edit the file
                    <tt>C:\timetracker\web\src\main\properties\messages.properties</tt>
                    and completely overwrite its content with the properties shown below. These properties
                    hold messages used by our JSPs.
                    <source>
                        #Temporary message until Approve Timecards page is defined
                        approve.timecards.title=Approve Timecards

                        # Overrides of AndroMDA generated messages
                        time.tracker.home=Home

                        # Custom messages
                        search.criteria=Search Criteria
                        search.results=Search Results
                    </source>
                </li>
                <li>Execute the commands
                    <tt>mvn clean</tt>
                    followed by
                    <tt>mvn install</tt>
                    in the Command Prompt.
                </li>
                <li>Make sure the JBoss server is running.</li>
                <li>Deploy the application:
                    <br/>
                    <tt>mvn -f app/pom.xml -Ddeploy</tt>
                </li>
                <li>Open a browser and make it point to http://localhost:8080/timetracker. The TimeTracker
                    search page should appear with the new look and feel.
                </li>
            </ol>
            <p>
                Congratulations! We are done with the search screen.
            </p>
            <subsection name="What's Next?">
                <p>
                    We will now secure our site using the Acegi Security System.
                    Click <a href="security.html">here</a> to integrate with Acegi Security.
                </p>
            </subsection>
        </section>
    </body>
</document>
