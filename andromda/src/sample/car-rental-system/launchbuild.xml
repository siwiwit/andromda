<!--
    This is a script to work around the JAXB bug. JAXB 1.0 beta
    contains a bug that requires jaxb.properties to be on the
    *system* classpath (not on the classpath in general).

    You will notice a message "jaxb.properties not found" when
    running the build.xml ant script. So, run this script instead:

        ant -f launchbuild.xml

    What does this script do?

    It puts everything on the system classpath of a brand new
    instance of the Java VM and simply invokes ant on this new
    VM instance.

    I hope, I will be able to delete this script when a new
    release of JAXB becomes available.

    Matthias Bohlen
-->

<project name="launchbuild" default="launch">

    <!-- Load user environment parameters -->
    <!-- This should define the properties uml2ejb.home and build.classpath -->
    <property file="build.properties" />


    <!-- Define our class path -->
    <path id="launch.classpath">
        <pathelement path="${build.classpath}"/>
        <pathelement path="${java.classpath}"/>
    </path>


    <!-- ============================================================= -->
    <!--               Highlevel user tasks                            -->
    <!-- ============================================================= -->

    <target name="launch"
            description="Launches build script after initializing the system classpath" >

        <echo message="Running the build script on a separate VM..."/>
       	<echo message=" java.home=${java.home}"/>
        <property name="classpath" refid="launch.classpath" />
        <echo message=" launchpath=${classpath}" />
        
        <java classname="org.apache.tools.ant.Main" fork="true">
            <classpath refid="launch.classpath" />
            <jvmarg value="-Dant.home=${ant.home}" />
        </java>
    </target>


</project>
