<project name="CarRentalSystemSample" default="deploy">

    <!-- Load user environment parameters -->
    <!-- This should define the properties andromda.home and build.classpath -->
    <property file="build.properties" />


    <!-- Define our class path -->
    <path id="build.class.path">
        <pathelement path="${build.classpath}"/>
    </path>


    <!-- ============================================================= -->
    <!--               Directory settings                              -->
    <!-- ============================================================= -->


    <!-- Physical source directories -->
    <property name="src.app.dir"             value="src/app" />
    <property name="src.common.dir"          value="src/common" />
    <property name="src.ejb.dir"             value="src/ejb" />
    <property name="src.web.dir"             value="src/web" />
    <property name="src.servlet.dir"         value="${src.web.dir}/servlet" />
    <property name="src.webpages.dir"        value="${src.web.dir}/pages" />
    <property name="src.webconfig.dir"       value="${src.web.dir}/config" />
    <property name="src.appconfig.dir"       value="${src.app.dir}/config" />

    <!-- Output directories for generators -->
    <property name="andromda.ejb.bean.dir"    value="${src.ejb.dir}/generated" />
    <property name="andromda.ejb.impl.dir"    value="${src.ejb.dir}/manual" />

    <property name="andromda.web.action.dir"  value="${src.servlet.dir}/manual" />
    <property name="andromda.web.form.dir"    value="${src.servlet.dir}/generated" />
    <property name="andromda.web.page.dir"    value="${src.webpages.dir}" />
    <property name="andromda.web.config.dir"  value="${src.webconfig.dir}/generated" />

    <property name="andromda.fantasy.dir"     value="src/fantasy/generated" />

    <property name="ejbdoclet.output.dir"    value="${src.ejb.dir}/generated" />

    <!-- Setup directory structure -->
    <target name="init" depends="check-environment">
        <tstamp/>
        <mkdir dir="dist"/>

        <mkdir dir="build"/>
        <mkdir dir="build/earstage"/>
        <mkdir dir="build/ejbstage"/>
        <mkdir dir="build/webstage/WEB-INF/classes"/>
        <mkdir dir="build/webstage/WEB-INF/lib/tlds"/>

        <mkdir dir="${src.ejb.dir}/generated"/>
        <mkdir dir="${src.servlet.dir}/generated"/>
        <mkdir dir="${src.webconfig.dir}/generated"/>
        <mkdir dir="${andromda.fantasy.dir}"/>

    </target>

    <!-- Remove directory structure structure -->
    <target name="clean" description="Removes all generated files">
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="dist"/>
            <fileset dir="build"/>
            <fileset dir="${src.ejb.dir}/generated"/>
            <fileset dir="${src.servlet.dir}/generated"/>
            <fileset dir="${src.webconfig.dir}/generated"/>
            <fileset dir="${andromda.fantasy.dir}"/>
        </delete>
    </target>

    <!-- ============================================================= -->
    <!--               Highlevel user tasks                            -->
    <!-- ============================================================= -->

    <target name="build" depends="init,jars"
            description="Builds ejb.jar and web.war"/>

    <target name="deploy" depends="build"
            description="Deploys generated ear in JBoss">
      <copy todir="${jboss.home}/server/default/deploy" >
          <fileset dir="dist/" includes="*.ear" />
      </copy>
    </target>

    <!-- ============================================================= -->
    <!--               Internal subtasks                               -->
    <!-- ============================================================= -->

    <!-- Put andromda to work. -->
    <!-- Generate the enterprise bean sources from the UML model -->
    <target name="genjava" depends="init">
        <taskdef name="andromda"
                 classname="org.andromda.core.anttasks.AndroMDAGenTask"
                 classpathref="build.class.path"
        />

		<property name="templates.home" value="${andromda.home}src/templates/" />
        <unzip src="CarRentalSystem15.zargo" dest="build/model/unzipped" />

        <andromda basedir="build/model/unzipped"
                 ejbDestdir="${andromda.ejb.bean.dir}"
                 implDestdir="${andromda.ejb.impl.dir}"
                 includes="CarRentalSystem15.xmi"
                 lastModifiedCheck="true"
                 templatePath="${templates.home}/ejb"
                 useDefaultTemplateConfig="true"
                 typeMappings="${andromda.home}/src/xml/TypeMapping.xml"
        >
            <template
                stereotype="EntityBean"
                outputPattern="{1}-{2}.txt"
                outputDir="${andromda.fantasy.dir}"
                overWrite="true"
            >
                <fileset dir="mySpecialTemplates" includes="*.vsl" />
            </template>

            <userProperty name="foreignKeySuffix" value="_FK" />
            <userProperty name="testProperty" value="The quick brown fox" />

            <template
                stereotype="StrutsForm"
                sheet="StrutsForm.vsl"
                outputPattern="{0}/{1}.java"
                outputDir="${andromda.web.form.dir}"
                overWrite="true"
            />
            
            <template
                stereotype="StrutsAction"
                sheet="StrutsAction.vsl"
                outputPattern="{0}/{1}.java"
                outputDir="${andromda.web.action.dir}"
                overWrite="false"
            />
            <template
                stereotype="StrutsJSP"
                sheet="StrutsJSP.vsl"
                outputPattern="{1}.jsp"
                outputDir="${andromda.web.page.dir}"
                overWrite="false"
            />
            <template
                stereotype="StrutsConfig"
                sheet="StrutsConfig.vsl"
                outputPattern="struts-config.xml"
                outputDir="${src.webconfig.dir}/generated"
                overWrite="true"
            />

        </andromda>
    </target>


    <!-- Let XDoclet generate all remaining EJB sources from the beans -->
    <target name="genejb" depends="init,genjava">
        <taskdef name="ejbdoclet"
                 classname="xdoclet.modules.ejb.EjbDocletTask"
                 classpathref="build.class.path"
        />
		
        <ejbdoclet destdir="${ejbdoclet.output.dir}"
                   ejbspec="2.0"
                   force="false">
                   
            <fileset dir="${andromda.ejb.bean.dir}">
                <include name="**/*Bean.java" />
            </fileset>

            <dataobject/>
            <utilobject/>

            <remoteinterface/>
            <homeinterface/>
            <localinterface/>
            <localhomeinterface/>

            <deploymentdescriptor
                destdir="build/ejbstage/META-INF/"/>

            <jboss version="3.0"
                   xmlencoding="UTF-8"
                   typemapping="Hypersonic SQL"
                   datasource="java:/DefaultDS"
                   destdir="build/ejbstage/META-INF/"/>

        </ejbdoclet>

        <!--
             XDoclet stores the *Bean classes into ejb-jar.xml
             but the used andromda templates have created
             subclasses *BeanImpl and *BeanCMP.  Replace
             the names in the deployment descriptor so that
             everyone is happy.
         -->
        <replace file="build/ejbstage/META-INF/ejb-jar.xml" >
            <replacetoken><![CDATA[ServiceBean</ejb-class>]]></replacetoken>
            <replacevalue><![CDATA[ServiceBeanImpl</ejb-class>]]></replacevalue>
        </replace>
        <replace file="build/ejbstage/META-INF/ejb-jar.xml" >
            <replacetoken><![CDATA[Bean</ejb-class>]]></replacetoken>
            <replacevalue><![CDATA[BeanCMP</ejb-class>]]></replacevalue>
        </replace>
    </target>


    <!-- Compile all files, generated and hand-written -->
    <target name="compile" depends="init,genejb">

        <!-- Compile EJB classes -->
        <javac destdir="build/ejbstage" includes="**/*.java"
               includeAntRuntime="false">
            <src path="${src.common.dir}" />
            <src path="${andromda.ejb.bean.dir}" />
            <src path="${andromda.ejb.impl.dir}" />
            <src path="${ejbdoclet.output.dir}"  />
            <classpath refid="build.class.path"/>
        </javac>

        <!-- Compile web application classes -->
        <javac destdir="build/webstage/WEB-INF/classes"
               includes="**/*.java"
               includeAntRuntime="false">
            <src path="${src.common.dir}" />
            <src path="${andromda.web.action.dir}"  />
            <src path="${andromda.web.form.dir}"    />
            <classpath>
                <path  refid="build.class.path" />
                <pathelement path="build/ejbstage" />
            </classpath>
        </javac>
    </target>


    <!-- Create the archive structures on disk, first -->
    <target name="copystages" depends="init,compile">
        <!-- Copy the web pages and message resource file -->
        <copy todir="build/webstage/">
            <fileset dir="${andromda.web.page.dir}" includes="*.jsp"/>
            <fileset dir="${andromda.web.page.dir}" includes="*.html"/>
            <fileset dir="${src.webconfig.dir}"    includes="ApplicationResources*.properties"/>
        </copy>
        <!-- Copy the web configuration files -->
        <copy todir="build/webstage/WEB-INF/">
            <fileset dir="${src.webconfig.dir}" includes="*.xml"/>
            <fileset dir="${andromda.web.config.dir}" includes="struts-config.xml" />
        </copy>
        <!-- Copy the Struts libraries -->
        <copy todir="build/webstage/WEB-INF/lib/">
            <fileset dir="${andromda.home}lib/" includes="struts.jar"/>
        </copy>
        <copy todir="build/webstage/WEB-INF/lib/tlds/">
            <fileset dir="${andromda.home}/src/tld/" includes="struts*.tld"/>
        </copy>
    </target>


    <!-- Create the EJB jar, the web WAR and the application EAR -->
    <target name="jars" depends="copystages">
        <!-- Put everything in build/ejbstage into car-rental-system-ejb.jar. -->
        <!-- Newer ant versions have an ejb task, but this works as well. -->
        <jar jarfile="build/earstage/car-rental-system-ejb.jar">
            <fileset dir="build/ejbstage/" includes="**/*"/>
        </jar>
        <!-- Put everything in build/webstage into car-rental-system-web.war. -->
        <jar jarfile="build/earstage/car-rental-system-web.war">
            <fileset dir="build/webstage/" includes="**/*"/>
        </jar>
        <!-- Put application deployment descriptor in META-INF -->
        <copy todir="build/earstage/META-INF/">
            <fileset dir="${src.appconfig.dir}" includes="application.xml"/>
        </copy>
        <!-- Put everything in build/earstage into car-rental-system-web.ear. -->
        <jar jarfile="dist/car-rental-system.ear">
            <fileset dir="build/earstage/" includes="**/*"/>
        </jar>
    </target>


    <target name="check-environment">
    	<property name="classpath" refid="build.class.path"/>
    	<echo message=" path=${classpath}"/>
    	
        <antcall target="check-andromda"/>

        <antcall target="check-buildclasspath"/>

        <available property="velocity.present"
                   classname="org.apache.velocity.context.Context"
                   classpathref="build.class.path" />
        <antcall target="wrong-velocity"/>

        <available property="ejbdoclet.present"
                   classname="xdoclet.modules.ejb.EjbDocletTask"
                   classpathref="build.class.path" />
        <antcall target="wrong-ejbdoclet"/>

        <available property="ant.present"
                   classname="org.apache.tools.ant.types.EnumeratedAttribute"
                   classpathref="build.class.path" />
        <antcall target="wrong-ant"/>

        <available property="log4j.present"
                   classname="org.apache.log4j.Category"
                   classpathref="build.class.path" />
        <antcall target="wrong-log4j"/>

        <available property="j2ee.present"
                   classname="javax.ejb.EntityBean"
                   classpathref="build.class.path" />
        <antcall target="wrong-j2ee"/>

        <!-- test andromda at the end because task class cannot load
             when there are missing referenced classes (e.g. Velocity classes)
        -->
        <available property="andromda.present"
                   classname="org.andromda.core.anttasks.AndroMDAGenTask"
                   classpathref="build.class.path" />
        <antcall target="wrong-andromda"/>
    </target>

    <target name="check-andromda" unless="andromda.home">
        <fail>
            Property "andromda.home" is not set. Please use the file
            "build.properties" in the directory ${basedir} to set
            this property. It must point to the andromda installation
            directory which contains the file "andromda.jar".
        </fail>
    </target>

    <target name="check-buildclasspath" unless="build.classpath">
        <fail>
            Property "build.classpath" is not set. Please use the file
            "build.properties" in the directory ${basedir} to set
            this property. It must list all external jars required
            for the build to succeed.  "build.properties.sample"
            provides an example on how to set it up.
        </fail>
    </target>

    <target name="wrong-andromda" unless="andromda.present">
        <fail>
            Property "build.classpath" is set but it doesn't seem
            to contain the andromda jar.
        </fail>
    </target>

    <target name="wrong-velocity" unless="velocity.present">
        <fail>
            Property "build.classpath" is set but it doesn't seem
            to contain the Velocity jar.
        </fail>
    </target>

    <target name="wrong-ejbdoclet" unless="ejbdoclet.present">
        <fail>
            Property "build.classpath" is set but it doesn't seem
            to contain the Xdoclet jar.
        </fail>
    </target>

    <target name="wrong-ant" unless="ant.present">
        <fail>
            Property "build.classpath" is set but it doesn't seem
            to contain the ant jar.
        </fail>
    </target>

    <target name="wrong-log4j" unless="log4j.present">
        <fail>
            Property "build.classpath" is set but it doesn't seem
            to contain the log4j jar.
        </fail>
    </target>

    <target name="wrong-j2ee" unless="j2ee.present">
        <fail>
            Property "build.classpath" is set but it doesn't seem
            to contain the J2EE jars.
        </fail>
    </target>

</project>
