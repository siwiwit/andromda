<?xml version="1.0" encoding="UTF-8"?>
<!-- =========================================================================
     This schema defines the andromda-metafacades.xml configuration file.
     CODING CONVENTION: NO TABS, INDENT 4 SPACES
     ========================================================================= -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <!-- Used for mapping contexts.  An example for a context is: An entity is a
         context for its attributes. So, the metaclass "Attribute" would be mapped to
         the class for "EntityAttributeFacade" if the Attribute belongs to an entity.
         If the Attribute belongs to any other Classifier, it would be mapped
         to a simple "AttributeFacade" and therefore would NOT need the context -->
    <xs:element name="context" type="xs:string"/>
    <!-- specifies the default metafacade (if a metafacade is not explicitly
         defined for an element this will be used instead) -->
    <xs:element name="default">
        <xs:complexType>
            <xs:attribute name="class" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="metafacade">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="mapping" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="class" type="xs:string" use="required"/>
            <!-- You should set the context root to 'true' when the metafacade
                 mapping will be used as a context for other mappings -->
            <xs:attribute name="contextRoot" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="mapping">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="stereotype" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="context" minOccurs="0" maxOccurs="1"/>
                <xs:element name="property" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType mixed="true">
                        <xs:attribute name="name" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <!-- defines the class to which this mapping shall apply (can be a
                 metafacade or a metaclass) -->
            <xs:attribute name="class" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="metafacades">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="default" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="metafacade" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <!-- each grouping of metafacades is identified by this namespaces -->
            <xs:attribute name="namespace" type="xs:string" use="required"/>
            <!-- Specifies whether or not this set of metafacades is 'shared'
                 Shared metafacades are mappings used across all namespaces -->
            <xs:attribute name="shared" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
    <!-- property references are properties you wish to configure on a metafacade,
         through bean properties -->
    <xs:element name="property">
        <xs:complexType>
            <xs:sequence>
                <!-- provides any information about this property reference -->
                <xs:element name="documentation" type="xs:string" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="reference" type="xs:string" use="required"/>
            <!-- defines the default value of the property if the property isn't supplied -->
            <xs:attribute name="default" use="optional"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="stereotype" type="xs:string"/>
</xs:schema>