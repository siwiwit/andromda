<?xml version="1.0"?>
#parse("translations/query/Globals.vm")
<translation name="Hibernate-QL">

    <fragments>

        <!-- replaced when an operation argument is encountered -->
        <fragment name="argument">
            <kind name="body">
                :{0}
            </kind>
        </fragment>

        <!-- This is the beginning of each query ('<element name>.allInstances' or just 'allInstances') -->
        <fragment name="(\s*${elementName}\s*\.)?\s*allInstances(${emptyParentheses})?\s*->\s*select.*"
                  handlerMethod="handleSelect">
            <kind name="body">
                from $completeElementName as {0}
            </kind>
        </fragment>

        <!-- The beginning of a query that finds allInstances (independent allInstances() query) -->
        <fragment name="(\s*${elementName}\s*\.)?\s*allInstances(${emptyParentheses})?(\s*->\s*${excludeSelect}\w+.*)?"
                  handlerMethod="handleSelect">
            <kind name="body">
                from $completeElementName as $lowerCaseElementName
            </kind>
        </fragment>

        <!-- This is what is appended to the end of the allInstances fragment
             when each 'includesAll(<expression>)' is encountered in the expression -->
        <fragment name="\s*${excludeAllInstances}${navigableName}\s*->\s*select${nonEmptyParentheses}"
                  handlerMethod="handleSubSelect">
            <kind name="body">
                 join fetch {0} as {1}
            </kind>
        </fragment>

        <!-- This is what is appended when '-> includes(<some expression>)' is encountered in the expression -->
        <fragment name="\s*${navigableName}\s*->\s*includes${nonEmptyParentheses}"
                  handlerMethod="handleIncludes">
            <kind name="body">
                {0} in ({1})
            </kind>
        </fragment>
                
        <!-- Maps the '-> sortedBy(<some expression>)' to the correct handler method -->
        <fragment name="sortedBy${nonEmptyParentheses}"
                  handlerMethod="handleSortedBy"/>

        <!-- this fragment is appended to the beginning of the in the translated query's sortedBy clause -->
        <fragment name="sortedByClauseHead">
            <kind name="body">
                order by
            </kind>
        </fragment>

        <!-- This is what is appended when '-> isEmpty()' is encountered in the expression -->
        <fragment name="\s*${navigableName}\s*->\s*isEmpty${emptyParentheses}"
                  handlerMethod="handleDotOperation">
            <kind name="body">
                size({0}) = 0
            </kind>
        </fragment>
        
        <!-- This is what is appended when '-> size()' is encountered in the expression -->
        <fragment name="\s*${navigableName}\s*->\s*size${emptyParentheses}"
                  handlerMethod="handleDotOperation">
            <kind name="body">
                size({0})
            </kind>
        </fragment>
        
        <!-- This is what is appended when 'string.toLower()' is encountered in the expression -->
        <fragment name="\s*${navigableName}\s*\.\s*toLower${emptyParentheses}"
                  handlerMethod="handleDotOperation">
            <kind name="body">
                lower({0})
            </kind>
        </fragment>
        
        <!-- This is what is appended when 'string.toUpper()' is encountered in the expression -->
        <fragment name="\s*${navigableName}\s*\.\s*toUpper${emptyParentheses}"
                  handlerMethod="handleDotOperation">
            <kind name="body">
                upper({0})
            </kind>
        </fragment>
        
        <!-- This is what is appended when 'string.concat(<string>)' is encountered in the expression -->
        <fragment name="\s*${navigableName}\s*\.\s*concat${nonEmptyParentheses}"
                  handlerMethod="handleDotOperation">
            <kind name="body">
                {0} || {1}
            </kind>
        </fragment>
        
        <!-- This is what is appended when 'string.size()' is encountered in the expression -->
        <fragment name="\s*${navigableName}\s*\.\s*size${emptyParentheses}"
                  handlerMethod="handleDotOperation">
            <kind name="body">
                length({0})
            </kind>
        </fragment>

        <!-- the '{0}' represents the first argument in the 'isLike(<expression>,<expression>)' operation -->
        <fragment name="\s*StringUtils\s*.\s*isLike\s*\(.*,.*\)\s*"
                  handlerMethod="handleIsLike">
            <kind name="body">
                lower({0}) like {1}
            </kind>
        </fragment>

        <!-- this fragment is appended to the end of the select clause in the translated query -->
        <fragment name="selectClauseTail">
            <kind name="body">
                where
            </kind>
        </fragment>

        <!-- if 'and' is encountered in the expression then
             'and' will just be returned -->
        <fragment name="and.*"
                  handlerMethod="handleLogicalExpression">
            <kind name="body">
                and
            </kind>
        </fragment>

        <!-- if 'or' is encountered in the expression then
             'or' will just be returned -->
        <fragment name="or.*"
                  handlerMethod="handleLogicalExpression">
            <kind name="body">
                or
            </kind>
        </fragment>

        <fragment name="=.*"
                  handlerMethod="handleRelationalExpression">
            <kind name="body">
                {0} = {1}
            </kind>
        </fragment>

        <fragment name="&gt;.*"
                  handlerMethod="handleRelationalExpression">
            <kind name="body">
                {0} &gt; {1}
            </kind>
        </fragment>

        <fragment name="&lt;.*"
                  handlerMethod="handleRelationalExpression">
            <kind name="body">
                {0} &lt; {1}
            </kind>
        </fragment>

        <fragment name="&lt;&gt;.*"
                  handlerMethod="handleRelationalExpression">
            <kind name="body">
                {0} not {1}
            </kind>
        </fragment>

        <fragment name="&gt;=.*"
                  handlerMethod="handleRelationalExpression">
            <kind name="body">
                {0} &gt;= {1}
            </kind>
        </fragment>

        <fragment name="&lt;=.*"
                  handlerMethod="handleRelationalExpression">
            <kind name="body">
                {0} &lt;= {1}
            </kind>
        </fragment>

    </fragments>

    #parse("translations/query/Patterns.vm")

</translation>
