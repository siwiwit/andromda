<?xml version="1.0" encoding="UTF-8"?>


<translation-test>

	<translation name="validation.java"></translation>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Customer
            inv: age &gt;= 18
        </from>
        <to>
            OCLExpressions.greaterOrEqual(age,18);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context CustomerCard
            inv: validFrom.isBefore(goodThru)
        </from>
        <to>
            validFrom.isBefore(goodThru);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Membership
            inv: card.customer = customer
        </from>
        <to>
            OCLExpressions.equal(card.customer,customer);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context CustomerCard
            inv: printedName = customer.title.concat( customer.name )
        </from>
        <to>
            OCLExpressions.equal(printedName,customer.title.concat(customer.name));
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context LoyaltyProgram
            inv: serviceLevel-&gt;size() = 2
        </from>
        <to>
            OCLExpressions.equal(OCLCollections.size(serviceLevel),2);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Customer
            inv: program-&gt;size() = cards-&gt;select( valid = true )-&gt;size()
        </from>
        <to>
            OCLExpressions.equal(OCLCollections.size(program),OCLCollections.size(OCLCollections.select(cards,OCLExpressions.equal(valid,true))));
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices-&gt;forAll( pointsEarned = 0 and pointsBurned = 0 )
                    implies membership.loyaltyAccount-&gt;isEmpty()
        </from>
        <to>
            (OCLCollections.forAll(partners.deliveredServices,OCLExpressions.equal(pointsEarned,0)&amp;&amp;OCLExpressions.equal(pointsBurned,0))?OCLCollections.isEmpty(membership.loyaltyAccount):true);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer-&gt;size()
        </from>
        <to>
            OCLExpressions.equal(numberOfCustomers,OCLCollections.size(loyaltyProgram.customer));
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context ProgramPartner
            inv: numberOfCustomers = loyaltyProgram.customer-&gt;asSet()-&gt;size()
        </from>
        <to>
            OCLExpressions.equal(numberOfCustomers,OCLCollections.size(OCLCollections.asSet(loyaltyProgram.customer)));
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices.transaction.points-&gt;sum() &lt; 10000
        </from>
        <to>
            OCLExpressions.less(OCLCollections.sum(partners.deliveredServices.transaction.points),10000);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context LoyaltyProgram
            inv: partners.deliveredServices.transaction-&gt;select(oclType = Burning)-&gt;collect( points )-&gt;sum() &lt; 10000
        </from>
        <to>
            OCLExpressions.less(OCLCollections.sum(OCLCollections.collect(OCLCollections.select(partners.deliveredServices.transaction,OCLExpressions.equal(oclType,Burning)),points)),10000);
        </to>
    </expression>

<!--
    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context LoyaltyAccount::isEmpty()
            pre : - - none
            post: result = (points = 0)
        </from>
        <to>
        </to>
    </expression>
-->

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context LoyaltyProgram
            inv: customer-&gt;forAll( age &gt;= 18 )
        </from>
        <to>
            OCLCollections.forAll(customer,OCLExpressions.greaterOrEqual(age,18));
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Customer
            inv: name = 'Edward'
        </from>
        <to>
            OCLExpressions.equal(name,"Edward");
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Customer
            inv: self.name = 'Edward'
        </from>
        <to>
            OCLExpressions.equal(this.name,"Edward");
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Membership
            inv: customer.card.membership->includes( self )
        </from>
        <to>
            OCLCollections.includes(customer.card.membership,this);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Services
            inv: self.pointsOffered &gt; 0 implies not (self.pointsBurned = 0)
        </from>
        <to>
            (OCLExpressions.greater(this.pointsOffered,0)?!(OCLExpressions.equal(this.pointsBurned,0)):true);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Customer
            inv: title = (if isMale = true then 'Mr.' else 'Ms.' endif)
        </from>
        <to>
            OCLExpressions.equal(title,(if(OCLExpressions.equal(isMale,true)){"Mr.";}else{"Ms.";}));
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Customer
            inv: self.age() &gt;= 0
        </from>
        <to>
            OCLExpressions.greaterOrEqual(this.age(),0);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Customer
            inv: self.isRelatedTo(self) = true
        </from>
        <to>
            OCLExpressions.equal(this.isRelatedTo(this),true);
        </to>
    </expression>

    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context Membership
            inv: (actualLevel.name = 'Silver' implies card.color = Color::silver)
                 and
                 (actualLevel.name = 'Gold' implies card.color = Color::gold)
        </from>
        <to>
            ((OCLExpressions.equal(actualLevel.name,"Silver")?OCLExpressions.equal(card.color,Color):true))&amp;&amp;((OCLExpressions.equal(actualLevel.name,"Gold")?OCLExpressions.equal(card.color,Color):true));
        </to>
    </expression>

<!--
    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
            context LoyaltyAccount::isEmpty()
            pre : - - none
            post: result = (points = 0)
        </from>
        <to>
        </to>
    </expression>
-->

<!--
    <expression contextType="org.ocltf.contracts.LegalAgreement">
        <from>
        </from>
        <to>
        </to>
    </expression>
-->

</translation-test>

