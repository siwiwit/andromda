#set ($className = $interface.interfaceImplementationName)
#set ($generatedFile = "${className}.java")
// license-header java merge-point
/* Autogenerated by AndroMDA Java cartridge (InterfaceImplementation.vsl) - do not edit */
#if ($stringUtils.isNotBlank($interface.packageName))
package $interface.packageName;
#set ($generatedFile = "${stringUtils.replace($interface.packageName,'.','/')}/${generatedFile}")
#end

/**
 * The default implementation of {@link $interface.name}
 */
public#if ($interface.abstractInterfaceImplementation) abstract#end class $className
    implements $interface.name
{

#if ($serializable && !$interface.abstractInterfaceImplementation)
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = ${interface.serialVersionUID}L;

#end
#foreach($attribute in $interface.getAttributes(true))
#if ($attribute.visibility == "public")
#if (!$attribute.static)
    private $attribute.getterSetterTypeName $attribute.name#if ($attribute.defaultValuePresent) = $attribute.defaultValue#end;
    
    /**
     * @see $interface.fullyQualifiedName#${attribute.getterName}()
     */
    public $attribute.getterSetterTypeName ${attribute.getterName}()
    {
        return this.${attribute.name};
    }
    
## - always generate setter on impl (so that the value can be populated
#if (!$attribute.readOnly)
    /**
     * @see $interface.fullyQualifiedName#${attribute.setterName}($attribute.getterSetterTypeName)
     */
#end
    public void ${attribute.setterName}($attribute.getterSetterTypeName $attribute.name)
    {
        this.${attribute.name} = $attribute.name;
    }
    
#end
#end
#end
#foreach ($associationEnd in $interface.getNavigableConnectingEnds(true))
    private $associationEnd.getterSetterTypeName $associationEnd.name;
    
    /**
     * @see $interface.fullyQualifiedName#${associationEnd.getterName}()
     */
    public $associationEnd.getterSetterTypeName ${associationEnd.getterName}()
    {
        return this.${associationEnd.name};
    }

## - always generate setter on impl (so that the value can be populated)
#if (!$associationEnd.readOnly)
    /**
     * @see $interface.fullyQualifiedName#${associationEnd.setterName}($associationEnd.getterSetterTypeName)
     */
#end
    public void ${associationEnd.setterName}($associationEnd.getterSetterTypeName $associationEnd.name)
    {
        this.${associationEnd.name} = ${associationEnd.name};
    }

#end
#foreach ($operation in $interface.operations)
#set ($returnType = $operation.returnType)
#if ($operation.visibility == "public")
    /**
     * @see ${interface.fullyQualifiedName}#${operation.getSignature(false)}
     */
#if ($operation.exceptionsPresent)
    public abstract $returnType.fullyQualifiedName $operation.signature
        throws $operation.exceptionList;
#else
    public abstract $returnType.fullyQualifiedName $operation.signature;
#end

#end
#end
}