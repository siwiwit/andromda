#set ($className = "SearchParameter")
#set ($generatedFile = "${className}.java")
#if($stringUtils.isNotEmpty($springTypesPackage))
package $springTypesPackage;
#set ($generatedFile = "${stringUtils.replace($springTypesPackage,'.','/')}/${generatedFile}")
#end

/**
 * Represents a generic search parameter that can be used with property
 * searches.
 * 
 * @see PropertySearch
 */
public class $className
    implements java.io.Serializable
{
    public static final int LIKE_COMPARATOR = 0;
    public static final int INSENSITIVE_LIKE_COMPARATOR = 1;
    public static final int EQUAL_COMPARATOR = 2;
    public static final int GREATER_THAN_OR_EQUAL_COMPARATOR = 3;
    public static final int GREATER_THAN_COMPARATOR = 4;
    public static final int LESS_THAN_OR_EQUAL_COMPARATOR = 5;
    public static final int LESS_THAN_COMPARATOR = 6;
    public static final int IN_COMPARATOR = 7;
    public static final int NOT_EQUAL_COMPARATOR = 8;

    /** Order unset */
    public static final int ORDER_UNSET = -1;

    /** Ascending order */
    public static final int ORDER_ASC = 0;

    /** Descending order */
    public static final int ORDER_DESC = 1;

    /**
     * Constructor taking name and value properties.
     */
    public $className(
        java.lang.String name,
        java.lang.Object value)
    {
        this(name, value, EQUAL_COMPARATOR, ORDER_UNSET);
    }

    /**
     * Constructor taking name, value and comparator properties.
     */
    public $className(
        java.lang.String name,
        java.lang.Object value,
        int comparator)
    {
        this(name, value, comparator, ORDER_UNSET);
    }

    /**
     * Constructor taking all properties.
     */
    public $className(
        java.lang.String name,
        java.lang.Object value,
        int comparator,
        int order)
    {
        this.name = name;
        this.value = value;
        this.comparator = comparator;
        this.order = order;
    }

    /**
     * Copies constructor from other $className
     */
    public $className($className otherBean)
    {
        if (otherBean != null)
        {
            this.name = otherBean.getName();
            this.value = otherBean.getValue();
            this.comparator = otherBean.getComparator();
            this.order = otherBean.getOrder();
        }
    }

    private java.lang.String name;

    /**
     * <p>
     * The parameter name in dot notation (i.e. person.firstNAme).
     * </p>
     */
    public java.lang.String getName()
    {
        return this.name;
    }

    public void setName(java.lang.String name)
    {
        this.name = name;
    }

    private java.lang.Object value;

    /**
     * The value of the parameter.
     */
    public java.lang.Object getValue()
    {
        return this.value;
    }

    public void setValue(java.lang.Object value)
    {
        this.value = value;
    }

    private int comparator = LIKE_COMPARATOR;

    /**
     *
     */
    public int getComparator()
    {
        return this.comparator;
    }

    public void setComparator(int comparator)
    {
        this.comparator = comparator;
    }

    private int order;

    /**
     * <p>
     * Order attribute to control if parameter is usedin order by
     * clause.
     * </p>
     */
    public int getOrder()
    {
        return this.order;
    }

    public void setOrder(int order)
    {
        this.order = order;
    }
    
    private boolean searchIfNull;
    
    /**
     * Whether this parameter will be included in the search even if it is <code>null</code>.
     * 
     * @return true/false
     */
    public boolean isSearchIfNull()
    {
        return this.searchIfNull;
    }

    /**
     * Defines whether parameter will be included in the search even if it is <code>null</code>.
     *
     * @param searchIfNull <code>true</code> if the parameter should be included in the search
     *                     even if it is null, <code>false</code> otherwise.
     */
    public void setSearchIfNull(boolean searchIfNull)
    {
        this.searchIfNull = searchIfNull;
    }

    private static final long serialVersionUID = 1L;
}