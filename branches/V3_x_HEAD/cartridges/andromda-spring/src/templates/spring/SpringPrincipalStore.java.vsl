#if (!$externalPrincipalStoreClass)
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringPrincipalStore.vsl in andromda-spring-cartridge.
//
#set ($generatedFile = "${principalStoreName}.java")
#if($stringUtils.isNotEmpty($springTypesPackage))
package $springTypesPackage;
#set ($generatedFile = "${stringUtils.replace($springTypesPackage,'.','/')}/${generatedFile}")
#end

/**
 * Stores the currently logged in Principal. The principal is passed
 * from another tier of the application (i.e. the web application).
 */
public final class PrincipalStore
{
#if ($enableTemplating)
    private static final ThreadLocal<java.security.Principal> store = new ThreadLocal<java.security.Principal>();
#else
    private static final ThreadLocal store = new ThreadLocal();
#end

#if ($ejbsEnabled)
#if ($enableTemplating)
    private static final ThreadLocal<javax.ejb.SessionContext> sessionContext = new ThreadLocal<javax.ejb.SessionContext>();
#else
    private static final ThreadLocal sessionContext = new ThreadLocal();
#end

#end
    /**
     * Get the user <code>principal</code>
     * for the currently executing thread.
     *
     * @return the current principal.
     */
    public static java.security.Principal get()
    {
#if ($ejbsEnabled)
        java.security.Principal principal;
        javax.ejb.SessionContext context =#if (!$enableTemplating)(javax.ejb.SessionContext)#end sessionContext.get();
        if (context != null)
        {
            principal = context.getCallerPrincipal();
        }
        else
        {
            principal =#if(!$enableTemplating)(java.security.Principal)#end store.get();
        }
        return principal;
#else
        return#if(!$enableTemplating)(java.security.Principal)#end store.get();
#end 
    }

    /**
     * Set the <code>principal</code> for the currently
     * executing thread.
     *
     * @param name the user principal
     */
    public static void set(final java.security.Principal principal)
    {
        store.set(principal);
    }
#if ($ejbsEnabled)

    /**
     * Set the <code>sessionContext</code> for the currently
     * executing thread.
     *
     * @param name the user sessionContext
     */
    public static void setSessionContext(final javax.ejb.SessionContext context)
    {
        sessionContext.set(context);
    }
#end
}
#end