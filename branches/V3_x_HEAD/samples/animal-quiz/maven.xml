<project default="install"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven"
         xmlns:j="jelly:core"
         xmlns:util="jelly:util">

    <ant:property environment="env"/>

    <!-- ==================================================================
         Do some checks 
         ================================================================== -->
    <goal name="check">
       <j:set var="jbossHome" value="${env.JBOSS_HOME}" defaultValue=""/>
		 
       <j:if test="${jbossHome == '' }">
 	      <fail>*** JBOSS_HOME not set.</fail>
       </j:if>
       <available property="jbossPresent" type="dir" file="${jbossHome}"/>
	   <j:if test="${jbossPresent != 'true'}">
	      <fail>*** JBOSS_HOME ${jbossHome} not found.</fail>
       </j:if>
									       
    </goal>

    <!-- ==================================================================
           Builds everything and installs it into the local Maven repository
         ================================================================== -->
    <goal name="install">
        <attainGoal name="multiproject:install"/>
    </goal>


    <!-- ==================================================================
           Cleans Everything
         ================================================================== -->
    <goal name="clean">
        <attainGoal name="multiproject:clean"/>
        <!-- get rid of all the log files -->
        <ant:delete>
          <ant:fileset dir=".">
            <ant:include name="**/*.log*"/>
            <ant:exclude name="maven.log"/>
          </ant:fileset>
        </ant:delete>
    </goal>

    <!-- ==================================================================
            Build and Deploy the Application
         ================================================================== -->
    <goal name="build-deploy">
        <attainGoal name="check"/>
        <attainGoal name="mda"/>
        <attainGoal name="common"/>
        <attainGoal name="web"/>
        <attainGoal name="core"/>
        <attainGoal name="deploy"/>
    </goal>

    <!-- ==================================================================
            Deploy the Application
         ================================================================== -->
    <goal name="deploy">
        <attainGoal name="check"/>
        <maven:maven
            descriptor="app/project.xml"
            goals="deploy"/>
    </goal>

    <!-- ==================================================================
           Undeploy the Application
         ================================================================== -->
    <goal name="undeploy">
        <attainGoal name="check"/>
        <maven:maven
            descriptor="app/project.xml"
            goals="undeploy"/>
    </goal>

    <!-- ==================================================================
           Builds the Web component
         ================================================================== -->
    <goal name="web">
        <maven:maven
            descriptor="web/project.xml"
            goals="war:install"/>
    </goal>

    <!-- ==================================================================
            Builds the Core component
         ================================================================== -->
    <goal name="core">
        <maven:maven
            descriptor="core/project.xml"
            goals="ejb:install"/>
    </goal>

    <!-- ==================================================================
            Builds the Common component
         ================================================================== -->
    <goal name="common">
        <maven:maven
        descriptor="common/project.xml"
        goals="jar:install"/>
    </goal>

    <!-- ==================================================================
            Runs the MDA component
         ================================================================== -->
    <goal name="mda">
        <maven:maven
            descriptor="mda/project.xml"
            goals="pom:install"/>
    </goal>

    <!-- ==================================================================
            Builds the WebService component
         ================================================================== -->
    <goal name="webservice">
        <maven:maven
            descriptor="webservice/project.xml"
            goals="war:install"/>
    </goal>

    <!-- ============================================================
             Initializes the database schema for this application
         ============================================================ -->
    <goal name="create-schema">
        <j:set var="script" value="${dataSource.sql.init}"/>
        <attainGoal name="execute-script"/>
    </goal>

    <!-- ============================================================
             Drops the database schema for this application
         ============================================================ -->
    <goal name="drop-schema">
        <j:set var="script" value="${dataSource.sql.drop}"/>
        <attainGoal name="execute-script"/>
    </goal>

    <j:set var="generatedSourceDir" value="${maven.build.src}"/>
    <ant:available
        file="${maven.build.src}"
        type="dir"
        property="generatedSrcAvailable"/>

     <!-- ============================================================
            Adds the generated source to the compile path for
            each subproject (if any exists)
          ============================================================ -->
    <preGoal name="java:compile">
        <!-- only attempt to add the generated source to the classpath
             if we have a source directory -->
        <j:set var="sourceDirectory" value="${pom.build.sourceDirectory}"/>
        <j:if test="${!empty sourceDirectory}">
            <j:if test="${generatedSrcAvailable}">
                <ant:available
                    file="${sourceDirectory}"
                    type="dir"
                    property="srcAvailable"/>
                <j:choose>
                    <j:when test="${srcAvailable}">
                        <!-- add the paths of the generated source to the
                             maven compile path -->
                        <ant:path
                            id="andromda.java.gen.src"
                            location="${generatedSourceDir}"/>
                        <maven:addPath
                            id="maven.compile.src.set"
                            refid="andromda.java.gen.src"/>                    
                    </j:when>
                    <j:otherwise>
                        <ant:path id="maven.compile.src.set">
                            <!-- need to set sources present to true since
                                 maven thinks no source exist if the directory
                                 specified by pom.build.sourceDirectory doesn't exist -->
                            <j:set var="sourcesPresent" value="true"/>
                            <ant:pathelement location="${generatedSourceDir}"/>
                        </ant:path>                        
                    </j:otherwise>
                </j:choose>
            </j:if>
        </j:if>

            <property name="path" refid="maven.compile.src.set"/>
            <echo>path==============${path}</echo>
    </preGoal>

    <!-- ============================================================
             Executes the given DDL script
         ============================================================ -->
    <goal name="execute-script">
	    <ant:available
			  file="${dataSource.driver.jar}"
			  type="file"
			  property="jarAvailable"/>
	    
	    <j:choose>
		    <j:when test="${jarAvailable}">
			    <j:if test="${script != null}">
				    <util:file var="scriptFile" name="${script}"/>
				    <j:if test="${scriptFile.exists()}">
					    <ant:sql driver="${dataSource.driver.class}" 
						     src="${scriptFile}"
						     url="${dataSource.url}" 
						     userid="${dataSource.user}" 
						     password="${dataSource.password}" 
						     onerror="${dataSource.sql.onError}">
						    <ant:classpath>
							    <ant:pathelement location="${dataSource.driver.jar}"/>
						    </ant:classpath>
					    </ant:sql>
				    </j:if>
			    </j:if>
		    </j:when>
		    <j:otherwise>
			    <j:set var="message" value="Jar ${dataSource.driver.jar} not found."/>
			    <ant:echo message="${message}"/>                        
		    </j:otherwise>
	    </j:choose>
    </goal>

</project>
