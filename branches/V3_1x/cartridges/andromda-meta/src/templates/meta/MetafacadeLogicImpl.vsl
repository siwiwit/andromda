#set ($generatedFile = $metafacade.logicImplFile)
#if ($metafacade.logicPackageName)
package $metafacade.logicPackageName;
#end

#if ($metafacade.metaclassDirectDependency)
#set ($shieldedMetaclassTypeName = $metafacade.metaclass.fullyQualifiedName)
#else
#set ($shieldedMetaclassTypeName = "Object")
#end

/**
 * MetafacadeLogic implementation for $metafacade.fullyQualifiedName.
 *
 * @see $metafacade.fullyQualifiedName
 */
public class $metafacade.logicImplName
    extends $metafacade.logicName
{

    public ${metafacade.logicImplName} ($shieldedMetaclassTypeName metaObject, String context)
    {
        super (metaObject, context);
    }
#set ($attributes = $metafacade.attributes)
#if (!$attributes.empty)

#foreach ($attribute in $attributes)
#set ($methodName = $attribute.getterName)
#set ($returnTypeName = $attribute.type.fullyQualifiedName)
    /**
     * @see ${metafacade.fullyQualifiedName}#${attribute.getterName}()
     */
    protected $returnTypeName ${attribute.implementationOperationName}()
    {
        // TODO: put your implementation here.
        return $attribute.type.javaNullString;
    }

#end
#end
##
#if (!$metafacade.operations.empty)
#foreach ($operation in $metafacade.operations)
#set ($methodName = $operation.name)
#set ($returnTypeName = $operation.returnType.fullyQualifiedName)
#if ($defaultException)
    $operation.visibility $returnTypeName ${operation.implementationName}($operation.typedArgumentList)
        throws $defaultException.name 
    {
#else
    /**
     * @see ${metafacade.fullyQualifiedName}#${operation.getSignature(false)}
     */
    protected $returnTypeName ${operation.implementationName}($operation.typedArgumentList)
    {
#end
        // TODO: put your implementation here.
#if ($operation.returnTypePresent)
        return $operation.returnType.javaNullString;
#end
    }

#end
#end
##
#if (!$metafacade.associationEnds.empty)
#foreach ($associationEnd in $metafacade.associationEnds)
#if ($associationEnd.otherEnd.navigable)
#if ($associationEnd.otherEnd.many)
#set ($returnTypeName = $associationEnd.otherEnd.getterSetterTypeName)
#else
#set ($returnTypeName = "java.lang.Object")
#end
    /**
     * @see ${metafacade.fullyQualifiedName}#${associationEnd.otherEnd.getterName}()
     */
    protected $returnTypeName ${associationEnd.otherEnd.implementationOperationName}()
    {
        // TODO: add your implementation here!
        return null;
    }

#end
#end
#end
}