# -------------------------------------------------------------------
# P L U G I N  P R O P E R I E S
# -------------------------------------------------------------------
# AndroDEV plugin.
# -------------------------------------------------------------------

# Can be specified to override the core default ModelFacade implementation.
maven.androdev.modelFacade=

# Can be specified to override the core default Repository implementation.
maven.androdev.repository=

# Set the language mappings
maven.androdev.languageMappingsUri=file:${plugin.resources}/mappings/JavaMappings.xml

# If this value is set to false, JUnit test run details will 
# appear on the console as the tests are executed. If not, 
# they are stored in a file in the test-reports directory. 
# The default value is true. 
maven.androdev.printreport=true

# The extension for generated translation files
maven.androdev.translation.file.ext=vsl

# The package to which Translators will be generated
maven.androdev.translation.translator.package=org.andromda.translation.${library}

# The Translator super class (if empty, the Translator won't have one)
maven.androdev.translation.translator.superclass=org.andromda.core.translation.BaseTranslator

# This is the contextType used with generated test files
# This contextType must be an element contained within the model you're testing with.
maven.androdev.translation.translator.contextType=org.andromda.contracts.LegalAgreement

# The package in which tests are generated (this shouldn't be overriden)
maven.androdev.translation.translation.test.package=org.andromda.translation

# The version of the andromda-core to use when generating POMs (this is will be added as a dependency
# in the generated POM)
maven.androdev.core.version=${pom.currentVersion}

# Whether or not we want model validation to occur when 
# performing translation tests
maven.androdev.translation.test.model.validation=true