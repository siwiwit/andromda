// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: Entity.vsl in andromda-ejb3-cartridge.
//
package org.andromda.demo.ejb3.rental;

/**
 * Autogenerated POJO EJB3 implementation class for RentalCar.
 *
 * Add any manual implementation within this class.  This class will NOT
 * be overwritten with incremental changes.
 *
 * 
 *
 */

@javax.persistence.Entity
// Uncomment to enable seam component name
// @org.jboss.seam.annotations.Name("rentalCar")
// Uncomment to set specific component scope type
//@org.jboss.seam.annotations.Scope(org.jboss.seam.ScopeType.CONVERSATION)
@javax.persistence.Table(name = "RENTAL_CAR")
// Uncomment to enable entity listener for RentalCar
// @javax.persistence.EntityListeners({org.andromda.demo.ejb3.rental.RentalCarListener.class})
// Uncomment to enable caching for RentalCar
// @org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
@javax.persistence.NamedQuery(name = "RentalCar.findAll", query = "select rentalCar from RentalCar AS rentalCar")    
public class RentalCar
    extends org.andromda.demo.ejb3.rental.RentalCarEmbeddable
    implements java.io.Serializable, Comparable<RentalCar>
{

    /**
     * The serial version UID of this class required for serialization.
     */
    private static final long serialVersionUID = 2906953605375104726L;

    // --------------- constructors -----------------
    
    /**
     * Default RentalCar constructor
     */
    public RentalCar()
    { 
        super();
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this/super class to the
     * values provided by the parameters.
     *
     */
    public RentalCar(java.lang.String serial, java.lang.String name, org.andromda.demo.ejb3.rental.CarType type) 
    {
        super(serial, name, type);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param serial Value for the serial property
     * @param name Value for the name property
     * @param type Value for the type property
     * @param owner Value for the owner relation role
     */
    public RentalCar(java.lang.String serial, java.lang.String name, org.andromda.demo.ejb3.rental.CarType type, org.andromda.demo.ejb3.rental.Person owner)
    {
        super(serial, name, type, owner);
    }
    

    // -------------- Entity Methods -----------------
    
    /**
     * 
     */
    @javax.persistence.Transient
    public boolean isRented()
    {
        // TODO put your implementation here.
        return false;
    }

    /**
     * 
     */
    @javax.persistence.Transient
    public static boolean allCarsAreRented()
    {
        // TODO put your implementation here.
        return false;
    }


    // --------------- Lifecycle callbacks -----------------

    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(RentalCar o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getSerial() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getSerial().compareTo(o.getSerial()));
            }
            if (this.getName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getType() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getType().compareTo(o.getType()));
            }
        }
        return cmp;
    }
}