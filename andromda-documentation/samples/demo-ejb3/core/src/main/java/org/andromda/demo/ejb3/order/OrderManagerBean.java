// license-header java merge-point
//
// Generated by: SessionBeanImpl.vsl in andromda-ejb3-cartridge.
//
package org.andromda.demo.ejb3.order;

/**
 * @see org.andromda.demo.ejb3.order.OrderManagerBean
 */
/**
 * Do not specify the javax.ejb.Stateless annotation
 * Instead, define the session bean in the ejb-jar.xml descriptor
 * @javax.ejb.Stateless
 */
/**
 * Uncomment to enable webservices for OrderManagerBean
 *@javax.jws.WebService(endpointInterface = "org.andromda.demo.ejb3.order.OrderManagerWSInterface")
 */
public class OrderManagerBean
    extends org.andromda.demo.ejb3.order.OrderManagerBase
{
    // --------------- Constructors ---------------

    public OrderManagerBean()
    {
        super();
    }

    // -------- Business Methods Impl --------------

    /**
     * @see org.andromda.demo.ejb3.order.OrderManagerBase#addOrder(org.andromda.demo.ejb3.order.OrderInfo)
     */
    protected long handleAddOrder(org.andromda.demo.ejb3.order.OrderInfo order)
        throws java.lang.Exception
    {
        return getOrderInfoDao().create(order).getId();
    }

    /**
     * @see org.andromda.demo.ejb3.order.OrderManagerBase#getOrders(int)
     */
    protected java.util.Collection handleGetOrders(int index)
        throws java.lang.Exception
    {
        return getOrderInfoDao().findAllByIndex(index);
    }

    /**
     * @see org.andromda.demo.ejb3.order.OrderManagerBase#getOrders(int, int)
     */
    protected java.util.Collection handleGetOrders(int index, int max)
        throws java.lang.Exception
    {
        return getOrderInfoDao().findAllWithLimits(index, max);
    }

    /**
     * @see org.andromda.demo.ejb3.order.OrderManagerBase#getAllOrders()
     */
    protected java.util.Collection handleGetAllOrders()
        throws java.lang.Exception
    {
        return getOrderInfoDao().loadAll();
    }


    // -------- Lifecycle Callback Impl --------------

}
