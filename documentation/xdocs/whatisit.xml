<?xml version="1.0" encoding="UTF-8"?>

<document>

    <properties>
        <author email="mbohlen@mbohlen.de">Matthias Bohlen</author>
        <author email="cwbrandon@users.sourceforge.net">Chad Brandon</author>
        <title>AndroMDA - What is it?</title>
    </properties>

    <body>

        <section name="What is AndroMDA?">

            <p>
          In short, AndroMDA is an open source
                <a href="http://www.klasse.nl/english/mda/mda-faq.html">MDA</a>
          framework - it takes any number of models 
          (usually UML models stored in XMI produced from case-tools) combined with any 
          number of andromda plugins (cartridge and translation-libraries) and produces
          any number of custom components.  You can generate components for any language you want,
          Java, .Net, HTML, PHP, anything really, you just write (or customize existing) plugins 
          to support it and you're good to go.
            </p>
            <p>
                <b>Why would you want to use it?</b>
            </p>
            <p>
          You would want to use AndroMDA for a number of reasons:
                <ol>
                    <li>
                It elimates the need to write redundant code.
                    </li>
                    <li>
                Your project models
                        <strong>WILL</strong> reflect your code.
                    </li>
                    <li>
                Projects are documented/diagrammed in a standard platform independant way 
                making it much easier/faster to adapt to ever rapidly changing technologies.
                    </li>
                    <li>
                You'll have artifacts (your models) that allow much easier communication 
                with the business side of things.
                    </li>
                </ol>
            </p>
            <p>
                <b>Okay, that all sounds fine, but what can AndroMDA do for me *now* ?</b>
            </p>
            <p>
                At the time of this writing AndroMDA is mostly used by developers working with J2EE technologies.
                Out-of-the-box AndroMDA can setup a new J2EE project from scratch, in which code is generated from a UML
                model. You can choose to generate code for
                <a href="andromda-hibernate-cartridge/index.html">Hibernate</a>,
                <a href="andromda-ejb-cartridge/index.html">EJB</a>,
                <a href="andromda-spring-cartridge/index.html">Spring</a>,
                <a href="andromda-webservice-cartridge/index.html">WebServices</a>,
                and <a href="andromda-bpm4struts-cartridge/index.html">Struts</a>.
                The generated code is automatically integrated into the build process. In doing so you will only need
                to spend a little time getting to know AndroMDA and you're good to go, you will see it is very efficient
                to have the code generated for you, while keeping your focus on business logic.
            </p>
            <p>
                Additionally AndroMDA ships with a few tools to make your life easier:
            </p>
            <p>
                <ul>
                    <li>As already mentioned, we have a tool to generate project templates such as for J2EE:
                        <a href="maven-andromdapp-plugin/index.html">andromdapp:generate</a>,
                        this is a maven plugin.</li>
                    <li><a href="andromda-schema2xmi/index.html">Schema2XMI</a>
                        is able to read your database and build an XMI file from it,
                        which can then be used to load as a UML model.</li>
                    <li>Admin-Console is a web application that can be used for the maintenance of your database
                        tables. It allows to list, insert, update and delete rows from your database.
                        It is very configurable so you can present your data in a way that suits the users best.
                        You could deploy this tool together with your own application and easily and quickly perform
                        CRUD operations (this tool is still under development and is only available through CVS)</li>
                </ul>
            </p>
            <p>
                <b>How does AndroMDA work?</b>
            </p>
            <p>
                AndroMDA reads models into memory making these object models available to its
                plugins.  These plugins define exactly what AndroMDA will and will 
                NOT generate.  Each plugin is completely customizable to a project's specific needs.
            </p>
            <p>
                We invite you to get to know AndroMDA, here are three links that will point you in the right direction:
            </p>
            <p>
                <ul>
                    <li><a href="starting.html">Getting started</a></li>
                    <li><a href="samples.html">AndroMDA Samples</a></li>
                    <li><a href="releases.html">Releases</a></li>
                </ul>
            </p>
        </section>
    </body>
</document>
