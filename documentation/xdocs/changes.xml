<?xml version="1.0" encoding="iso-8859-1"?>
<document>
    <properties>
        <author email="wouter@andromda.org">Wouter Zoons</author>
        <author email="cwbrandon@users.sourceforge.net">Chad Brandon</author>
        <author email="amartinwest@users.sourceforge.net">Martin West</author>
        <author email="freter@users.sourceforge.net">Peter Friese</author>
        <author email="carloslcuenca@users.sourceforge.net">Carlos Cuenca</author>
        <title>Recent AndroMDA changes</title>
    </properties>
    <body>
        <release version="3.1-M1-SNAPSHOT" date="2005-06-11" description="Continuous build for the first milestone release of version 3.1">
            <action dev="cwbrandon" type="add">
                The Spring cartridge can now generate for Hiberante 3 (as well as Hibernate 2 as before).  Version 2
                is the default, in order to change the version to 3, you must set the <em>hibernateVersion</em> 
                namespace property with a value of <em>3</em>.
            </action>
            <action dev="draftdog" type="update">
                In bpm4struts it is now also possible to have non-event parameters survive the trip to the next
                use-case, previously only event parameters would only be able to do that because
                they would be immediately present in the HTTP request. More is documented
                <a href="andromda-bpm4struts-cartridge/howto2.html#Sending_parameters_across_use-cases">here</a>.
            </action>
            <action dev="carloslcuenca" type="add">
                The Hibernate cartridge can now generate for Hibernate 3 (as well as Hibernate 2 as before).
                Version 2 is the default, in order to change the version to 3, you need to define the <em>version</em>
                namespace property with a value of <em>3</em>.
            </action>
            <action dev="cwbrandon" type="add">
                Major performance improvements have been added to the AndroMDA core, as well as a new feature called 
                the <a href="configuration/server-howto.html">AndroMDA Server</a> which dramatically enhances the 
                performance of AndroMDA.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-67">
                AndroMDA is now configured through a single XML configuration file.  This means both the Ant task and Maven
                plugin just point to this file.  Please see the <a href="configuration.html">configuration</a> documentation 
                for more information.
            </action>
            <action dev="draftdog" type="add" issue="BPM-186">
                Manageable entities can now have non-required fields hidden if desired,
                it is also possible to use textareas instead of plain textfields.
            </action>
            <action dev="draftdog" type="update" issue="BPM-181">
                Implemented an improvement in the bpm4struts cartridge related to the i18n of messages. It is now
                possible to have all messages normalized before they are being rendered into the resource bundle. This
                means that elements with the same name will use the same message key, previouly each element had its
                own message key which could easily lead to very large resource bundles. This feature is disabled by
                default but can be enabled by using the <code>normalizeMessages</code> namespace property and setting
                it to <code>true</code>.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-55">
                Template merging now occurs before template processing happens, this means you can merge in dynamic content into templates
                (previously it was only static content).
            </action>
            <action dev="draftdog" type="add" issue="BPM-186">
                When using manageable entities it is now possible to have binary data uploaded into 'blob' fields,
                just use <code>datatype::Blob</code> and a file-upload field will be generated automatically. It is
                not possible to actually show the value of a 'blob' field in the table, a default label will be shown
                instead.
            </action>
            <action dev="draftdog" type="update" issue="BPM-195">
                If you want anyone to be able to access a use-case when security is enabled, then simply do not
                associate any actors to it. This functionality replaces the <![CDATA[<<Unsecured>>]]> stereotype.
            </action>
            <action dev="cwbrandon" type="fix" issue="SPRING-73">
                Fixed an issue that rendered the create method taking all required properties uncompilable when the multiplicity
                of an association end was 1..*.
            </action>
            <action dev="draftdog" type="fix">
                A set of improvements and new features for managing CRUD entities have been implemented
                <ol>
                    <li>An issue with Konqueror has been resolved: select boxes did not change value when clicking
                        on the <em>Copy</em> link</li>
                    <li>Comboboxes now retain their value after updating an entity</li>
                    <li>Enumeration types are now properly handled when the literal type is a primitive</li>
                    <li>Switching to an entity from the drop-down list will remember the current entity's (if any)
                        identifier and will pre-select any corresponding list with this value</li>
                    <li>Required fields now have an <em>asterisk</em> next to them</li>
                    <li>Modeling a default value for an attribute is now supported: the field will have this as a
                        default value</li>
                    <li>An entity referencing itself would not be able to have an instance pointing to itself
                        (foreign key being equal to the primary key), Hibernate would complain about different objects
                        with the same identifier being loaded in the same session; this has been fixed</li>
                </ol>
            </action>
            <action dev="draftdog" type="update" issue="BPM-170">
                Warning, error and success messages are now stored in session scope, the Struts request processes
                now properly handles this and removes them once they have been accessed the first time, this feature
                is available since Struts 1.2.4. Except for the dependency on Struts 1.2.4 this update is transparent.
            </action>
        </release>
        <release version="3.0" date="2005-05-08" description="Version 3.0 final">
            <action dev="cwbrandon" type="update">
                Package filtering has been changed to use the correct '::' namespace separator instead of the 
                java specific separator; this means that whenever you apply package filtering you'll have to use
                the '::' seperator between packages instead of '.' 
                (see <a href="andromda-ant-task/index.html#modelPackage"><![CDATA[<modelPackage/>]]></a> for
                Ant or <a href="maven-andromda-plugin/properties.html#maven_andromda_modelPackage">maven.andromda.modelPackage.<em>n</em>.name</a>
                for Maven).
            </action>
            <action dev="draftdog" type="update">
                Generating CRUD for entities has been updated:
                <ol>
                    <li>Identifiers are only rendered when explicitly modeled (unless the
                        <code>manageableIdDisplayStrategy</code> namespace property is used).</li>
                    <li>Dates are handled in a special way, if no time information is given the generated code
                        will assume the user wishes to search in the scope of an entire day instead of
                        the exact date (matching that date at midnight).</li>
                </ol>
            </action>
        </release>
        <release version="3.0-RC2" date="2005-04-25" description="Second release candidate for version 3.0">
            <action dev="cwbrandon" type="add" issue="MAVEN-23">
                The <a href="maven-andromdapp-plugin/index.html">AndroMDA App Maven Plugin</a> can now generate 
                standalone war files (that can be deployed to <a href="http://jakarta.apache.org/tomcat">Tomcat</a>).
            </action>
            <action dev="freter" type="add" issue="HIB-87">
                Hibernate entities (which are marked as serializable) will now contain a field <code>serialVersionUID</code>
                in order to satisfy
                <a href="http://java.sun.com/j2se/1.4.2/docs/guide/serialization/spec/version.html">Versioning of Serializable Objects</a>
                and
                <a href="http://c2.com/cgi/wiki?AlwaysDeclareSerialVersionUid">Always Declare Serial Version Uid</a>.
                Users can override the automatically calculated SUID by setting the tagged value "@andromda.serialVersionUID".
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-40">
                Mapping files can now extend other mapping files (this allows you to only add or customize
                the specific mapping entries you need and inherit the rest).  For more information see
                <a href="mappings.html#Extending_and_Overriding">extending and overriding</a> mappings.
            </action>
            <action dev="draftdog" type="update">
                Bpm4struts no longer generates the <code>custom-resources.properties</code> file, you will need to
                merge your own properties into the default bundle. If you project still contains JSP files
                with messages read from the <code>custom</code> bundle you can safely point them to the
                default bundle (by removing the <code>bundle</code> attribute). Read this page for more info:
                <a href="andromda-bpm4struts-cartridge/howto10.html">Bpm4Struts i18n</a>.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-62">
                It is now possible to merge the entire contents of one or more files into a merge-point. Please see the
                <a href="andromda-cartridges/index.html#mergingFileContents">merge-point documentation</a>
                for more information.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-56">
                It is now possible to specify XSL transformation templates to be applied to the model(s) before model
                processing begins, please see the
                <a href="maven-andromda-plugin/properties.html#maven_andromda_transformation_uri">AndroMDA Maven Plugin</a> or
                the <a href="andromda-ant-task/index.html#transformation">AndroMDA Ant Task</a> (depending on what
                you use) for more information.
            </action>
            <action dev="draftdog" type="add" issue="BPM-107">
                It is now possible to use the <![CDATA[<<Unsecured>>]]> stereotype on use-cases that need to be
                accessible for anyone, even when security has been enabled.
            </action>
            <action dev="cwbrandon" type="update">
                The AndroMDA Ant task has been refactored out of the Core, and the package name has changed
                to <em>org.andromda.ant.task</em>, Maven users are not affected by this change, however Ant
                users will need to update the package from the old <em>org.andromda.core.anttasks</em> to the
                new <em>org.andromda.ant.task</em>.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-59">
                The encoding can now be set for both the Ant Task and the AndroMDA Maven plugin,
                <code>maven.andromda.outputEncoding</code> is the required property for the Maven plugin,
                 and the <code>outputEncoding</code> is the attribute for the Andromda Ant task.  Please see the documentation
                 for each for more information.
            </action>
            <action dev="draftdog" type="add" issue="BPM-168">
                The new table-link feature in the bpm4struts cartridge now supports arbitrary parameters, they are
                no longer restricted to the ones that match a column.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-19">
                Meta element inheritance is now taken into account when the AndroMDA Core searches for mappings, this
                means that cartridge writers no longer need to create multiple mappings for each meta element class name,
                they can just map a base meta element class name and any inherited ones will automatically be
                mapped.
            </action>
            <action dev="cwbrandon" type="add" issue="META-4">
                The meta cartridge now supports generation of multiple inheritance for metafacades.
            </action>
            <action dev="carloslcuenca" type="add">
                The hibernate cartridge now allows to define indexes on the foreign key columns generated by entities associations.
            </action>
            <action dev="draftdog" type="update" issue="BPM-162">
                It is now possible to model events that submit a table row in bpm4struts, also the way to model
                hyperlinks in table columns has changed. Please see the
                <a href="andromda-bpm4struts-cartridge/howto8.html">updated table documentation</a>, as this
                feature is not backwards compatible with the old way of doing this, a necessary evil before releasing
                the final version of AndroMDA 3.0.
            </action>
            <action dev="draftdog" type="fix" issue="BPM-163">
                Bpm4Struts now allows a new namespace property called <code>defaultTableExportTypes</code>, it takes
                a space-separated list of export types that will be used by default by the displaytag tables,
                valid types are any combination of <code>csv</code>, <code>xml</code>, <code>excel</code> and
                <code>pdf</code>, use <code>none</code> to disable exporting for tables.
                In addition the <code>@andromda.struts.view.table.export</code> tagged
                value can now also take the <code>none</code> value to turn off export for the corresponding table.
            </action>
            <action dev="cwbrandon" type="fix" issue="MISC-29">
                Mappings are now required to use the correct '::' namespace separator istead of the Java
                specific '.' separator.  This requires any custom type mapping files to replace all occurances
                of '.' with '::' (for example <em>datatype.Long</em> now needs to be mapped as <em>datatype::Long</em>
                within the JavaMappings.xml file).
            </action>
            <action dev="draftdog" type="fix" issue="BPM-160">
                Client-side validation for dates have been improved, the default one which is taken from
                <code>commons-validator</code> only supports a very limited subset of the features one would expect.
                We are now explicitely overriding this JavaScript routine in <code>validator-rules.xml</code>.
            </action>
            <action dev="draftdog" type="fix" issue="BPM-157">
                It is now possible to seemlessly pass form data across different use-cases, the target form will
                be populated using the matching properties from the source form.
            </action>
            <action dev="cwbrandon" type="add">
                The <a href="andromda-spring-cartridge/index.html">Spring Cartridge</a> DAO transformation methods can
                now be generated for UML datatypes as well (in addition to value objects), just draw a dependency
                from an entity to a datatype, and the corresponding transform method will be generated on the DAO.
                This is useful when you need to return a single field from an entity.
            </action>
            <action dev="cwbrandon" type="add">
                The <a href="andromda-spring-cartridge/index.html">Spring Cartridge</a> DAOs now contain create and update
                operations that take a collection of entities (similar to the already existing DAO remove operation).  Please
                note that this change requires you to upgrade Spring to 1.1.5 or above.
            </action>
            <action dev="cwbrandon" type="update">
                When generating value objects for webservices, the webservice cartridge no longer generates its own
                value objects but instead uses the ones generated from the java cartridge, it's just required
                to set the <a href="andromda-metafacades-uml/namespace.html#useArraysForMultiplicitiesOfTypeMany">useArraysForMultiplicitiesOfTypeMany</a>
                namespace property to true (so that arrays are generated for association ends with multiplicities
                of type many) and make sure you have the
                <a href="andromda-java-cartridge/namespace.html#value-objects">value-objects</a> namespace property defined
                for the java cartridge.
            </action>
            <action dev="draftdog" type="fix" issue="HIB-82">
                Many-to-many relationships, where only a single table is involved, are not causing the Hibernate
                SchemaExport tool to choke anymore. This bug was related to the generated foreign key constraint names.
            </action>
            <action dev="draftdog" type="fix" issue="BPM-81">
                The calendar support has completely been rewritten, make sure your JSPs reflect the latest changes
                if you're using the copy-over feature.
            </action>
        </release>
        <release version="3.0-RC1" date="2005-03-27" description="First release candidate for version 3.0">
            <action dev="draftdog" type="add" issue="HIB-81">
                The Hibernate cartridge now generates readable foreign key constraint names where possible. This
                information is generated into the mapping files and is processed by the <code>SchemaExport</code>
                tool when generating the database schema DDL. The
                <code>@andromda.persistence.foreignkey.constraint</code> tagged value can be used to override the
                default name.
            </action>
            <action dev="draftdog" type="add" issue="BPM-154">
                It is now possible to model page-to-page transitions with the bpm4struts cartridge. An intermediate
                Struts action will transparently be generated.
            </action>
            <action dev="cwbrandon" type="add" issue="SPRING-52">
                The Spring cartridge now has configurable transactions for Spring service operations.  This change required
                the rename of @andromda.transaction.type to @andromda.ejb.transaction.type to prevent conflicts with
                the spring service transaction tagged value (@andromda.spring.transaction.type) and to be consistent
                with other cartridge specific tagged values.
            </action>
            <action dev="cwbrandon" type="update" issue="HIB-71">
                Hibernate enumerations (generated by the Hibernate cartridge) now extend the regular java enumerations
                generated by the java cartridge (so that they can co-exist peacefully).  Note, you'll now need to enable
                the enumerations outlet from the java cartridge when using the hibernate enumerations.
            </action>
            <action dev="draftdog" type="update">
                The <![CDATA[<<PrimaryKey>>]]> stereotype has been renamed to <![CDATA[<<Identifier>>]]>. UML tools
                that do not import the latest version of the andromda profile will need to have the stereotype
                renamed by the user.
            </action>
            <action dev="draftdog" type="add">
                The caching of metafacade properties can now be disabled (even on a per cartridge basis), just use
                the <code>enableMetafacadePropertyCaching</code> namespace property. Most properties are being cached
                now for reasons of performance.
            </action>
            <action dev="freter" type="add" issue="SPRING-47">
                The spring cartridge now supports nullable attributes in criteria finders.
            </action>
            <action dev="cwbrandon" type="fix" issue="OCL-9">
                A bug in the OCL query translation library was causing some relational operations (such as
                <![CDATA['<>' and '<=') to be incorrectly translated to '>']]>, this has been fixed.
            </action>
            <action dev="draftdog" type="add">
                The bpm4struts cartridge now supports exporting to PDF, existing projects will need to include
                the <a href="http://www.ibiblio.org/maven/itext/jars/itext-0.99.jar">IText v0.99</a> dependency.
                Add this dependency to your <code>/web/project.xml</code>.
            </action>
            <action dev="cwbrandon" type="add" issue="SPRING-38">
                The spring cartridge now supports modeled hibernate criteria finders (Thanks to Stefan Reichert and Peter Friese).
            </action>
            <action dev="cwbrandon" type="update" issue="CORE-15">
                OCL translation support has been moved into the translation-libraries/ocl module (out of the andromda-core)
                and all ocl translation specific classes are now in a package beginning with
                <em>org.andromda.translation.ocl</em>.
            </action>
            <action dev="draftdog" type="add" issue="BPM-13">
                The bpm4struts cartridge now generates a <code>displaytag.properties</code> file, the labels
                used by the displaytag library are not internationalized, you will need to update the library
                to version 1.0.
            </action>
            <action dev="draftdog" type="fix">
                Bpm4Struts templates have moved into cartridge subdirectories and have been given proper
                names, make sure to update your own templates if you are overriding these resources.
            </action>
            <action dev="draftdog" type="add" issue="BPM-147">
                The bpm4struts cartridge now support <a href="http://displaytag.sourceforge.net">displaytag</a>
                table decorators. Just use the <code>@andromda.struts.view.table.decorator=true</code>
                tagged value on your table to have an empty decorator generated for it. By default
                the decorator class names end with <code>Decorator</code>, but this can be changed using
                the <code>tableDecoratorSuffix</code> namespace property. Don't forget to configure the
                <code>decorators</code> outlet to point to a directory in your existing project. The generated
                decorators will only be generated the first time, they will not be overwritten.
            </action>
            <action dev="carloslcuenca" type="add" issue="HIB-20">
                The <a href="andromda-hibernate-cartridge/index.html">Hibernate Cartridge</a> now supports
                lists, sets, maps and bags for mapping collections.
            </action>
            <action dev="draftdog" type="fix" issue="SAMPLES-6">
                An issue with the bpm4struts multibox feature has been resolved: the checkbox widget was not
                being rendered and a link was present instead. This problem manifested itself in the
                <a href="andromda-bpm4struts-cartridge/samples.html#online-store">online-store</a> sample.
            </action>
            <action dev="draftdog" type="fix" issue="BPM-127">
                Bpm4Struts now correctly exports to all known
                <a href="http://www.displaytag.org/">displaytag</a> supported formats, there was a bug where
                simple properties were being exported with surrounding HTML tags.
                <p class="highlight">
                    Caution: the use of
                    <code>@andromda.struts.view.table.export</code> has changed! It is no longer recommended to specify
                    a space separated combination of formats, instead it is now best to specify multiple values
                    (MagicDraw allows you to add values from a combobox).
                    The previous way is still supported but this might change in the future.
                </p>
            </action>
            <action dev="draftdog" type="add" issue="BPM-110">
                Added a new <a href="andromda-bpm4struts-cartridge/modeling.html">tagged value</a>
                for bpm4struts: <code>@andromda.struts.view.field.validators</code>. It allows you to specify your
                own validators for parameters, just don't forget to use the
                <a href="andromda-cartridges/index.html#mergeMappingsUri">merge point</a> in
                <code>validator-rules.xml</code>.
            </action>
            <action dev="draftdog" type="add" issue="BPM-138">
                It is now possible to specify multiple formats for parameters using the
                <code>@andromda.struts.view.field.format</code> tagged value, thanks to a contribution from
                <a href="mailto:kthalari@ketera.com">Kishore</a>.
            </action>
            <action dev="draftdog" type="add">
                Bpm4Struts now supports a new
                <a href="andromda-bpm4struts-cartridge/namespace.html">namespace property</a>:
                <code>actionPathPrefix</code>, it allows more
                control on the way action paths are being rendered in <code>struts-config.xml</code>.
            </action>
            <action dev="carloslcuenca" type="add">
                The <a href="andromda-spring-cartridge/index.html">Spring Cartridge</a> and
                <a href="andromda-hibernate-cartridge/index.html">Hibernate Cartridge</a> now supports
                EhCache as the second level cache manager.  Properties, associations, and queries can be
                configured to be cacheable.
            </action>
            <action dev="carloslcuenca" type="add" issue="HIB-61">
                The cartridge now supports dynamic-insert and dynamic-update hibernate properties for entities.
            </action>
            <action dev="draftdog" type="add" issue="MISC-24">
                All existing cartridges emitting Java source code now include a license-header merge point,
                just use the <a href="andromda-cartridges/index.html#mergeMappingsUri">merge-mapping</a>
                feature to have it replaced with your own license statement, the merge-point is called
                <code>// license-header java merge-point</code>.
            </action>
            <action dev="cwbrandon" type="fix" issue="HIB-48">
                Superfluous *.hbm.xml files are no longer generated when a <em>subclass</em> strategy
                is used with hibernate inheritance.
            </action>
            <action dev="cwbrandon" type="fix" issue="HIB-58">
                When using a <em>class</em> strategy with hibernate inheritance, not-null values are now
                correctly set to "false" for all subclass properties.
            </action>
            <action dev="cwbrandon" type="add" issue="SPRING-34">
                The <a href="andromda-spring-cartridge/index.html">Spring Cartridge</a> now provides Spring remoting
                support (thanks to Peter Friese).
            </action>
            <action dev="cwbrandon" type="add">
                A new attribute has been introduced on the template element within the cartridge descriptor
                (andromda-cartridge.xml).  It's called <a href="andromda-cartridges/index.html#outputOnEmptyElements">outputOnEmptyElements</a>
                and allows a cartridge writer to determine whether or not a file should be output when there are no elements collected when using the
                <a href="andromda-cartridges/index.html#outputToSingleFile">outputToSingleFile</a> flag.
            </action>
            <action dev="cwbrandon" type="fix" issue="SPRING-37">
                The <a href="andromda-spring-cartridge/index.html">Spring Cartridge</a> now generates a valid
                DAO inheritance hiearchy when inheritance between entities is modeled.
            </action>
            <action dev="cwbrandon" type="update">
                The <a href="andromda-spring-cartridge/index.html">Spring Cartridge</a> must now be used in conjunction with the
                <a href="andromda-hibernate-cartridge/index.html">Hibernate Cartridge</a> when using Hibernate persistence.
            </action>
            <action dev="cwbrandon" type="update" issue="BPM-136">
                The pattern matching exception handler generated by bpm4struts now correctly handles exceptions that
                are instances of <code>java.lang.Throwable</code> and any of it's decendants (previously it only
                handled java.lang.Exception instances).
            </action>
            <action dev="draftdog" type="update" issue="BPM-34">
                The bpm4struts cartridge no longer requires you to model the <![CDATA[<<FrontEndEvent>>]]>,
                <![CDATA[<<FrontEndController>>]]> and <![CDATA[<<Role>>]]> stereotypes.
                These stereotypes can be implied by the model and therefore are considered redundant. This
                has only been made possible by the recent metafacade mapping changes which allow the mapping
                based on the target metafacade's properties.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-6">
                Metafacades can now be mapped to meta model objects based on their properties.  This allows us to
                define metafacades for things that can be inferred by certain conditions of the model instead of
                needing to use stereotypes for everything.
            </action>
            <action dev="cwbrandon" type="fix" issue="HIB-53">
                Navigable entity association ends are now required to have a public visibility (an OCL
                constraint has been added to validate this).
            </action>
            <action dev="cwbrandon" type="fix" issue="SPRING-26">
                Entity attributes are now required to have a public visibility (an OCL
                constraint has been added to validate this).
            </action>
            <action dev="cwbrandon" type="update" issue="SPRING-33">
                The <a href="andromda-spring-cartridge/index.html">Spring Cartridge</a> and
                <a href="andromda-hibernate-cartridge/index.html">Hibernate Cartridge</a> now generate child
                cascade's correctly based on whether or not the default-cascade for the entity is set to
                <code>all</code> or <code>save-update</code>.
            </action>
            <action dev="cwbrandon" type="update">
                The <a href="andromda-meta-cartridge/index.html">Meta Cartridge</a> now generates real
                inheritance (not delegated) when the super metafacade class is in the same package.
                Delegated inheritance is now only generated when the super metafacade's package is different.
            </action>
            <action dev="draftdog" type="update">
                All usages of <code>@andromda.struts.view.field.type=radio</code> must now omit any trailing
                parameters, so specifying "radio 4" or "radio a,b,c" is no longer allowed. The trailing parameters
                go into a new tagged value called <code>@andromda.struts.view.field.radio</code> and can only
                be used if the field type specified is of type <code>radio</code>.
            </action>
            <action dev="cwbrandon" type="add" issue="SPRING-29">
                Eager loading of relationships is now correctly supported when using composition.
            </action>
            <action dev="draftdog" type="add">
                Bpm4struts is now able to generate <code>id</code> attributes in the web.xml descriptor, just use
                the <a href="andromda-bpm4struts-cartridge/namespace.html">generateWebXmlIds</a> namespace property.
            </action>
            <action dev="cwbrandon" type="add" issue="SPRING-23">
                Spring DAO names are now completely configurable. Patterns can be configured in the
                <a href="andromda-spring-cartridge/namespace.html">namespace properties</a> section.
            </action>
            <action dev="cwbrandon" type="add" issue="UMLMETA-13">
                Entity query operations (i.e. finders) can now be determined though modeling the query
                flag as true on the operation (for now the finder method stereotype still works, however it is now
                deprecated in favor of this query flag and will be removed in the future).
            </action>
            <action dev="carloslcuenca" type="add" issue="HIB-33">
                Now it is possible to enable Hibernate proxies for Entities in the hibernate Cartridge.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-16">
                An external configuration file can now configure logging for AndroMDA.
                See <a href="anttask.html#loggingConfigurationUri">loggingConfigurationUri</a> for information
                on how to use it with Ant.  See
                <a href="maven-andromda-plugin/properties.html#maven.andromda.loggingConfigurationUri">maven.andromda.loggingConfigurationUri</a>
                for information on how to use with Maven.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-39">
                Metafacades can now be mapped on the basis that more than one stereotype
                is required.
            </action>
            <action dev="cwbrandon" type="update">
                Completely removed XDoclet from the Hibernate cartridge.
            </action>
            <action dev="draftdog" type="add">
                Added a <a href="andromda-spring-cartridge/howto.html">howto</a> for the Spring cartridge.
            </action>
            <action dev="cwbrandon" type="add" issue="SPRING-20">
                Hibernate entities in the Spring cartridge now have a factory operation on each entity that allows
                creation of new entity instances (this elminiates the need to call the implementation specific constructor
                for each entity when constructing a new instance).
            </action>
            <action dev="cwbrandon" type="add">
                Provide the ability to have entity association lazy loading within the service tier
                (all entity associations should be able to be lazily loaded within ALL service operations,
                as well as ALL DAO operations).
            </action>
            <action dev="draftdog" type="fix" issue="HIB-15">
                Implemented enumeration support for the
                <a href="andromda-hibernate-cartridge/modeling.html#Enumeration">Hibernate</a> and
                <a href="andromda-spring-cartridge/modeling.html#Enumeration">Spring</a> cartridges.
            </action>
            <action dev="cwbrandon" type="add" issue="OCL-1">
                <strong>ALL OCL string operations</strong> are now supported by the
                <a href="andromda-ocl-query-library/index.html">Query Translation Library</a>
            </action>
            <action dev="cwbrandon" type="fix" issue="CORE-38">
                Template object properties can now be specified more than once in the andromda-cartridge.xml.
            </action>
            <action dev="carloslcuenca" type="add" issue="HIB-34">
                The <a href="andromda-hibernate-cartridge/index.html">Hibernate</a> and
                <a href="andromda-hibernate-spring/index.html">Spring</a> cartridges are now able to define query cache settings.
            </action>
            <action dev="cwbrandon" type="fix">
                The <a href="andromda-ocl-query-library/index.html">Query Translation Library</a> was using the OCL
                <em><![CDATA[exists(<expression>)]]></em> expression incorrectly.  Changed to use the
                correct <em><![CDATA[includes(<expression>)]]></em> expression instead.
            </action>
            <action dev="cwbrandon" type="add">
                The <a href="andromda-ocl-query-library/index.html">Query Translation Library</a> is now able to correctly handle
                order by expressions (this is accompished using the standard <em><![CDATA[-> sortedBy(<expression>)]]></em>
                construct in OCL.
            </action>
            <action dev="cwbrandon" type="fix" issue="OCL-7">
                The <a href="andromda-ocl-query-library/index.html">Query Translation Library</a> is now able to correctly handle
                grouped expressions.
            </action>
            <action dev="cwbrandon" type="fix" issue="SPRING-18">
                The Spring cartridge is now able to correctly auto-detect when the inverse flag should
                be true/false on associations within the hibernate cfg.xml files.
            </action>
            <action dev="draftdog" type="fix">
                Fixed a *critical* bug in bpm4struts: when an action state would defer to more than one controller
                operation the action state's forward would be called after each operation call. This is very dangerous
                in combination with the session because code is not executed in the expected order anymore.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-32">
                All profile information has been externalized into mapping files.  This means that its now <strong>VERY</strong>
                easy to change the default stereotype names, tagged values, or datatypes.  You can use the new
                <em>profileMappingsUri</em> to point to a mappings file that overrides any default profile values.
            </action>
            <action dev="draftdog" type="add" issue="BPM-96">
                Bpm4Struts now supports final states pointing to locations or resources outside
                of the scope of the UML model. This is achieved by giving the final state a name
                starting with either <code>/</code> or <code>http://</code>, alternatively you can make use of
                the "hyperlink" feature as available in some UML tools, just make sure to hyperlink to a
                web page (sometimes UML tools distinguish between different types of hyperlinks).
            </action>
            <action dev="draftdog" type="update" issue="SITE-14">
                The <a href="jmi-uml1.4/index.html" target="_blank">JMI 1.4 API</a> has been published on the
                AndroMDA website, you can find it in the navigation menu under the "developers" section.
            </action>
            <action dev="cwbrandon" type="update">
                The tagged value @andromda.ejb.transactionType has been renamed to @andromda.transaction.type
                (this was needed because of that fact we already had an @andromda.transaction.type and
                we don't need duplicates).
            </action>
            <action dev="draftdog" type="update">
                The andromda-profile-XXX.xml.zip has been updated to restrict the values you can assign
                to a tagged-value, enumerations have been used instead of plain String types.
                Unfortunately most UML tools will not support this feature, Poseidon included; the reason
                the fact that tagged-value references are not implemented. MagicDraw, however, has an
                impeccable support and you'll find it even easier to model than before.
            </action>
            <action dev="draftdog" type="add">
                Added a compatibility list of UML tools that have been tested, courtesy of
                <a href="http://www.daniel-s-haischt.biz/">Daniel S. Haischt</a>. This list has been added
                to the website <a href="case-tools.html">here</a>.
            </action>
            <action dev="draftdog" type="add">
                Added the slides used for the presentation at the university of Antwerp, you can download
                them at the <a href="resources.html">resources</a> page.
            </action>
            <action dev="cwbrandon" type="fix">
                Fix minor Spring cartridge bug (released with 3.0M3), operations on the service
                base class now have the correct protected access.
            </action>
            <action dev="draftdog" type="update" issue="BPM-112">
                Bpm4Struts now properly supports <code>datatype.File</code> in controller operations too, this was
                still missing since the form interfaces where not properly exposing the file member. This fix is
                only interesting to you in case you're making use of the file-upload support.
            </action>
            <action dev="draftdog" type="update">
                The Spring cartridge has been updated with an improvement that will make it easier to transform
                entities into other objects such as value objects. Simply draw a dependency from an entity to a value
                object and the entity's DAO will support transformation into that value object on it's methods (i.e.
                when loading an entity instance, or finding a list of entity instances you can optionally pass in
                a transformation flag argument - by default no transformation is done). You will need to implement
                the transformation yourself in the entity's DAO, but calls to this method are automatically invoked
                depending on the transformation flag you are using.
            </action>
        </release>
        <release version="3.0M3" date="2004-12-26" description="A stable development release for version 3, milestone 3">
            <action dev="carloslcuenca" type="add" issue="HIB-27">
                The ability to define the OuterJoin association fetching strategy
                within an association end within the Hibernate Cartridge
            </action>
            <action dev="amartinwest" type="add" >
                Refactored exception handling. Exceptions are now recorded in
                exception dump files. The file name convention is
                <![CDATA[<cartridge name>]]>timestamp.exc. Timestamp takes the form
                YYMMDDHHMMSS[_SUFFIX]. Suffix is an incrementing number
                which is used when two or more exceptions occur in the same second.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-33">
                The ability to filter (or select) the cartridges you want
                to perform model processing has been introduced.  Please see
                <a href="maven-andromda-plugin/properties.html#maven.andromda.cartridgeFilter">maven.andromda.cartridgeFilter</a>
                for more information on how to use this new feature with the maven plugin, or
                <a href="anttask.html#cartridgeFilter">cartridgeFilter</a> for more information
                on how to use it directly with the AndroMDA Ant task.
            </action>
            <action dev="cwbrandon" type="add" issue="CORE-23">
                Merge support has been enabled: A new namespace property named
                <code>mergeMappingsUri</code> has been introduced which allows you
                to defined mapping files for merging.  These files behave just like the
                other mapping files (i.e. languageMappings, sqlMappings, etc) and can be
                used within each namespace or within the default namespace. Please see
                <a href="andromda-cartridges/index.html#mergeMappingsUri">mergeMappingsUri</a>
                for more information.
            </action>
            <action dev="cwbrandon" type="add" issue="OCL-5">
                Translation of OCL to Hibernate QL has been improved to use named (instead
                of unnamed) parameters, please see the issue for more detailed information.
            </action>
            <action dev="cwbrandon" type="add">
                The Spring cartridge DAO business operations are now able to lazily load relationships
                between entites, they also have required parameter checks generated (just like all Spring
                service operations).
            </action>
            <action dev="draftdog" type="add" issue="SPRING-9">
                The Spring cartridge has a new feature: <![CDATA[<<Entity>>]]> operations can now be toggled
                to <code>classifier</code> or <code>instance</code> scope; the former will put the
                operation on the entity's DAO, while the latter will simply put the operation into
                the entity implementation class. Most UML tools allow this feature on an operation by
                selecting the desired state in the operation's properties dialog.
            </action>
            <action dev="draftdog" type="add" issue="BPM-114">
                The bpm4struts-cartridge now generates more styles in the CSS files that are created for each
                <![CDATA[<<FrontEndView>>]]>, by default these styles are empty but it is very easy to
                customize them to fine-tune the layout for your pages.
                <ol>
                    <li>form labels and fields</li>
                    <li>form buttons (submit and reset)</li>
                    <li>displaytag:table headers</li>
                    <li>displaytag:table columns</li>
                </ol>
            </action>
            <action dev="draftdog" type="fix">
                In bpm4struts it is now possible to send parameters from one action state to another, and this
                in the scope of an action; it is therefore not needed anymore to have parameters entering or exiting
                a page, any action state will do. These parameters will also be recorded in the corresponding action
                form.
            </action>
            <action dev="draftdog" type="fix" issue="BPM-102">
                Bpm4Struts internal plumbing has significantly improved, this will be most
                noticeable in the performance. This fix is the first part of a series of
                improvements in order to support large and complex models which would yield
                JVM overflow errors.
            </action>
            <action dev="draftdog" type="fix">
                In bpm4struts you must now draw dependencies from the
                <![CDATA[<<FrontEndController>>]]> to the associated
                <![CDATA[<<FrontEndSessionObject>>]]> classes instead of simply using
                associations.
            </action>
            <action dev="amwest" type="add">
                The <a href="andromda-hibernate-cartridge/modeling.html">AndroMDA
                Hibernate</a> cartridge supports hibernate's Three Inheritance
                Strategies and allows root entities to be generated as
                interfaces.
                </action>
            <action dev="cwbrandon" type="add">
                The <a href="andromda-spring-cartridge/modeling.html">AndroMDA Spring</a>
                cartridge can now model (and have generated) full role
                based security for the optional Session EJB wrappers.
            </action>
            <action dev="cwbrandon" type="add">
                The ModelElementFacades association to DependencyFacade has been renamed from
                <code>dependencies</code> to <code>targetDependencies</code>.
                This was necessary due to the fact the dependencies returned were
                target dependencies only and did not include source dependencies.
                A new association was added to DependencyFacade called
                <code>sourceDependencies</code> which can retrieve all source dependencies
                for a model element.
            </action>
            <action dev="cwbrandon" type="add">
                The <a href="andromda-webservice-cartridge/modeling.html">AndroMDA Web Service</a>
                cartridge can now have web services secured through modeling.
            </action>
            <action dev="draftdog" type="add">
                The bpm4struts generated <code>web.xml</code> file now contains some merge points, similar to
                <a href="http://xdoclet.sourceforge.net/xdoclet/merge.html">XDoclet</a>. If you want
                you can completely ignore them because they are commented out. But for some people it might be useful
                to insert fragments into the web.xml without
                <a href="andromda-cartridges/index.html#mergeLocation">overriding the template</a>.
            </action>
            <action dev="draftdog" type="add">
                Added support for lazily loaded relationships collections in
                <a href="andromda-hibernate-cartridge/modeling.html#@andromda.hibernate.lazy">Hibernate</a> and
                <a href="andromda-spring-cartridge/modeling.html#@andromda.hibernate.lazy">Spring</a>, it is sufficient
                to use the aggregation kind of an association end (composite is not lazy, the other kinds are lazy)
                but you can always override the default values using the newly define
                <code>@andromda.hibernate.lazy</code> tagged value.
            </action>
            <action dev="draftdog" type="add">
                Bpm4Struts now supports file uploads, just use the pre-defined
                <code>datatype.File</code> from the profile (or create it yourself)
                on an event parameter.
            </action>
            <action dev="cwbrandon" type="add">
                Added new tagged value to BPM4Struts called <code>@andromda.struts.view.field.reset</code>
                which allows one to specify specific fields that should be reset on a transition.  This
                is useful when you want certain fields to be reset after action execution but you don't
                want the entire form to be reset.
            </action>
            <action dev="cwbrandon" type="add">
                BPM4Struts can now extract resource message keys from exceptions thrown from the business
                tier.  For example, if an operation in your service throws an exception with
                the message " {some.message.key} an exception occurred!", BPM4Struts will
                extract the <em>some.message.key</em> from the exception, and add it to the
                request as a struts action error.  You then place this new key in your custom
                message resources with a corresponding message, and next time the error occurs
                this new message will be displayed (instead of the exception).
                The exception handling pattern and a few other related properties are configurable,
                you can learn more about them on <a href="andromda-bpm4struts-cartridge/namespace.html">BPM4Struts Namespace Properties</a>.
                <strong>NOTE:</strong> if the pattern can not be found in an exception processing
                continues as normal and the exception will be displayed.
            </action>
            <action dev="draftdog" type="add">
                Table and action now have their own dedicated CSS style, per
                generated JSP another CSS file will be generate by bpm4struts;
                in this file you can locally override any defined styles.
            </action>
            <action dev="draftdog" type="fix">
                The 'validwhen' validation feature has finally been implemented. It is now possible with bpm4struts
                to additionally validate a specific field check for certain runtime conditions. This feature is mostly
                used to confirm passwords; this example has been added to the online-store.
            </action>
            <action dev="draftdog" type="add">
                Specific generated pieces of JSP code has its own style, a stylesheet is generated for each page.
            </action>
            <action dev="draftdog" type="update">
                The bpm4struts cartridge now overwrites all jsps pages and stylesheets upon regeneration.
                This is very important for users of earlier versions.
            </action>
            <action dev="draftdog" type="update">
                Updated the <a href="starting.html">getting started</a> guide.
            </action>
            <action dev="draftdog" type="update" issue="BPM-83">
                This update is the last one that will impact the way users model their Struts application.
                A change was needed due to a missing feature: "multibox". In order to properly fix it
                some other changes were required too.
                <ol>
                    <li>You can now put any widget in a table, you can do that by simply linking an event
                        parameter using the <code>@andromda.struts.view.field.tablelink</code>
                        tagged value to an incoming table collection. You must of course link to an existing
                        table column.
                    </li>
                    <li>Previously performing this step would simply create a hyperlink, now you would need to
                        set the event parameter's <code>@andromda.struts.view.field.type</code>
                        tagged value to 'link' in order to achieve that.
                    </li>
                    <li>Due to HTML limitations you can only make links to the same table from a single
                        action. The reason is that there can be only one form around the table. If you still
                        want to have multiple actions working on the same table you will need to patch in
                        manually using JavaScript (setting the target action URL).
                    </li>
                    <li>If you want to use the
                        <a href="http://struts.apache.org/userGuide/struts-html.html#multibox">multibox</a>
                        feature you need first to model a collection or
                        array page-variable that contains the values against which to match. Next you create
                        a table link, thereby selecting the table column. Finally you set the field type of the
                        event parameter to something like this (assuming the multibox collection is
                        called 'myValues')
                        <code>@andromda.struts.view.field.type = multibox:myValues</code>
                    </li>
                    <li>The online store has been extended with an example of this, just open the model
                        and check out the 'buy this item' action. The 'test' and 'available' parameters
                        are rendered as widgets in the table, the 'available' column is a multibox.
                        Please also note how the multibox collection (called 'availableItems') is preloaded
                        by the 'loadItems' controller operations.
                    </li>
                </ol>
                <p class="highlight">
                    I strongly recommend not relying too much on the widgets-in-table feature
                    yet, it is experimental and is likely to change in the future. The reason it has
                    been put in is to see whether or not it is usable. A restriction currently
                    is that you will not have any way to submit the changes you make in the table,
                    for that to work we would need to apply some updates to the rendered rows so a submit button
                    could properly trigger the sending of the form.
                </p>
            </action>
            <action dev="cwbrandon" type="add">
                The AndroMDApp Maven plugin has been improved to include Spring
                and the WebService cartridges as options when generating an AndroMDA
                powered Maven application.
            </action>
            <action dev="draftdog" type="fix">
                AndroMDA now automatically assigns a suitable name to association ends with a
                'many' cardinality and an empty name. Before only the name of the target classifier
                was taken into account, now it is analyzed and a proper (English) name is constructed
                (word:words, key:keys, property:properties).
                If your code relies on such unlabeled association ends it might be possible that an
                AndroMDA run on your UMl model will result in code that is uncompilable in combination
                with your existing implementation classes, a simple rename will be sufficient.
            </action>
            <action dev="draftdog" type="update" issue="UMLMETA-3">
                The metafacades now have their properties no longer modeled as operations but as attributes,
                wherever possible. This has no effect on code already generated. In addition boolean accessor
                methods now have their names properly rendered according to the Java Bean specification
                (getXXX becomes isXXX).
            </action>
            <action dev="draftdog" type="update">
                The Xdoclet dependency, WebDoclet to be exact, has been removed from the bpm4struts-cartridge;
                now the
                <code>struts-config.xml</code> and
                <code>validation.xml</code> files are generated
                directly by AndroMDA. The Ant-tool and the maven plugins, used to generate a default AndroMDA
                project, have also been updated to reflect this change.
            </action>
            <action dev="cwbrandon" type="add">
                The AndroMDA Spring cartridge (a cartridge based on the
                <a href="http://www.springframework.org">Spring Framework</a>)
                has moved from the contrib module to the main andromda codebase.  To learn how to use this new cartridge,
                please see the the documentation
                <a href="andromda-spring-cartridge/index.html">here</a>
            </action>
            <action dev="draftdog" type="update" issue="BPM-72">
                The latest major update has been improved: it is now no longer needed to
                add tagged values onto controller operation arguments. The cartridge will
                auto-detect the appropriate value. In addition more validation constraints
                have been added to inform the user of any cartridge modeling errors.
            </action>
            <action dev="draftdog" type="update" issue="BPM-71">
                The latest major bpm4struts update did not prove to be a very elegant solution,
                this led us to revise
                the implementation and come up with an alternative one. Here's a list of what has changed:
                <ol>
                    <li>parameters with the same name and in the same use-case are required to also
                        be of the same type</li>
                    <li>form fields do no longer have their name prefixed with the name of the action</li>
                    <li>forms now implement an interface for each controller operation they defer to</li>
                    <li>it is now needed to put arguments in the controller operations, these arguments
                        will be available in the form interface that is accessible programmatically</li>
                    <li>these arguments will need to have the
                        <code>
                        @andromda.struts.view.field.type</code> tagged value set to 'select' in case
                        you want to prepopulate a list of entries (see samples)
                    </li>
                    <li>currently it is also needed to specify the table columns (just as you
                        would on a collection-type page variable) in case the argument
                        maps onto an event parameter which is displayed in tabular format, but this
                        will be solved soon</li>
                </ol>
                <p class="highlight">
                    All of this means this will break the compilation of your current
                    codebase using one of the previous AndroMDA versions.
                </p>
            </action>
            <action dev="draftdog" type="update" issue="BPM-32">
                Overloaded a controller method for accessing the session objects, the new
                method allows to choose whether or not to create the session in case it does
                not exist yet (default is
                <code>true</code>). Also implemented some
                improvements in handling the session objects and the session itself.
            </action>
            <action dev="cwbrandon" type="add">
                The andromda task and maven plugin, now support an attribute called
                <code>failOnModelValidationErrors</code> which allows us to
                turn on/off whether or not model processing should fail/stop
                if
                <strong>ANY</strong> model validation errors occur.
            </action>
            <action dev="cwbrandon" type="update">
                The hibernate cartridge now generates its own hibernate.cfg.xml which
                means the jboss-service.xml generated by xdoclet is no longer needed.
                With this change, multiple new namespace properties were added
                for configuring this configuration file.
            </action>
            <action dev="draftdog" type="add" issue="BPM-69">
                Just like you can use success messages on action transitions we now have
                the possibility to use warning messages, simply add the tagged value
                <code>@andromda.struts.action.warning.message</code> to the action
                transition and set its value to the message you want to have displayed (will be i18n'ed).
                Warning messages will be rendered in yellowish.
                In addition all messages are now supported on
                <strong>any</strong> transition, and you may have
                more than one message on such a transition (unlimited).
            </action>
            <action dev="draftdog" type="update" issue="BPM-32">
                The controllers associated to session objects have different methods to
                access those objects. The 'clearXXX' method has been renamed to 'removeXXX'.
            </action>
            <action dev="cwbrandon" type="add">
                A new namespace property 'versionProperty' has been added, it is used
                to determine which property/attribute name to use for versioning entities.
            </action>
            <action dev="draftdog" type="add">
                There is a new link in the download section (menu), it is called 'resources' and it
                will contain resources on AndroMDA such as tutorials and slides.
            </action>
            <action dev="draftdog" type="add">
                A new namespace property is available to set a default date format to use for
                date fields in your bpm4struts, not specifying this value will use dd/MM/yyyy as the default
                date format.
            </action>
            <action dev="draftdog" type="fix">
                This change fixes some issues with the most recent updates for bpm4struts:
                <ol>
                    <li>We no longer have the controller operation interfaces the forms were implementing</li>
                    <li>Instead we have a controller operation for each different action that defers to them,
                        this means you sometimes have the same operation more than once with only a different
                        argument type for the form. This seems to be the most optimal and realistic
                        implementation, forms cannot be shared using interfaces aggregating the fields
                        because field names carry the action name as a prefix and this cannot be changed
                        because in that case validation rules would be impossible to determine for fields
                        that have the same name and type over different page actions.
                    </li>
                    <li>It should now be possible to easily send parameters between use-cases</li>
                </ol>
            </action>
            <action dev="draftdog" type="update">
                Controllers and their implementation have changed names. The abstract parent
                classes now no longer have the 'Interface' suffix, the descendants have
                the 'Impl' suffix. This has been done for consistency with other cartridges
                and because it is cleaner not to have any suffix on the interface or
                abstract parents.
            </action>
            <action dev="draftdog" type="update" issue="BPM-44">
                It is now possible to specify labels and values differently
                for selectable parameters such as in comboboxes and lists.
                The form containing such a parameter will have two new properties:
                'valueList' and 'labelList'. If you do not specify the 'labelList'
                property it will assume the values of the 'valueList'.
                The backing list has been made readonly
                because it will construct a special array to be handled by the Struts tags.
            </action>
            <action dev="draftdog" type="update">
                Controller implementation do not get form types passed in the argument, instead
                there is an interface aggregating common form properties, this way forms
                of several different types implementing this interface can be passed in.
                This elegantly allows a single controller operation to be called from different
                actions (which each have their own form).
            </action>
            <action dev="draftdog" type="update">
                A major change has been incorporated into the cartridge, you will have to
                be very careful when migrating to a version after this date.
                ActionForms are back into the request scope so their properties will not be
                persisted into the session as was the case before. Bpm4Struts now is
                intelligent enough to determine which properties should be available in which
                ActionForm (even in ambiguous cases such as cyclic processes or when
                multiple actions target multiple pages without a 1-to-1 mapping.
                The reason for this drastic change was a possible bug in the server-side
                validation framework. It would happen that forms were not properly recognized on
                the server while the client could parse them fine.
                In order to properly migrate you should at least need to fix the controller
                implementations (you will have compilation errors otherwise), unfortunately
                you will need to update all JSP pages. The changes are minimal so you might
                consider looking at the differences manually (we are back at using the Struts HTML
                tag library instead of the plain old HTML tags directly).
            </action>
            <action dev="cwbrandon" type="update">
                The
                <code>validating</code> flag has been renamed to the more
                appropriate
                <code>xmlValidation</code>.  At the same time a new
                <code>modelValidation</code> flag has been added that allows us
                to turn on/off model validation during processing.   By default
                model validation occurs, however its sometimes nice to turn it
                off for performance reasons (i.e. you have a really big model).
            </action>
            <action dev="draftdog" type="add" issue="BPM-32">
                We now have session objects, these instances can be handled
                through protected controller methods. Controller interfaces
                are abstract classes now, so make sure you use 'extends'
                instead of 'implements' when using the cartridge after
                this date.
            </action>
            <action dev="draftdog" type="update" issue="BPM-36">
                The namespace property 'breadCrumbs' (boolean) has been replaced by the property
                'maxBreadCrumbs' (integer). To disable breadcrumbs specify zero.
                Additionally the tabledecorator has been removed, it was only used to render
                specific HTML code but a more elegant solution has been put in place.
            </action>
            <action dev="cwbrandon" type="update">
                A new namespace property has been added that can be used for
                <em>any</em> cartridge, its called
                <code>mergeLocation</code>, for
                more information see
                <a href="andromda-cartridges/index.html#mergeLocation">Overriding cartridge resources</a>.
            </action>
            <action dev="draftdog" type="add" issue="BPM-48">
                For those who want it online help will be generated
                for your application, by default it is enabled. You can
                override this by setting the 'onlineHelp' property to
                'false' in your bpm4struts namespace.
                It currently supports documentation on use-cases, action
                transitions, event parameters and pages.
            </action>
            <action dev="draftdog" type="update">
                Tooltips are now handled in JavaScript. We had to remove
                the doctypes for that to work properly in Firefox and Mozilla.
                It will be improved in the future.
                The reason we have these JS tooltips is that now it can also
                support images and text of arbitrary length.
            </action>
            <action dev="draftdog" type="update">
                Pattern masks for input field validation must not include
                the leading '^' and trailing '$' anymore. Some CASE tools
                such as MagicDraw don't handle them well.
            </action>
            <action dev="draftdog" type="update">
                The table link tagged value changed name:
                <code>@andromda.struts.action.tablelink</code> is now
                <code>@andromda.struts.view.field.tablelink</code>, the reason is that
                the location for this tagged value is the parameter and not the
                transition (as in the very beginning).
            </action>
            <action dev="draftdog" type="update">
                Form bean fields now have the name of their action prepended to their
                name (only for event parameters, page variables are unchanged).
                Using bpm4struts after this date will require you to update
                your controller implementations or a compilation error
                will occur.
                This change was needed in order to allow event parameters to
                have the same names in a single use-case. Without this feature
                the form would contain the same field name more than once, and that
                is not allowed in Java.
            </action>
            <action dev="draftdog" type="add">
                A new namespace property has been added: 'dummyData'. You can either
                give it a 'true' or 'false' value. The default is 'true'. If the
                value is 'true' a 'dummy data' will be rendered in places like the
                controller, if set to 'false' this dummy data will not be generated.
            </action>
            <action dev="cwbrandon" type="update">
                toJavaClassName and toJavaMethodName in StringUtilsHelper have been
                renamed to more language generic "upperCamelCaseName"
                and "lowerCamelCaseName".
            </action>
            <action dev="cwbrandon" type="add">
                A new namespace property has been added: 'tableNamePrefix'.
            </action>
            <action dev="draftdog" type="add" issue="BPM-36">
                A new namespace property has been added: 'breadCrumbs'. You can either
                give it a 'true' or 'false' value. The default is 'true'. If the
                value is 'true' a 'history' is rendered at the top of each page,
                also known as breadcrumbs: it allows you to navigate back and forth
                between the pages already visited. The scope of the breadcrumbs is
                restricted to the context use-case.
            </action>
            <action dev="draftdog" type="add" issue="BPM-39">
                Required fields now have an asterisk rendered next to their
                label. (Only if validation has been enabled)
            </action>
            <action dev="draftdog" type="add" issue="BPM-45">
                Added the following tagged value:
                <code>@andromda.struts.view.field.tablelink</code>.
                You can use it to create hyperlinks to actions in the columns of a table.
            </action>
            <action dev="draftdog" type="add" issue="BPM-23">
                Date input field now have a popup calendar to choose the date from
                and have it automaitcally rendered into the appropriate format.
            </action>
        </release>
        <release version="3.0M2" date="2004-08-09" description="A stable development release for version 3, milestone 2">
            <action dev="cwbrandon" type="add">
                Cartridges now allow generation based on metafacade
                type (and optionally its properties), in addition to stereotypes.
            </action>
            <action dev="draftdog" type="add" issue="BPM-14">
                It is now possible to create a hyperlink from a final state to a use-case
                and have the cartridge interpret it as the next use-case to navigate to.
            </action>
            <action dev="cwbrandon" type="update">
                The maven build has been changed
                <ul>
                    <li>
                        All artifacts now reside in the 'andromda' groupId of the maven
                        repository.  This means for those using Maven for their projects,
                        they'll need to specify 'andromda' as the groupId (for dependencies)
                        instead of the old 'andromda-cartridges' for cartridges and
                        'andromda-translation-libraries' for translation-libraries.
                    </li>
                    <li>
                       Bootstrap dependencies are now stored in CVS. They are renamed
                       to the current version and copied to the remote repository during the build (
                       they used to be stored remotely).
                    </li>
                </ul>
            </action>
            <action dev="cwbrandon" type="update">
                The <![CDATA[<andromda/>]]> Ant task was changed to
                allow multiple models to be specified using a URL.
                This included adding a new <![CDATA[<model/>]]> element
                and eliminating the modelURL attribute from the <![CDATA[<andromda/>]]>
                task.
            </action>
            <action dev="draftdog" type="add">
                Enabled support for tools that do not allow putting graphs inside use-cases. It is now
                sufficient to put the
                <code>@andromda.struts.usecase.activity</code>
                tagged value on the use-case and assign it the name of an activity graph.
            </action>
            <action dev="draftdog" type="add">
                Enabled support for tools that do not allow assigning model elements to classifiers.
                It is now possible to put a
                <code>@andromda.struts.controller.usecase</code> tagged value
                on the controller and assigning it the name of a use-case.
            </action>
            <action dev="cwbrandon" type="add">
                Tagged value prefix of "@andromda" was added back to
                all tagged values.  It was causing naming conflicts
                with XDoclet tags when it was just "@".
            </action>
            <action dev="cwbrandon" type="add">
                Added new resource element to the andromda-cartridge.xml
                that allows non template resources (like images, jars, etc)
                to be included and output from a cartridge.
            </action>
            <action dev="draftdog" type="update">
                All JSPs have been updated to render XHTML 1.0 compatible content,
                the content-type declaration has been updated and any HTML
                comment has been changed to comply to the XHTML standard.
                You will need an XHTML compatible browser to properly
                view the pages.
                By default bpm4struts generates HTML 4.0 compliant JSPs but
                by setting the 'xhtml' namespace property to 'true' it will
                render XHTML.
            </action>
            <action dev="cwbrandon" type="update">
                The 'sheet' attribute in the template element has been
                renamed to 'path'.
            </action>
            <action dev="draftdog" type="add">
                In bpm4struts there is a new namespace property: xhtml. The property
                'securityEnabled' has been renamed to 'security'.
            </action>
            <action dev="cwbrandon" type="update">
                The 'overWrite' attribute in the template element has been
                renamed to 'overwrite'.
            </action>
            <action dev="cwbrandon" type="add">
                A new feature has been added that will allow users to import legacy database
                schemas and have an XMI file generated from them. This will make it easier to port
                development of legacy systems to AndroMDA.
            </action>
            <action dev="cwbrandon" type="add">
                A new cartridge is available for publishing services
                as web-services, this cartridge is to be used in
                combination with either the EJB, Hibernate,
                or Java cartridge.
            </action>
            <action dev="draftdog" type="add">
                Tabular data can now automatically be displayed using paging,
                sorting and exporting features, the displaytag tag-library is
                used.
            </action>
            <action dev="cwbrandon" type="add">
                OCL support provides the following features:
                <ul>
                    <li>Metamodels will now have their constraints
                        validated during code generation.</li>
                    <li>Finder queries for persisted entities
                        can now be expressed using OCL.</li>
                </ul>
            </action>
        </release>
    </body>
</document>
