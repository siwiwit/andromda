<project default="install"
         xmlns:ant="jelly:ant"
         xmlns:j="jelly:core"
         xmlns:artifact="artifact">

    <!-- ===================================================================
         Install the model into the repository
         =================================================================== -->
    <goal name="uml2:install">
        <attainGoal name="clean:clean"/>
        <attainGoal name="uml2:prepare"/>
        <j:if test="${srcAvailable}">
            <!-- construct the suffix shared by all profiles -->
            <j:set var="versionSuffix" value="-${pom.currentVersion}.uml2"/>
            <!-- backup the original artifact id -->
            <j:set var="originalArtifactId" value="${pom.artifactId}"/>
            <!-- update the versions in the XMI to the current version -->
            <j:set var="xmiToken" value=".uml2"/>
            <j:set var="xmiValue" value="-${pom.currentVersion}.uml2"/>
            <j:set var="directory" value="${maven.build.dir}"/>
            <attainGoal name="update-xmi"/>
            <!-- loop over the profiles and install them one by one -->
            <ant:fileScanner var="models">
                <ant:fileset dir="${maven.build.dir}">
                    <ant:include name="**/*.uml2"/>
                </ant:fileset>
            </ant:fileScanner>
            <j:forEach var="model" items="${models.iterator()}">
                <j:set var="replacement" value="-${pom.currentVersion}.uml2"/>
                <j:set var="dummy" value="${pom.setArtifactId(model.name.replaceAll(replacement,''))}"/>
                <artifact:install
                    artifact="${maven.build.dir}/${model.name}"
                    type="uml2"
                    project="${pom}"/>
            </j:forEach>
            <!-- recover the original artifact id -->
            <j:set var="dummy" value="${pom.setArtifactId(originalArtifactId)}"/>
        </j:if>
     </goal>

    <!-- ===================================================================
         Deploy the model into the remote repository
         =================================================================== -->
    <goal name="uml2:deploy">
        <attainGoal name="clean:clean"/>
        <attainGoal name="uml2:prepare"/>
        <j:if test="${srcAvailable}">
            <!-- construct the suffix shared by all profiles -->
            <j:set var="versionSuffix" value="-${pom.currentVersion}.uml2"/>
            <!-- backup the original artifact id -->
            <j:set var="originalArtifactId" value="${pom.artifactId}"/>
            <!-- update the versions in the XMI to the current version -->
            <j:set var="xmiToken" value=".uml2"/>
            <j:set var="xmiValue" value="-${pom.currentVersion}.uml2"/>
            <j:set var="directory" value="${maven.build.dir}"/>
            <attainGoal name="update-xmi"/>
            <!-- loop over the profiles and deploy them one by one -->
            <ant:fileScanner var="models">
                <ant:fileset dir="${maven.build.dir}">
                    <ant:include name="**/*.uml2"/>
                </ant:fileset>
            </ant:fileScanner>
            <j:forEach var="model" items="${models.iterator()}">
                <j:set var="replacement" value="-${pom.currentVersion}.uml2"/>
                <j:set var="dummy" value="${pom.setArtifactId(model.name.replaceAll(replacement,''))}"/>
                <artifact:deploy
                    artifact="${maven.build.dir}/${model.name}"
                    type="uml2"
                    project="${pom}"/>
            </j:forEach>
            <!-- recover the original artifact id -->
            <j:set var="dummy" value="${pom.setArtifactId(originalArtifactId)}"/>
        </j:if>
    </goal>

    <!-- ===================================================================
         Prepare the uml2 for install/deploy
         =================================================================== -->
    <goal name="uml2:prepare">
        
        <ant:available 
            file="${pom.build.sourceDirectory}"
            type="dir" 
            property="srcAvailable"/> 	
        
        <j:if test="${srcAvailable}">
            <ant:mkdir dir="${maven.build.dir}"/>
            <!-- collect all profiles -->
            <ant:fileScanner var="models">
                <ant:fileset dir="${pom.build.sourceDirectory}">
                    <ant:include name="**/*.uml2"/>
                </ant:fileset>
            </ant:fileScanner>
            <!-- loop over each model -->
            <j:forEach var="model" items="${models.iterator()}">
                <!-- record the model's name, without extension or version -->
                <j:set var="nameWithoutExtension" value="${model.name.replaceAll('.uml2','')}"/>
                <!-- rename the file by suffixing it with the proper version -->
                <ant:copy
                    file="${model}"
                    tofile="${maven.build.dir}/${pom.artifactId}-${pom.currentVersion}.uml2"/>
            </j:forEach>
        </j:if>
    </goal>

</project>
