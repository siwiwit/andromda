<andromda>
    <properties>
        <property name="modelValidation">true</property>
        <property name="cartridgeFilter">${filter}</property>
    </properties>
    <repositories>
        <repository name="netBeansMDR">
            <models>
                <model>
                    <uri>${maven.andromda.model.uri}</uri>
                    <moduleSearchLocations>
                        <location>${maven.repo.local}/andromda/xml.zips</location>
                    </moduleSearchLocations>
                </model>
            </models>            
        </repository>
    </repositories>
    <namespaces>
        <namespace name="default">
            <properties>
                <property name="languageMappingsUri">Java</property>
                <property name="wrapperMappingsUri">JavaWrapper</property>
                <property name="sqlMappingsUri">${sql.mappings}</property>
                <property name="jdbcMappingsUri">JDBC</property>
                <property name="maxSqlNameLength">30</property>
                <property name="foreignKeySuffix">_FK</property>
                <property name="ejbJndiNamePrefix">${application.id}</property>
            </properties>
        </namespace>
        <namespace name="spring">
            <properties>
                <property name="dataSource">${dataSource}</property>
                <property name="hibernateDialect">${hibernate.db.dialect}</property>
                <property name="hibernateShowSql">${hibernate.db.showSql}</property>
                <property name="hibernateUseQueryCache">false</property>
                <property name="hibernateQueryUseNamedParameters">true</property>
                <property name="hibernateCacheProvider">net.sf.hibernate.cache.EhCacheProvider</property>
                <property name="hibernateInheritanceStrategy">${hibernate.inheritance.strategy}</property>
                <property name="hibernateQueryCacheFactory">net.sf.hibernate.cache.StandardQueryCacheFactory</property>
                <property name="springTypesPackage">${application.package}</property>
                <property name="daos">${maven.andromda.core.generated.dir}</property>
                <property name="dao-impls">${maven.andromda.core.manual.dir}</property>
                <property name="spring-configuration">${maven.andromda.core.generated.dir}</property>
                <property name="services">${maven.andromda.core.generated.dir}</property>
                <property name="service-impls">${maven.andromda.core.manual.dir}</property>
                <!-- to remove any dependency on EJB, comment the following property -->
                <property name="session-ejbs">${maven.andromda.core.generated.dir}</property>
                <!-- uncomment to enable EJB security -->
                <!-- <securityRealm>${application.id}</securityRealm> -->
            </properties>
        </namespace>
        <namespace name="hibernate">
            <properties>
                <property name="version">2</property>
                <property name="hibernateTypeMappingsUri">Hibernate</property>
                <property name="hibernateInheritanceStrategy">${hibernate.inheritance.strategy}</property>
                <property name="defaultHibernateGeneratorClass">${hibernate.generatorClass}</property>
                <property name="hibernateDefaultCascade">none</property>
                <property name="entities">${maven.andromda.core.generated.dir}</property>
                <property name="entity-impls">${maven.andromda.core.manual.dir}</property>
                <property name="customTypesPackage">${application.package}</property>
                <property name="compositionDefinesEagerLoading">true</property>
            </properties>
        </namespace>
        <namespace name="webservice">
            <properties>
                <property name="schemaTypeMappingsUri">AxisWSDLMappings</property>
                <property name="languageMappingsUri">AxisJavaMappings</property>
                <property name="defaultProvider">RPC</property>
                <property name="applicationName">${application.id}</property>
                <property name="wsdlSoapAddress">${wsdl.soap.address}</property>
                <property name="wsdls">${maven.andromda.webservice.generated.dir}/wsdl</property>
                <property name="rpcClassNamePattern">{0}.{1}WSDelegator</property>
                <property name="axis-configuration">${maven.andromda.webservice.generated.dir}/axis</property>
            </properties>
        </namespace>
        <namespace name="java">
            <properties>
                <property name="languageMappingsUri">AxisJavaMappings</property>
                <property name="useArraysForMultiplicitiesOfTypeMany">true</property>
                <property name="enumerations">${maven.andromda.common.generated.dir}</property>
                <property name="exceptions">${maven.andromda.common.generated.dir}</property>
                <property name="value-objects">${maven.andromda.common.generated.dir}</property>
            </properties>
        </namespace>
        <namespace name="bpm4struts">
            <properties>
                <property name="forms">${maven.andromda.web.generated.dir}</property>
                <property name="pages">${maven.andromda.web.generated.dir}</property>
                <property name="actions">${maven.andromda.web.generated.dir}</property>
                <property name="controllers">${maven.andromda.web.generated.dir}</property>
                <property name="controller-impls">${maven.andromda.web.manual.java.dir}</property>
                <property name="decorators">${maven.andromda.web.manual.java.dir}</property>
                <property name="messages">${maven.andromda.web.generated.dir}/WEB-INF/classes</property>
                <property name="configuration">${maven.andromda.web.generated.dir}/WEB-INF</property>
                <property name="serviceAccessorPattern">${application.package}.ServiceLocator.instance().get{1}()</property>
                <property name="manageableServiceAccessorPattern">${application.package}.ManageableServiceLocator.instance().get{1}()</property>
            </properties>
        </namespace>
    </namespaces>
</andromda>