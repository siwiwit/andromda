module EnterpriseApp2Spring;

create OUT: X3GL from IN: Spring;

-- Transform EnterpriseApp services to Spring beans.
rule SpringBeanToClassAndInterface {
	from bean : Spring!SpringBean
	to interface : X3GL!Interface (
		name <- bean.name
		,methods <- bean.methods
	)
	, baseClass : X3GL!Class (
		name <- bean.name + 'Base'
		,methods <- bean.methods
		,properties <- bean.sourceReferences
	)
	, implementationClass : X3GL!Class (
		name <- bean.name + 'Impl'
		,methods <- bean.methods
	)
}

rule SpringBeanReferenceToProperty {
	from beanref : Spring!BeanReference
	to out : X3GL!Property (
		name <- beanref.target.name
	)
}

rule MethodToMethod {
	from method : Spring!Method
	to out : X3GL!Method (
		name <- method.name
		,returnType <- method.returnType
		,parameters <- method.parameters
	)
}

rule ParameterToParameter {
 	from param : Spring!Parameter
 	to out : X3GL!Parameter (
 		name <- param.name
 		,type <- param.type
 	)
}

rule TypeToType {
	from type : Spring!Type
	to out : X3GL!Type (
		name <- type.name
	)
}
