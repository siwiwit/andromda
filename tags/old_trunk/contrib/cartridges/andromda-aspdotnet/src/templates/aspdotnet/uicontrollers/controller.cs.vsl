#set($generatedFile = "${usecase.getFullyQualifiedPath()}/${usecase.getControllerName()}.cs")
using System;
using System.Collections;
using Microsoft.ApplicationBlocks.UIProcess;

namespace ${webAssemblyName}
{
	/// <summary>
	/// Summary description for ${usecase.getControllerName()}.
	/// </summary>
	public abstract class ${usecase.getControllerName()} : ControllerBase
	{
	##
	## Contructor of the controller that will instanciate(if it is null) the formData(s)
	##
		public ${usecase.getControllerName()}(Navigator navigator) : base(navigator)
		{
		#foreach($webform in ${usecase.getWebForms()})
					if (${webform.getNormalizedName()}FormData == null)
		this.${webform.getNormalizedName()}FormData = new ${usecase.getNormalizedName()}${webform.getNormalizedName()}FormData();
		#end
		}
			##
	## Navigation from the initial point to the first webform.
	## This is necessary since UIP allow the navigation "view to view"
	##
	public void NavigateToFirstWebform()
	{
	${usecase.getActivityGraph().getInitialTransition().getNavigation()}
	}
		##
		## 
		##
		#foreach($webform in ${usecase.getWebForms()})
		#foreach($transition in ${webform.getOutgoing()})
public void ${transition.getSignalName()}${webform.getNormalizedName()}()
{
${transition.getNavigation()}
}
#end	
		#end
		##
		## controller methods
		##
	#foreach($operation in ${usecase.getController().getOperations()})
					public abstract ${operation.getReturnType().getFullyQualifiedName()} ${operation.getName()} ();
					#end
					##
					## form data
					##
	#foreach($webform in ${usecase.getWebForms()})
public ${usecase.getNormalizedName()}${webform.getNormalizedName()}FormData ${webform.getNormalizedName()}FormData
		{
			get
			{
				return State["${usecase.getNormalizedName()}${webform.getNormalizedName()}FormData"] as ${usecase.getNormalizedName()}${webform.getNormalizedName()}FormData;
			}

			set
			{
				State["${usecase.getNormalizedName()}${webform.getNormalizedName()}FormData"] = value;
			}
		}
		#end	
	}
}