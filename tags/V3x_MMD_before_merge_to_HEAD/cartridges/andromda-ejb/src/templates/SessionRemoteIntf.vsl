## Include global definitions. ##
#parse("templates/EJBglobals.vm")
##
#set($viewtype = $class.findTaggedValue("@andromda.ejb.viewType"))
#if(!($viewtype == "local"))
/* Autogenerated by AndroMDA (SessionRemoteIntf.vsl) - do not edit */
#if ($superclass)
#if ( $superclass.hasStereotype("Service"))
## Extend the remote component interface of the super type if the super type 
## is a <<Service>>
#set ($parentInterface = "$superclass.fullyQualifiedName")
#end
#end
#if (!$parentInterface)
#set ($parentInterface = "javax.ejb.EJBObject")
#end

##################################################################################
##                         The actual template starts here                      ##
##################################################################################
package $packagename;

/**
 * Remote component interface for the $servicename session bean.
$class.getDocumentation(" * ")
 *
#copyTaggedValues($class " " [ "@andromda.ejb.viewType", "@andromda.ejb.transactionType" ])
 *
 */
public interface ${servicename}
extends $parentInterface#foreach($intf in $class.abstractions),
        $intf.fullyQualifiedName
#end {
    // -- accessors for environment entries and constants --
#foreach($att in $class.staticAttributes)
#set ($visibility = $att.visibility)
## Only expose the method to the component interface if it is public.
#if($visibility == "public")
#set($attType = $att.type.fullyQualifiedName)
#set($AttName = $str.upperCaseFirstLetter($att.name))
    /**
#if($att.hasStereotype("EnvEntry"))
     * Get the ${att.name} environment entry
#else
#set ($ATT_NAME = $att.name)
     * Get the $ATT_NAME constant
#end
$att.getDocumentation("     * ")
     */
    public $attType ${att.getterName}() throws java.rmi.RemoteException;
    
#end
#end
    // --------------- attributes ---------------------
#foreach ( $att in $class.instanceAttributes)
#set ($visibility = $att.visibility)
#set($attType = $att.type.fullyQualifiedName)    
#set($AttName = $str.upperCaseFirstLetter($att.name))
    /**
     * Get the ${att.name} property
$att.getDocumentation("     * ")
     */
    public $attType ${att.getterName}() throws java.rmi.RemoteException;

#if(!$att.readOnly)
    /**
     * Set the ${att.name} property
     * @param value the new value
     */
    public void ${att.setterName}($attType value) throws java.rmi.RemoteException;
#end
#end

    // ---------------- business methods  ----------------------
#foreach ( $op in $class.operations)
#if (!$op.hasStereotype("CreateMethod"))
## Only expose public methods
#if ($op.visibility == "public") 
#set ($msig = $op.signature)
#set ($exceptions = $op.findTaggedValue("@andromda.java.throws"))
#if (!$exceptions)
#set ($exceptions = $defaultException.fullyQualifiedName)
#end

   /**
$op.getDocumentation("    * ")
    */
#set ($returntype = $op.type.fullyQualifiedName)
#if ($exceptions)
    public $returntype ${msig} throws $exceptions, java.rmi.RemoteException;
#else
    public $returntype ${msig} throws java.rmi.RemoteException;
#end
#end
#end
#end
}
#end