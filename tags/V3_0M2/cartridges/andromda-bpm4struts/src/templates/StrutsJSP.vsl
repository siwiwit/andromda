#parse("templates/StrutsJSP.vm")
#set ($generatedFile = "${class.fullPath}.jsp")
##
##  CONSTANTS
##
#set ($actions = $class.actions)
#set ($useCase = $class.useCase)
#set ($formBeanName = $useCase.formBeanName)
#set ($formBeanType = $useCase.formBeanType)## this will be the name of the form, as used in this page
##
##  START TEMPLATE
##
<%@ taglib uri="struts-bean.tld" prefix="bean" %>
<%@ taglib uri="struts-html.tld" prefix="html" %>
<%@ taglib uri="struts-tiles.tld" prefix="tiles" %>
<%@ taglib uri="struts-logic.tld" prefix="logic" %>
#set ($hasTable = false)
#foreach ($variable in $class.pageVariables)
#if ($variable.table)
#set ($hasTable = true)
#end
#end
#if ($hasTable)
<%@ taglib uri="displaytag-all.tld" prefix="display" %>
#end

#if ($xhtml == "true")
<html:xhtml/>

#end
<tiles:insert definition="main.layout">

##
##  SETS THE TITLE
##
    <tiles:put name="title" type="string">
        <bean:message key="$class.titleKey"/>
    </tiles:put>

##
##  SETS THE JAVASCRIPT CONTENT
##
    <tiles:put name="javascript" type="string">
## only load the static javascript when it will actually be used
#set ($hasTabs = $class.tabbed)
#foreach ($action in $actions)
#if ($hasTabs == false)
#set ($hasTabs = $action.tabbed)
#end
#end
#set ($validationDesired = ($clientValidation=='true'))
#if ($class.validationRequired && $validationDesired)
        <script type="text/javascript" src="<html:rewrite page="/form-validation.jsp"/>"></script>
#foreach ($action in $actions)
#if ($action.validationRequired)
#if ($xhtml == "true")
        <html:javascript formName="$action.formBeanName" method="$action.formValidationMethodName" dynamicJavascript="true" staticJavascript="false" cdata="true"/>
#else
        <html:javascript formName="$action.formBeanName" method="$action.formValidationMethodName" dynamicJavascript="true" staticJavascript="false" htmlComment="true" cdata="false"/>
#end
#end
#end
#end
#if ($hasTabs)
        <script type="text/javascript" src="<html:rewrite page="/layout/layout-common.js"/>"></script>
#end
    </tiles:put>

##
##  SETS THE BODY OF THIS PAGE
##
    <tiles:put name="body" type="string">
        <bean:define id="$formBeanName" name="$formBeanName" type="$formBeanType" scope="session" toScope="page"/>

#foreach ($variable in $class.pageVariables)
#set ($variableName = $variable.name)
#set ($variableType = $variable.type.fullyQualifiedName)
        <logic:present name="$formBeanName" property="$variableName" scope="page">
            <bean:define id="$variableName" name="$formBeanName" property="$variableName" type="$variableType" scope="page" toScope="page"/>
        </logic:present>
#if ($variable.hasBackingList())
#set ($variableName = $variable.backingListName)
        <logic:present name="$formBeanName" property="$variableName" scope="page">
            <bean:define id="$variableName" name="$formBeanName" property="$variableName" type="$variable.backingListType" scope="page" toScope="page"/>
        </logic:present>
#end

#end

        <%--
            If you want your own custom messages to be displayed
            you do just need to edit the custom.properties resource bundle.

            These properties can be used like this:

                <bean:message key="propertyKey" bundle="custom"/>
        --%>

        <div>
            <h1><bean:message key="$class.titleKey"/></h1>
        </div>
        
#foreach ($variable in $class.pageVariables)
        <logic:present name="$variable.name" scope="page">
            <bean:write name="$variable.name" scope="page"/> <br/>
        </logic:present>
        <logic:notPresent name="$variable.name" scope="page">
            Missing from request: $variable.name <br/>
        </logic:notPresent>
#end

#if ($class.tabbed)
#set ($tabSwitchFunction = "selectActionTab")
#set ($tabMap = $class.tabMap)
        <div class="tabs">
#foreach ($tab in $tabMap.keySet())
            <div id="actiontab.${tab}" class="tab">
                <div class="tab-header">
#foreach ($tabTitle in $tabMap.keySet())
#if ($tab == $tabTitle)
                    <div class="selected-tab"><bean:message key="${class.messageKey}.tab.${tabTitle}"/></div>
#else
                    <div class="unselected-tab"><a href="javascript:${tabSwitchFunction}(${tabTitle})"><bean:message key="${class.messageKey}.tab.${tabTitle}"/></a></div>
#end
#end
                </div>
                <div class="tab-body">
#foreach ($tabAction in $tabMap.get($tab))
                    <tiles:insert page="${tabAction.fullTilePath}.jsp" flush="false"/>
#end
                </div>
            </div>
#end
        </div>

#else
#foreach ($action in $actions)
        <tiles:insert page="${action.fullTilePath}.jsp" flush="false"/>

#end
#end
#foreach ($variable in $class.pageVariables)
#if ($variable.table)
#set ($sortable = $variable.tableSortable)
#set ($exportable = $variable.tableExportable)
        <display:table name="sessionScope.${formBeanName}.${variable.name}" id="row"
                       requestURI="<%=request.getRequestURL().toString()%>" 
                       export="$exportable" pagesize="$variable.tableMaxRows" sort="list">
#if (!$variable.tableColumnNames.empty)
#foreach ($columnName in $variable.tableColumnNames)
            <display:column
                property="$columnName" title="$str.toPhrase($columnName)"
                sortable="$sortable" autolink="true" nulls="false"
                paramId="$columnName" />
#end
#end
        </display:table>

#end
#end
        <div>
            <blockquote>
                <bean:message key="$class.documentationKey"/>
            </blockquote>
        </div>

#if ($class.tabbed)
        <script type="text/javascript">
#if ($xhtml == "true")
        //<![CDATA[
#else
        //<!--
#end
#set ($tabSwitchArray = "actionTab")
            var ${tabSwitchArray} = new Array($class.tabCount);
#set ($tabMap = $class.tabMap)
#foreach ($tab in $tabMap.keySet())
#set ($tabIndex = $velocityCount - 1)
            ${tabSwitchArray}[$tabIndex] = getDiv('actiontab.$tab');
#end

            function ${tabSwitchFunction}(tabIndex)
            {
                if (isNaN(tabIndex) || tabIndex<0 || tabIndex>=${tabSwitchArray}.length) return;
                for (var i=0; i<${tabSwitchArray}.length; i++) ${tabSwitchArray}[i].style.display = 'none';
                ${tabSwitchArray}[tabIndex].style.display = 'block';
            }
            this.${tabSwitchFunction}(0);
#if ($xhtml == "true")
        //]]>
#else
        //-->
#end
        </script>
#end
    </tiles:put>

</tiles:insert>
