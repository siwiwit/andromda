<?xml version="1.0" encoding="UTF-8"?>

<project default="dist" name="ejb" basedir=".">

    <property name="app.root.dir" value="${basedir}/.."/>

    <property file="${basedir}/build.properties"/>
    <property file="${app.root.dir}/build.properties"/>

    <property name="common.jar.bundle.name" value="${application.id}-${ant.project.name}-common-${application.version}.jar"/>
    <property name="server.jar.bundle.name" value="${application.id}-${ant.project.name}-server-${application.version}.jar"/>

    <property name="xdoclet.gen.dir" value="target/xdoclet/ejb"/>
    <property name="ejb.descriptor.dir" value="${xdoclet.gen.dir}/META-INF"/>

    <fileset id="libraries" dir="${app.root.dir}/lib" includes="**/*.jar"/>
    <fileset id="classes" dir="${basedir}/target/classes" includes="**/*.class"/>
    <fileset id="bean-sources" dir="${basedir}/target/src" includes="**/*Bean.java"/>
    <fileset id="mda-java-sources" dir="${basedir}/target/src" includes="**/*.java"/>
    <fileset id="java-sources" dir="${basedir}/src/java" includes="**/*.java"/>
    <fileset id="gen-java-sources" dir="${basedir}/${xdoclet.gen.dir}" includes="**/*.java"/>

    <path id="classpath">
        <fileset refid="libraries"/>
        <pathelement path="${basedir}/target/classes"/>
        <pathelement location="${app.root.dir}/dist/${application.id}-common-${application.version}.jar"/>
    </path>

    <condition property="useProxy">
        <equals arg1="true" arg2="${proxy.enabled}" casesensitive="false"/>
    </condition>
    <target name="init-proxy">
        <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"/>
    </target>

    <target name="clean" description="o Clean up the generated directories">
        <delete dir="${basedir}/target"/>
    </target>

    <target name="xdoclet" description="o Run XDoclet EJB">
        <mkdir dir="${basedir}/src/java"/>
        <mkdir dir="${basedir}/target/src"/>
        <mkdir dir="${basedir}/${xdoclet.gen.dir}"/>
        <mkdir dir="${basedir}/${ejb.descriptor.dir}"/>
        <taskdef name="ejbdoclet" classname="xdoclet.modules.ejb.EjbDocletTask" classpathref="classpath"/>
        <ejbdoclet destdir="${basedir}/${xdoclet.gen.dir}" ejbspec="2.0" force="false">
            <fileset refid="bean-sources"/>
            <utilobject kind="physical"/>
            <deploymentdescriptor destdir="${ejb.descriptor.dir}"/>
            <jboss
				version="3.0"
                xmlencoding="UTF-8"
                typemapping="${datasource.jboss.mapping}"
                datasource="${datasource.jndi}"
                destdir="${ejb.descriptor.dir}"/>
        </ejbdoclet>
        <!--
             XDoclet stores the *Bean classes into ejb-jar.xml
             but the used andromda templates have created
             subclasses *BeanImpl.  Replace
             the names in the deployment descriptor so that
             everyone is happy.
         -->
        <replace file="${basedir}/${ejb.descriptor.dir}/ejb-jar.xml"
        	token="Bean&lt;/ejb-class&gt;" value="BeanImpl&lt;/ejb-class&gt;">
        </replace>
    </target>

    <target name="compile" description="o Compile the code" depends="xdoclet">
        <mkdir dir="${basedir}/target/classes"/>
        <javac destdir="${basedir}/target/classes" classpathref="classpath"
               deprecation="true" debug="true" optimize="false">
            <src path="${basedir}/target/src"/>
            <src path="${basedir}/src/java"/>
            <src path="${basedir}/${xdoclet.gen.dir}"/>
        </javac>
    </target>

    <target name="jar" description="o Create the JAR" depends="compile">
        <mkdir dir="${basedir}/target"/>
        <jar jarfile="${basedir}/target/${jar.bundle.name}" manifest="${basedir}/src/META-INF/MANIFEST.MF">
            <fileset dir="${basedir}/target/classes"/>
            <fileset dir="${basedir}/${xdoclet.gen.dir}" includes="**/*.xml"/>
        </jar>
    </target>

    <target name="dist" description="o Create a distribution" depends="jar">
        <mkdir dir="${app.root.dir}/dist"/>
        <copy todir="${app.root.dir}/dist">
            <fileset dir="${basedir}/target">
                <include name="${jar.bundle.name}"/>
            </fileset>
        </copy>
    </target>

</project>
