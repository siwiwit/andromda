package org.andromda.samples.carrental.admins;

import javax.ejb.SessionContext;
//import org.apache.log4j.Logger;

/**
 * The AdminService session bean.
 *
 * <p>
 *  Can create administrative users of the application and
 *  authenticate as such. @author Matthias Bohlen
 * </p>
 *
 * <p>This class is intended to hold manual changes to the autogenerated
 * implementation in {@link AdminServiceBean}.</p>
 */
public class AdminServiceBeanImpl extends AdminServiceBean {
    //private static Logger log = Logger.getLogger(AdminServiceBeanImpl.class);
	private SessionContext context;
    
    public void setSessionContext(SessionContext ctx) {
        //if(log.isDebugEnabled()) log.debug("AdminServiceBeanImpl.setSessionContext...");
        context = ctx;
    }

    public void ejbRemove() {
        //if(log.isDebugEnabled()) log.debug("AdminServiceBeanImpl.ejbRemove...");
    }

    public void ejbPassivate() {
        ///if(log.isDebugEnabled()) log.debug("AdminServiceBeanImpl.ejbPassivate...");
    }

    public void ejbActivate() {
        //if(log.isDebugEnabled()) log.debug("AdminServiceBeanImpl.ejbActivate...");
    }

    /**
     * <p>
     *  Authenticates a user as administrator. When there is no single
     *  object of this type in the database, the method creates a new
     *  one and stores it. So, be careful to remember the first
     *  password that you give! @param accountNo the account number of
     *  the potential administrator @param password the password to
     *  authenticate @return a String with the administrator object's
     *  id to be kept in the web session
     * </p>
     */
    public java.lang.String authenticateAsAdministrator(java.lang.String name, java.lang.String accountNo, java.lang.String password) throws org.andromda.samples.carrental.admins.web.main.AdminException {
        //TODO: put your implementation here.
        // Dummy return value, just that the file compiles
        return null;
    }

    /**
     * <p>
     *  Creates a new administrator. Works only if there is no other
     *  administrator object in the system. @param name The display
     *  name of the new administrator @param accountNo the account
     *  number of the potential administrator @param password the
     *  password to authenticate @return a String with the id of the
     *  administrator object to be kept in the web session
     * </p>
     */
    public java.lang.String createAdministrator(java.lang.String name, java.lang.String accountNo, java.lang.String password) throws org.andromda.samples.carrental.admins.web.main.AdminException {
        //TODO: put your implementation here.
        // Dummy return value, just that the file compiles
        return null;
    }

}
