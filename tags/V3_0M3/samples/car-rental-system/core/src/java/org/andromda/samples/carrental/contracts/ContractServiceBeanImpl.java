package org.andromda.samples.carrental.contracts;

import javax.ejb.SessionContext;
//import org.apache.log4j.Logger;

/**
 * The ContractService session bean.
 *
 * <p>
 *  Can place reservations and search for existing reservations.
 *  @author Matthias Bohlen
 * </p>
 *
 * <p>This class is intended to hold manual changes to the autogenerated
 * implementation in {@link ContractServiceBean}.</p>
 */
public class ContractServiceBeanImpl extends ContractServiceBean {
    //private static Logger log = Logger.getLogger(ContractServiceBeanImpl.class);
	private SessionContext context;
    
    public void setSessionContext(SessionContext ctx) {
        //if(log.isDebugEnabled()) log.debug("ContractServiceBeanImpl.setSessionContext...");
        context = ctx;
    }

    public void ejbRemove() {
        //if(log.isDebugEnabled()) log.debug("ContractServiceBeanImpl.ejbRemove...");
    }

    public void ejbPassivate() {
        ///if(log.isDebugEnabled()) log.debug("ContractServiceBeanImpl.ejbPassivate...");
    }

    public void ejbActivate() {
        //if(log.isDebugEnabled()) log.debug("ContractServiceBeanImpl.ejbActivate...");
    }

    /**
     * <p>
     *  Searches all reservations for an existing customer. @return
     *  Collection of ReservierungData objects @param customerId the Id
     *  of the Customer object
     * </p>
     */
    public java.util.Collection searchForReservationsOfCustomer(java.lang.String customerId) throws org.andromda.samples.carrental.contracts.ContractException {
        //TODO: put your implementation here.
        // Dummy return value, just that the file compiles
        return null;
    }

    /**
     * <p>
     *  Reserves a car for a customer. @param customerId the id of the
     *  Customer object @param comfortClass indicates hom comfortable
     *  the car should be ("eco", "normal", or "luxury") @param
     *  reservationDate the day when the car is needed
     * </p>
     */
    public void reserve(java.lang.String customerId, java.lang.String comfortClass, java.util.Date reservationDate) throws org.andromda.samples.carrental.contracts.ContractException {
        //TODO: put your implementation here.
    }

    /**
     * <p>
     *  Hand out a reservation of a car @param idReservation the id of
     *  the reservation to Hand out
     * </p>
     */
    public java.lang.String handOutReservation(java.lang.String idReservation) throws org.andromda.samples.carrental.contracts.ContractException {
        //TODO: put your implementation here.
        // Dummy return value, just that the file compiles
        return null;
    }

    /**
     * <p>
     *  Return a car @param idContract the Id of the Customer Contract
     * </p>
     */
    public java.lang.String returnCar(java.lang.String idContract) throws org.andromda.samples.carrental.contracts.ContractException {
        //TODO: put your implementation here.
        // Dummy return value, just that the file compiles
        return null;
    }

    /**
     * <p>
     *  Searches all contracts for an existing customer. @return
     *  Collection of ContractsData objects @param customerId the Id of
     *  the Customer object
     * </p>
     */
    public java.util.Collection searchForContractsOfCustomer(java.lang.String idCustomer) throws org.andromda.samples.carrental.contracts.ContractException {
        //TODO: put your implementation here.
        // Dummy return value, just that the file compiles
        return null;
    }

    /**
     * <p>
     *  Register an accident from a customer with a Contract @param
     *  idContract the Id of the Customer Contract
     * </p>
     */
    public java.lang.String registerAccident(java.lang.String idContract) throws org.andromda.samples.carrental.contracts.ContractException {
        //TODO: put your implementation here.
        // Dummy return value, just that the file compiles
        return null;
    }

}
