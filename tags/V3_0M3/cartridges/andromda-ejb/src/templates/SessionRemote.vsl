## We only generate if the viewType is remote
#if($service.viewType.equalsIgnoreCase("remote"))
/* Autogenerated by AndroMDA (SessionRemote.vsl) - do not edit */
package $service.packageName;

/**
 * Remote component interface for the $service.name session bean.
$service.getDocumentation(" * ")
 */
public interface ${service.name}
#if ($service.generalization)
    extends $service.fullyQualifiedName
#else
    extends javax.ejb.EJBObject
#end 
{
    // -- accessors for environment entries --
#foreach($envEntry in $service.getEnvironmentEntries(true))
#if($visibility == "public")
    /**
     * Get the ${envEntry.name} environment entry
$envEntry.getDocumentation("     * ")
     */
    public $envEntry.type.fullyQualifiedName ${envEntry.getterName}();

#end
#end
    // -- accessors for constants --
#foreach($constant in $service.constants)
## Only expose the method to the home interface if it is public.
#if($constant.visibility == "public")
    /**
     * Get the $attribute.name constant
$constant.getDocumentation("     * ")
     */
    public $constant.type.fullyQualifiedName ${constant.getterName}();

#end
#end
    // --------------- attributes ---------------------
#foreach ( $attribute in $service.instanceAttributes)
    /**
     * Get the ${attribute.name} property
$attribute.getDocumentation("     * ")
     */
    public $attribute.type.fullyQualifiedName ${attribute.getterName}() 
        throws java.rmi.RemoteException;

#if(!$attribute.readOnly)
    /**
     * Set the $attribute.name property
     * @param value the new value
     */
    public void ${attribute.setterName}($attribute.type.fullyQualifiedName value) 
        throws java.rmi.RemoteException;
#end
#end

    // ---------------- business methods  ----------------------
#foreach ( $operation in $service.businessOperations)
## Only expose public methods
#if ($operation.visibility == "public")

   /**
$operation.getDocumentation("    * ")
    */
#set ($returnType = $operation.returnType.fullyQualifiedName)
#if ($operation.exceptionsPresent)
    public $returnType $operation.signature 
        throws $operation.getExceptionList('java.rmi.RemoteException');
#else
    public $returnType $operation.signature 
        throws java.rmi.RemoteException;
#end
#end
#end
}
#end