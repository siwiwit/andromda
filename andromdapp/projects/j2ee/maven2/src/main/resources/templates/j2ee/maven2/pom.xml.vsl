<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>$applicationPackage</groupId>
    <artifactId>$applicationId</artifactId>
    <packaging>pom</packaging>
    <version>$applicationVersion</version>
    <name>$applicationName</name>
    <description>The $applicationName Project.</description>
    <scm>
        <connection></connection>
        <url></url>
    </scm>
    <organization>
        <name></name>
        <url></url>
    </organization>
    <ciManagement>
        <system>continuum</system>
        <notifiers>
            <notifier>
                <type>mail</type>
                <configuration>
                    <address></address>
                </configuration>
            </notifier>
        </notifiers>
    </ciManagement>
    <developers>
        <developer>
            <id></id>
            <name>$author</name>
            <email></email>
            <organization></organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone></timezone>
        </developer>
    </developers>
    <dependencyManagement>
        <dependencies>
        #if (!$ejb && !$ejb3 && $spring)
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-core</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-translation-core</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-validation-library</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #if($groovy)
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all-minimal</artifactId>
                <version>1.5.7</version>
            </dependency>
        #end
        #end
        #if ($jsf)
            <dependency>
                <groupId>org.andromda.cartridges</groupId>
                <artifactId>andromda-jsf-cartridge-components</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
            </dependency>
        #if ($jsf2)
            <dependency>
                <groupId>org.andromda.cartridges</groupId>
                <artifactId>andromda-jsf2-cartridge</artifactId>
                <version>1.1-SNAPSHOT</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.andromda.cartridges</groupId>
                <artifactId>andromda-jsf2-cartridge-components</artifactId>
                <version>1.1-SNAPSHOT</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-api</artifactId>
                <version>1.1.7</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-impl</artifactId>
                <version>1.1.7</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.tomahawk</groupId>
                <artifactId>tomahawk</artifactId>
                <version>1.1.7</version>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>el-api</artifactId>
                <version>1.0</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.sun.el</groupId>
                <artifactId>el-ri</artifactId>
                <version>1.0</version>
                <scope>runtime</scope>
            </dependency>
        #if ($portlet)
            <dependency>
                <groupId>javax.portlet</groupId>
                <artifactId>portlet-api</artifactId>
                <version>1.0</version>
                <scope>provided</scope>
            </dependency>
        #if ($ajaxLibrary.equals("icefaces"))
            <dependency>
                <groupId>org.icefaces</groupId>
                <artifactId>icefaces</artifactId>
                <version>1.8.0</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.icefaces</groupId>
                <artifactId>icefaces-comps</artifactId>
                <version>1.8.0</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.icefaces</groupId>
                <artifactId>icefaces-facelets</artifactId>
                <version>1.8.0</version>
                <scope>runtime</scope>
            </dependency>
        #end
        #else
            <dependency>
                <groupId>org.apache.myfaces.trinidad</groupId>
                <artifactId>trinidad-api</artifactId>
                <version>1.0.10</version>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.trinidad</groupId>
                <artifactId>trinidad-impl</artifactId>
                <version>1.0.10</version>
            </dependency>
            <dependency>
                <groupId>com.sun.facelets</groupId>
                <artifactId>jsf-facelets</artifactId>
                <version>1.1.14</version>
                <scope>runtime</scope>
            </dependency>
        #end
        #end
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-utils</artifactId>
                <version>${andromda.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #end
        #if ($jbossSeam)
            <dependency>
                <groupId>org.andromda.cartridges</groupId>
                <artifactId>andromda-jsf-cartridge-components</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>myfaces</groupId>
                        <artifactId>myfaces-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>myfaces</groupId>
                        <artifactId>myfaces-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>myfaces</groupId>
                        <artifactId>tomahawk</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>jsp-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #end
        #if (!$transactionPersistenceType.equals("none"))
            <dependency>
                <groupId>org.andromda.translationlibraries</groupId>
                <artifactId>andromda-ocl-query-library</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #end
            <!-- This dependency provides the ability to implement your
                  business logic in an interpreted manner during development on
                  your local machine -->
            <dependency>
                <groupId>org.andromda</groupId>
                <artifactId>andromda-script-wrappers</artifactId>
                <version>${andromda.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.8.1</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.1</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.4</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.2.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.1</version>
            #if ($ear)
                <scope>provided</scope>
            #end
            </dependency>
        #if ($ejb3)
            <!-- JBoss Dependencies -->
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-j2ee</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-ejb3-client</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-ejb3x</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>ejb3-persistence</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-annotations-ejb3</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-serialization</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-remoting</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-aop-jdk50-client</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-aspect-jdk50-client</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jbossall-client</artifactId>
                <version>4.0.5-GA</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jnp-client</artifactId>
                <version>4.0.5-GA</version>
                <scope>runtime</scope>
            </dependency>
        #if ($jsr181Webservice)
            <!-- Webservice JBossWS Dependencies -->
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jbossws-client</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-jaxrpc</artifactId>
                <version>4.0.5-GA</version>
                <scope>provided</scope>
            </dependency>
        #end
            <!-- Embedded Microcontainer Dependencies -->
            <dependency>
                <groupId>org.jboss.microcontainer</groupId>
                <artifactId>hibernate-all</artifactId>
                <version>alpha_9</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.microcontainer</groupId>
                <artifactId>jboss-ejb3-all</artifactId>
                <version>alpha_9</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.microcontainer</groupId>
                <artifactId>thirdparty-all</artifactId>
                <version>alpha_9</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.microcontainer</groupId>
                <artifactId>jms-ra</artifactId>
                <version>alpha_9</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.microcontainer</groupId>
                <artifactId>jcainflow</artifactId>
                <version>alpha_9</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>1.2.3</version>
                <scope>provided</scope>
            </dependency>
        #if ($spring || $hibernate)
            <!-- Hibernate Dependencies -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate</artifactId>
                <version>3.2.6.ga</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-annotations</artifactId>
                <version>3.3.0.ga</version>
                <scope>provided</scope>
            </dependency>
        #end
        #else
            <dependency>
                <groupId>jboss</groupId>
                <artifactId>jboss-j2ee</artifactId>
                <version>3.2.3</version>
            #if ($ear)
                <scope>provided</scope>
            #end
            </dependency>
        #end
        #if (!$ejb && !$ejb3)
        #if ($hibernateVersion.equals("2"))
            <dependency>
                <groupId>net.sf.hibernate</groupId>
                <artifactId>hibernate</artifactId>
                <version>2.1.8</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>2.0.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>asm</groupId>
                <artifactId>asm</artifactId>
                <version>1.4.3</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>odmg</groupId>
                <artifactId>odmg</artifactId>
                <version>3.0</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>1.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>1.6.1</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #else
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate</artifactId>
                <version>3.2.6.ga</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.transaction</groupId>
                        <artifactId>jta</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #end
        #end
        #if ($spring)
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring</artifactId>
            #if ($springVersion.equals("1"))
                <version>1.2.9</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.mail</groupId>
                        <artifactId>mail</artifactId>
                    </exclusion>
                </exclusions>
            #else
                <version>${spring.version}</version>
            #end
            </dependency>
            <!-- Comment out three below if not using JMS -->
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-core</artifactId>
                <version>4.1.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>1.3</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>aopalliance</groupId>
                <artifactId>aopalliance</artifactId>
                <version>1.0</version>
            </dependency>
        #end
        #if ($workflow)
            <dependency>
                <groupId>org.jbpm</groupId>
                <artifactId>jbpm</artifactId>
                <version>3.0</version>
            </dependency>
            <dependency>
                <groupId>org.jbpm</groupId>
                <artifactId>jbpm-identity</artifactId>
                <version>3.0</version>
            </dependency>
            <dependency>
                <groupId>c3p0</groupId>
                <artifactId>c3p0</artifactId>
                <version>0.8.5.2</version>
            </dependency>
        #end
        #if ($web || $hibernate || $workflow)
            <dependency>
                <groupId>antlr</groupId>
                <artifactId>antlr</artifactId>
                <version>2.7.7</version>
            </dependency>
        #end
        #if ($web)
            <dependency>
                <groupId>commons-digester</groupId>
                <artifactId>commons-digester</artifactId>
                <version>2.0</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>1.3.1</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.4</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.lowagie</groupId>
                <artifactId>itext</artifactId>
                <version>2.1.7</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.1.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>taglibs</groupId>
                <artifactId>standard</artifactId>
                <version>1.1.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jsp-api</artifactId>
                <version>2.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>oro</groupId>
                <artifactId>oro</artifactId>
                <version>2.0.8</version>
                <scope>runtime</scope>
            </dependency>
        #end
        #if ($struts)
            <dependency>
                <groupId>struts</groupId>
                <artifactId>struts</artifactId>
                <version>1.2.9</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-chain</groupId>
                        <artifactId>commons-chain</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-digester</groupId>
                        <artifactId>commons-digester</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>struts-menu</groupId>
                <artifactId>struts-menu</artifactId>
                <version>2.3</version>
            </dependency>
            <dependency>
                <groupId>displaytag</groupId>
                <artifactId>displaytag</artifactId>
                <version>1.0</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>taglibs</groupId>
                        <artifactId>standard</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #end
        #if ($jsf)
        #if ($jbossSeam)
            <!-- MyFaces Dependencies -->
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-api</artifactId>
                <version>1.1.5</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-impl</artifactId>
                <version>1.1.5</version>
                <scope>provided</scope>
            </dependency>
        #end
        #end
        #if ($axis)
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>1.4.1</version>
            </dependency>
        #if ($axisVersion.equals("1"))
            <!-- Axis1 Dependencies -->
            <dependency>
                <groupId>axis</groupId>
                <artifactId>axis</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>axis</groupId>
                <artifactId>axis-jaxrpc</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>axis</groupId>
                <artifactId>axis-saaj</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>commons-discovery</groupId>
                <artifactId>commons-discovery</artifactId>
                <version>0.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>1.6.2</version>
            </dependency>
        #else
            <!-- Axis2 Dependencies -->
            <dependency>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>annogen</groupId>
                <artifactId>annogen</artifactId>
                <version>0.1.0</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.axiom</groupId>
                <artifactId>axiom-api</artifactId>
                <version>1.2.4</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.axiom</groupId>
                <artifactId>axiom-impl</artifactId>
                <version>1.2.4</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.axiom</groupId>
                <artifactId>axiom-dom</artifactId>
                <version>1.2.4</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>backport-util-concurrent</groupId>
                <artifactId>backport-util-concurrent</artifactId>
                <version>2.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>httpcomponents-httpcore</groupId>
                <artifactId>jakarta-httpcore</artifactId>
                <version>4.0-alpha4</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jms_1.1_spec</artifactId>
                <version>1.1.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.neethi</groupId>
                <artifactId>neethi</artifactId>
                <version>2.0.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>stax</groupId>
                <artifactId>stax-api</artifactId>
                <version>1.0.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.woden</groupId>
                <artifactId>woden</artifactId>
                <version>1.0-incubating-M7a</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>1.6.2</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.commons.schema</groupId>
                <artifactId>XmlSchema</artifactId>
                <version>1.4.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>woodstox</groupId>
                <artifactId>wstx-asl</artifactId>
                <version>3.2.7</version>
                <scope>runtime</scope>
            </dependency>
        #end
        #elseif ($xfire)
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-all</artifactId>
                <version>1.2.5</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xmlParserAPIs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        #end
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>3.8.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.14</version>
                <!--scope>test</scope-->
            </dependency>
        #if ($ejb3)
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>4.7</version>
                <scope>test</scope>
                <classifier>jdk15</classifier>
                <exclusions>
                    <exclusion>
                        <groupId>qdox</groupId>
                        <artifactId>qdox</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>bsh</groupId>
                        <artifactId>bsh</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.0.4</version>
                <scope>test</scope>
            </dependency>
        #end
        </dependencies>
    </dependencyManagement>
    <build>
        <defaultGoal>install</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>target/src</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.andromda.maven.plugins</groupId>
                    <artifactId>andromda-maven-plugin</artifactId>
                    <version>${andromda.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.andromda.maven.plugins</groupId>
                    <artifactId>andromdapp-maven-plugin</artifactId>
                    <version>${andromda.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.5</source>
                        <target>1.5</target>
                    </configuration>
                </plugin>
            #if ($ejb3)
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.4.3</version>
                    <configuration>
                        <suiteXmlFiles>
                            <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
                        </suiteXmlFiles>
                        <!-- This trick allows the JBoss EJB3StandaloneBootstrap to find and deploy our compiled EJBs!! -->
                        <systemProperties>
                            <property>
                                <name>java.class.path</name>
                                <value>target/classes</value>
                            </property>
                        </systemProperties>
                    </configuration>
                </plugin>
            #end
                <!-- Comment to run Eclipse plugin for top leval project only, as part of mda install. See mda/eclipse.bat -->
                <plugin>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.7</version>
                    <inherited>true</inherited>
                    <configuration>
                        <wtpversion>1.5</wtpversion>
                        <buildOutputDirectory>target/classes</buildOutputDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- Automatically attach sources to build artifact as artifact-version-sources.jar and deploy to local repository -->
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.1.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.1</version>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-utils</artifactId>
                        <version>1.5.6</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <modules>
        <module>mda</module>
        <module>common</module>
    #if (!$transactionPersistenceType.equals("none"))
        <module>core</module>
    #end
    #if ($web || $war)
        <module>web</module>
    #end
    #if ($webservice && !$jsr181Webservice && $ear)
        <module>webservice</module>
    #end
    #if ($workflow)
        <module>workflow</module>
    #end
    #if ($ear)
        <module>app</module>
    #end
    </modules>
    <properties>
        <andromda.version>$andromdaVersion</andromda.version>
        <downloadSources>true</downloadSources>
        <createChecksum>true</createChecksum>
        <uniqueVersion>false</uniqueVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Globally change these versions in all projects -->
        <commons-beanutils.version>1.7.0</commons-beanutils.version>
        <commons-collections.version>3.2</commons-collections.version>
        <commons-digester.version>1.7</commons-digester.version>
        <commons-io.version>1.4</commons-io.version>
        <commons-lang.version>2.4</commons-lang.version>
        <commons-logging.version>1.1.1</commons-logging.version>
        <commons-validator.version>1.3.1</commons-validator.version>
        <junit.version>4.7</junit.version>
        <log4j.version>1.2.14</log4j.version>
        <!--
            Change this to generate to the correct MDA database mappings,
            For MySql use: MySQL
            For Hypersonic use: HypersonicSql
            For Oracle9i use: Oracle9i
            For DB2 use: DB2
            For Informix use: InformixDB
            For MSSQL use: MSSQL
            For Pointbase use: PointBase
            For Postgres use: PostgreSQL
            For Sybase use: Sybase
            For SapDB use: SapDB
            For Derby use: Derby
            -->
        <sql.mappings>
        #if ($mysql)
            MySQL
        #elseif ($oracle)
            Oracle9i
        #elseif ($db2)
            DB2
        #elseif ($informix)
            InformixDB
        #elseif ($mssql)
            MSSQL
        #elseif ($pointbase)
            PointBase
        #elseif ($postgres)
            PostgreSQL
        #elseif ($sybase)
            Sybase
        #elseif ($sapdb)
            SapDB
        #elseif ($progress)
            PostgreSQL 7.2
        #elseif ($derby)
            Derby
        #else
            HypersonicSql
        #end
        </sql.mappings>
    #if ($hibernate || $spring || $ejb3)
    #if ($hibernateVersion.equals("2"))
        <!--
        Change this for the appropriate database
        For MySql use: net.sf.hibernate.dialect.MySQLDialect
        For Hypersonic use: net.sf.hibernate.dialect.HSQLDialect
        For Oracle9i use: net.sf.hibernate.dialect.Oracle9Dialect
        For DB2 use: net.sf.hibernate.dialect.DB2Dialect
        For Informix use: net.sf.hibernate.dialect.InformixDialect
        For MSSQL use: net.sf.hibernate.dialect.SQLServerDialect
        For Pointbase use: net.sf.hibernate.dialect.PointbaseDialect
        For Postgres use: net.sf.hibernate.dialect.PostgreSQLDialect
        For Sybase use: net.sf.hibernate.dialect.SybaseDialect
        For Sybase Anywhere use: net.sf.hibernate.dialect.SybaseAnywhereDialect
        For SapDB use: net.sf.hibernate.dialect.SAPDBDialect
        For Progress use: net.sf.hibernate.dialect.ProgressDialect
        For Derby use: net.sf.hibernate.dialect.DerbyDialect
        -->
        <hibernate.dialect>
        #if ($mysql)
            net.sf.hibernate.dialect.MySQLDialect
        #elseif ($oracle)
            net.sf.hibernate.dialect.Oracle9Dialect
        #elseif ($db2)
            net.sf.hibernate.dialect.DB2Dialect
        #elseif ($informix)
            net.sf.hibernate.dialect.InformixDialect
        #elseif ($mssql)
            net.sf.hibernate.dialect.SQLServerDialect
        #elseif ($pointbase)
            net.sf.hibernate.dialect.PointbaseDialect
        #elseif ($postgres)
            net.sf.hibernate.dialect.PostgreSQLDialect
        #elseif ($sybase)
            net.sf.hibernate.dialect.SybaseDialect
        #elseif ($sapdb)
            net.sf.hibernate.dialect.SAPDBDialect
        #elseif ($progress)
            net.sf.hibernate.dialect.ProgressDialect
        #elseif ($derby)
            net.sf.hibernate.dialect.DerbyDialect
        #else
            net.sf.hibernate.dialect.HSQLDialect
        #end
        </hibernate.dialect>
    #else
        <!--
        Change this for the appropriate database
        For MySql use: org.hibernate.dialect.MySQLDialect
        For MySql InnoDB use: org.hibernate.dialect.MySQLInnoDBDialect
        For MySql MyISAM use: org.hibernate.dialect.MySQLMyISAMDialect
        For Hypersonic use: org.hibernate.dialect.HSQLDialect
        For Oracle any version use: org.hibernate.dialect.OracleDialect
        For Oracle9i/10g use: org.hibernate.dialect.Oracle9Dialect
        For DB2 use: org.hibernate.dialect.DB2Dialect
        For Informix use: org.hibernate.dialect.InformixDialect
        For MSSQL use: org.hibernate.dialect.SQLServerDialect
        For Pointbase use: org.hibernate.dialect.PointbaseDialect
        For Postgres use: org.hibernate.dialect.PostgreSQLDialect
        For Sybase use: org.hibernate.dialect.SybaseDialect
        For Sybase Anywhere use: org.hibernate.dialect.SybaseAnywhereDialect
        For SapDB use: org.hibernate.dialect.SAPDBDialect
        For Progress use: org.hibernate.dialect.ProgressDialect
        For Derby use: org.hibernate.dialect.DerbyDialect
        -->
        <hibernate.dialect>
        #if ($mysql)
            org.hibernate.dialect.MySQLInnoDBDialect
        #elseif ($oracle)
            org.hibernate.dialect.Oracle9Dialect
        #elseif ($db2)
            org.hibernate.dialect.DB2Dialect
        #elseif ($informix)
            org.hibernate.dialect.InformixDialect
        #elseif ($mssql)
            org.hibernate.dialect.SQLServerDialect
        #elseif ($pointbase)
            org.hibernate.dialect.PointbaseDialect
        #elseif ($postgres)
            org.hibernate.dialect.PostgreSQLDialect
        #elseif ($sybase)
            org.hibernate.dialect.SybaseDialect
        #elseif ($sapdb)
            org.hibernate.dialect.SAPDBDialect
        #elseif ($progress)
            org.hibernate.dialect.ProgressDialect
        #elseif ($derby)
            org.hibernate.dialect.DerbyDialect
        #else
            org.hibernate.dialect.HSQLDialect
        #end
        </hibernate.dialect>
    #end
    #end
    #if ($ejb || $ejb3)
        <!--
          Change this to the correct database type mappings (for Jboss)
          For MySql use: mySQL
          For Hypersonic use: Hypersonic SQL
          For Oracle9i use: Oracle9i
          For DB2 use: DB2
          For Informix use: InformixDB
          For MSSQL use: MS SQLSERVER2000
          For Pointbase use: PointBase
          For Postgres use: PostgreSQL 7.2
          For Sybase use: Sybase
          For SapDB use: SapDB
          For Derby use: Derby
          -->
        <jboss.typeMappings>
        #if ($mysql)
            mySQL
        #elseif ($oracle)
            Oracle9i
        #elseif ($db2)
            DB2
        #elseif ($informix)
            InformixDB
        #elseif ($mssql)
            MS SQLSERVER2000
        #elseif ($pointbase)
            PointBase
        #elseif ($postgres)
            PostgreSQL 7.2
        #elseif ($sybase)
            Sybase
        #elseif ($sapdb)
            SapDB
        #elseif ($derby)
            Derby
        #elseif ($progress)
            PostgreSQL 7.2
        #else
            Hypersonic SQL
        #end
        </jboss.typeMappings>
    #end
    #if ($ear)
        <jboss.home>${env.JBOSS_HOME}</jboss.home>
    #else
        <tomcat.home>${env.CATALINA_HOME}</tomcat.home>
    #end
    <application.id>$applicationId</application.id>
    <application.package>$applicationPackage</application.package>
    <application.name>$applicationName</application.name>
    <application.version>$applicationVersion</application.version>
    <dataSource.name>jdbc/${application.id}</dataSource.name>
    #if ($ear)
        <dataSource>java:/${dataSource.name}</dataSource>
    #else
        <dataSource>java:comp/env/${dataSource.name}</dataSource>
    #end
    #if ($spring && $springVersion.equals("2"))
        <spring.version>2.0.8</spring.version>
    #end
        <!-- SCM user ID and Password here, or in user specific settings.xml file -->
        <username></username>
        <password></password>
    </properties>
    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                        Change driver path and jar for appropriate database
                        For MySQL use: mysql-connector-java-X-bin.jar
                        For Hypersonic use: hsqldb.jar
                        -->
                <jdbc.driver.jar>
                #if ($ear)
                    #if ($mysql)
                        ${jboss.home}/server/default/lib/mysql-connector-java-5.0.4-bin.jar
                    #elseif ($oracle)
                        ${jboss.home}/server/default/lib/ojdbc14.jar
                    #elseif ($db2)
                        ${jboss.home}/server/default/lib/db2java.zip
                    #elseif ($informix)
                        ${jboss.home}/server/default/lib/ifxjdbc.jar
                    #elseif ($mssql)
                        ${jboss.home}/server/default/lib/Mssqlserver.jar
                    #elseif ($pointbase)
                        ${jboss.home}/server/default/lib/pbclient.jar
                    #elseif ($postgres)
                        ${jboss.home}/server/default/lib/postgresql.jar
                    #elseif ($sybase)
                        ${jboss.home}/server/default/lib/jconn2.jar
                    #elseif ($sapdb)
                        ${jboss.home}/server/default/lib/sapdbc.jar
                    #elseif ($progress)
                        ${jboss.home}/server/default/lib/progress.jar
                    #elseif ($derby)
                        ${jboss.home}/server/default/lib/derby.jar
                    #else
                        ${jboss.home}/server/default/lib/hsqldb.jar
                    #end
                #else
                    #if ($mysql)
                        /path/to/mysql/lib/mysql-connector-java-5.0.4-bin.jar
                    #elseif ($oracle)
                        /path/to/oracle/jdbc/lib/ojdbc14.jar
                    #elseif ($db2)
                        /path/to/db2/java/db2java.zip
                    #elseif ($informix)
                        /path/to/informix/lib/ifxjdbc.jar
                    #elseif ($mssql)
                        /path/to/SQLServerh/java/Mssqlserver.jar
                    #elseif ($pointbase)
                        /path/to/pointbase/lib/pbclient.jar
                    #elseif ($postgres)
                        /path/to/postgres/lib/postgresql.jar
                    #elseif ($sybase)
                        /path/to/sybase/java/jconn2.jar
                    #elseif ($sapdb)
                        /path/to/sapdb/lib/sapdbc.jar
                    #elseif ($progress)
                        /path/to/progress/lib/progress.jar
                    #elseif ($derby)
                        /path/to/derby/lib/derby.jar
                    #else
                        /path/to/hsqldb/lib/hsqldb.jar
                    #end
                #end
                </jdbc.driver.jar>
                <!--
                        Change driver for appropriate database
                        For MySQL use: com.mysql.jdbc.Driver
                        For Hypersonic use: org.hsqldb.jdbcDriver
                        For Oracle9i use: oracle.jdbc.driver.OracleDriver
                        For DB2 use: COM.ibm.db2.jdbc.app.DB2Driver
                        For Informix use: com.informix.jdbc.IfxDriver
                        For MSSQL use: com.microsoft.jdbc.sqlserver.SQLServerDriver
                        For Pointbase use: com.pointbase.jdbc.jdbcUniversalDriver
                        For Postgres use: org.postgresql.Driver
                        For Sybase use: com.sybase.jdbc2.jdbc.SybDataSource
                        For SapDB use: com.sap.dbtech.jdbc.DriverSapDB
                        For Progress use: com.progress.sql.jdbc.JdbcProgressDriver
                        For Derby use: org.apache.derby.jdbc.EmbeddedDriver
                        -->
                <jdbc.driver>
                #if ($mysql)
                    com.mysql.jdbc.Driver
                #elseif ($oracle)
                    oracle.jdbc.driver.OracleDriver
                #elseif ($db2)
                    COM.ibm.db2.jdbc.app.DB2Driver
                #elseif ($informix)
                    com.informix.jdbc.IfxDriver
                #elseif ($mssql)
                    com.microsoft.jdbc.sqlserver.SQLServerDriver
                #elseif ($pointbase)
                    com.pointbase.jdbc.jdbcUniversalDriver
                #elseif ($postgres)
                    org.postgresql.Driver
                #elseif ($sybase)
                    com.sybase.jdbc2.jdbc.SybDataSource
                #elseif ($sapdb)
                    com.sap.dbtech.jdbc.DriverSapDB
                #elseif ($progress)
                    com.progress.sql.jdbc.JdbcProgressDriver
                #elseif ($derby)
                    org.apache.derby.jdbc.EmbeddedDriver
                #else
                    org.hsqldb.jdbcDriver
                #end
                </jdbc.driver>
                    <!--
                          Change connection url for appropriate database
                          For MySQL use: jdbc:mysql://localhost:3306/$applicationId
				For Hypersonic use: jdbc:hsqldb:hsql://127.0.0.1:1701
				For Oracle9i use: jdbc:oracle:thin:@localhost:1521:yoursid
				For DB2 use: jdbc:db2:$applicationId
				For Informix use: jdbc:informix-sqli://localhost:1557/${applicationId}:INFORMIXSERVER=myserver
				For MSSQL use: jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=$applicationId
				For Pointbase use: jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.${applicationId}@,new
				For Postgres use: jdbc:postgresql://localhost/$applicationId
				For Sybase use: jdbc:sybase:Tds:localhost:5000/${applicationId}?JCONNECT_VERSION=6
				For SapDB use: jdbc:sapdb://127.0.0.1/$applicationId
				For Progress use: jdbc:JdbcProgress:T:localhost:3305:$applicationId
				-->
                <jdbc.url>
                #if ($mysql)
                    jdbc:mysql://localhost:3306/$applicationId
                #elseif ($oracle)
                    jdbc:oracle:thin:@localhost:1521:yoursid
                #elseif ($db2)
                    jdbc:db2:$applicationId
                #elseif ($informix)
                    jdbc:informix-sqli://localhost:1557/${applicationId}:INFORMIXSERVER=myserver
                #elseif ($mssql)
                    jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=$applicationId
                #elseif ($pointbase)
                    jdbc:pointbase:server://@pointbase.server@:@pointbase.port/pointbase.${applicationId}@,new
                #elseif ($postgres)
                    jdbc:postgresql://localhost/$applicationId
                #elseif ($sybase)
                    jdbc:sybase:Tds:localhost:5000/${applicationId}?JCONNECT_VERSION=6
                #elseif ($sapdb)
                    jdbc:sapdb://127.0.0.1/$applicationId
                #elseif ($progress)
                    jdbc:JdbcProgress:T:localhost:3305:$applicationId
                #elseif ($derby)
                    jdbc:derby:$applicationId
                #else
                    jdbc:hsqldb:hsql://127.0.0.1:1701
                #end
                </jdbc.url>
                <!-- Enter id/password for the database connection -->
                <jdbc.username>
                #if ($mysql)
                    $applicationId
                #elseif ($oracle)
                    SYSTEM
                #elseif ($db2)
                    db2admin
                #elseif ($informix)
                    informix
                #elseif ($mssql || $sybase)
                    sa
                #elseif ($pointbase)
                    pointbase
                #elseif ($postgres)
                    postgres
                #elseif ($sapdb)
                    sap
                #elseif ($progress)
                    progress
                #elseif ($derby)
                    derby
                #else
                    hsql
                #end
                </jdbc.username>
                <jdbc.password>$applicationId</jdbc.password>
                <!--
                        Change exception sorter class name for appropriate database
                        For MySQL use: org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter
                        For Hypersonic use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                        For Oracle9i use: org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
                        For DB2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                        For Informix use: org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter
                        For MSSQL use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                        For Pointbase use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                        For Postgres use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                        For Sybase use: org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter
                        For SapDB use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                        For Progress use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                        -->
                <jdbc.exception.sorter>
                #if ($mysql)
                    org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter
                #elseif ($oracle)
                    org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
                #elseif ($informix)
                    org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter
                #elseif ($sybase)
                    org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter
                #else
                    org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
                #end
                </jdbc.exception.sorter>
            #if ($webservice)
                <!-- Change this to the host on which your webservice will be deployed -->
                <webservice.host>localhost</webservice.host>
                <!-- Change this the port on which your webservice will be deploy -->
                <webservice.port>8080</webservice.port>
            #end
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.andromda.maven.plugins</groupId>
                            <artifactId>andromdapp-maven-plugin</artifactId>
                            <version>$andromdaVersion</version>
                            <!-- provides the injection of the script wrapper support into the class files (this should only
                                          be done when developing locally), uncomment this executions element to enable
                                          <executions>
                                          <execution>
                                          <id>instrument-scripts</id>
                                          <goals>
                                          <goal>instrument-scripts</goal>
                                          </goals>
                                          </execution>
                                          </executions>
                                          -->
                            <configuration>
                                <scriptWrapper>org.andromda.scriptwrappers.GroovyScriptWrapper</scriptWrapper>
                                <locations>
                                    <location>
                                        <rootPath>${project.basedir}/src/main/java</rootPath>
                                        <!-- adjust these to include or exclude specific files, by default
                                                            all files found in the rootPath are considered
                                                            <includes>
                                                            <include>relative/path/to/file/to/include/SomeClass.java</include>
                                                            </includes>
                                                            <excludes>
                                                            <exclude>relative/path/to/file/to/include/SomeClass.java</exclude>
                                                            </excludes>
                                                            -->
                                    </location>
                                </locations>
                            </configuration>
                        </plugin>
                        <plugin>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <configuration>
                                <source>1.5</source>
                                <target>1.5</target>
                            </configuration>
                        </plugin>
                        <plugin>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>2.4.1</version>
                            <configuration>
                            </configuration>
                        </plugin>
                        <plugin>
                            <artifactId>maven-site-plugin</artifactId>
                            <version>2.0-beta-7</version>
                            <dependencies>
                                <dependency>
                                    <groupId>org.apache.maven.doxia</groupId>
                                    <artifactId>doxia-module-twiki</artifactId>
                                    <version>1.0-alpha-11</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>development</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
            <properties>
                <jdbc.driver.jar></jdbc.driver.jar>
                <jdbc.driver></jdbc.driver>
                <jdbc.url></jdbc.url>
                <jdbc.username></jdbc.username>
                <jdbc.password></jdbc.password>
                <jdbc.exception.sorter></jdbc.exception.sorter>
            #if ($webservice)
                <webservice.host></webservice.host>
                <webservice.port></webservice.port>
            #end
            </properties>
        </profile>
        <profile>
            <id>validation</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>val</value>
                </property>
            </activation>
            <properties>
                <jdbc.driver.jar></jdbc.driver.jar>
                <jdbc.driver></jdbc.driver>
                <jdbc.url></jdbc.url>
                <jdbc.username></jdbc.username>
                <jdbc.password></jdbc.password>
                <jdbc.exception.sorter></jdbc.exception.sorter>
            #if ($webservice)
                <webservice.host></webservice.host>
                <webservice.port></webservice.port>
            #end
            </properties>
        </profile>
        <profile>
            <id>production</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>prod</value>
                </property>
            </activation>
            <properties>
                <jdbc.driver.jar></jdbc.driver.jar>
                <jdbc.driver></jdbc.driver>
                <jdbc.url></jdbc.url>
                <jdbc.username></jdbc.username>
                <jdbc.password></jdbc.password>
                <jdbc.exception.sorter></jdbc.exception.sorter>
            #if ($webservice)
                <webservice.host></webservice.host>
                <webservice.port></webservice.port>
            #end
            </properties>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>andromda</id>
            <name>AndroMDA Repository</name>
            <url>http://team.andromda.org/maven2</url>
        </repository>
    #if ($jsf2)
        <repository>
            <id>stockholm</id>
            <name>University Of Stockholm Repository</name>
            <url>http://maven.it.su.se/it.su.se/maven2</url>
        </repository>
        #if ($ajaxLibrary.equals("icefaces"))
            <repository>
                <id>jboss</id>
                <name>JBoss Repository</name>
                <url>http://repository.jboss.com/maven2</url>
            </repository>
        #end
    #end
        <repository>
            <id>Codehaus Snapshots</id>
            <url>http://snapshots.repository.codehaus.org/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>andromda</id>
            <name>AndroMDA Repository</name>
            <url>http://team.andromda.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
            <id>Codehaus Snapshots</id>
            <url>http://snapshots.repository.codehaus.org/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
    <prerequisites>
        <maven>2.0.10</maven>
    </prerequisites>
#if ($distributionManagementRepositoryUrl.length() > 0 || $distributionManagementSnapshotRepositoryUrl.length() > 0)
    <distributionManagement>
    #if ($distributionManagementRepositoryUrl.length() > 0)
        <repository>
            <id>$distributionManagementRepositoryId</id>
            <url>$distributionManagementRepositoryUrl</url>
            <uniqueVersion>true</uniqueVersion>
        </repository>
    #end
    #if ($distributionManagementSnapshotRepositoryUrl.length() > 0)
        <snapshotRepository>
            <id>$distributionManagementSnapshotRepositoryId</id>
            <url>$distributionManagementSnapshotRepositoryUrl</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    #end
    </distributionManagement>
#end
    <!-- Comment to disable project reporting using default maven plugins -->
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <minmemory>128m</minmemory>
                    <maxmemory>512</maxmemory>
                    <sourcepath>${basedir}/src/java;${basedir}/target/src</sourcepath>
                    <links>
                        <link>http://java.sun.com/javase/6/docs/api/</link>
                        <link>http://java.sun.com/j2ee/1.4/docs/api/</link>
                    </links>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.4.3</version>
            </plugin>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <targetJdk>1.5</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>2.0-beta-2</version>
            </plugin>
            <plugin>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.3</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                            <report>jira-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@deprecated</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <!-- Uncomment after configuring SCM connection>
                  <plugin>
                  <artifactId>maven-changelog-plugin</artifactId>
                  <reportSets>
                  <reportSet>
                  <id>All Reports</id>
                  <configuration>
                  <type>range</type>
                  <range>90</range>
                  </configuration>
                  <reports>
                  <report>changelog</report>
                  <report>file-activity</report>
                  <report>dev-activity</report>
                  </reports>
                  </reportSet>
                  </reportSets>
              </plugin-->
            <plugin>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.3</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-docck-plugin</artifactId>
                <!--executions>
                    <execution>
                    <goals>
                    <goal>check</goal>
                    </goals>
                    </execution>
                </executions-->
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>2.2.2</version>
                <inherited>true</inherited>
                <configuration>
                    <minSeverity>info</minSeverity>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javancss-maven-plugin</artifactId>
                <version>2.0-beta-2</version>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dashboard-maven-plugin</artifactId>
                <version>1.0.0-beta-1</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.0.1</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <effort>Default</effort>
                    <threshold>Normal</threshold>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-doap-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <doapOptions>
                        <programmingLanguage>java</programmingLanguage>
                        <category>build-management</category>
                    </doapOptions>
                    <asfExtOptions>
                        <included>false</included>
                    </asfExtOptions>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
