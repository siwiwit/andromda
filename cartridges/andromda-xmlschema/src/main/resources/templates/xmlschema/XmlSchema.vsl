<?xml version="1.0" encoding="$xmlEncoding"?>
<!--
    Attention: Generated code! Do not modify by hand!
    Generated by: XmlSchema.vsl in andromda-xmlschema-cartridge.
  -->
<xs:schema
    targetNamespace="$namespace"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:impl="$namespace"
    elementFormDefault="qualified">
#foreach ($type in $types)
#set ($typeName = "${type.name}Type")
    <xs:element name="${stringUtils.uncapitalize($type.name)}" type="impl:${typeName}"/>
#if ($type.enumeration)
#foreach ( $attribute in $type.attributes )
#set ($enumType = $attribute.type.fullyQualifiedName)
#end
    <xs:simpleType name="$typeName">
        <xs:restriction base="xs:${enumType}">
#foreach ( $attribute in $type.attributes )
            <xs:enumeration value="${attribute.defaultValue.replaceAll('"', '')}"/>
#end
         </xs:restriction>
    </xs:simpleType>
#else
    <xs:complexType name="$typeName">
#if ($type.generalization)
    <xs:complexContent>
    <xs:extension base="${type.generalization.name}Type">
#end
        <xs:sequence>
#foreach ($associationEnd in $type.associationEnds)
#set ($otherEnd = $associationEnd.otherEnd)
#if ($otherEnd.navigable)
            <xs:element ref="impl:${stringUtils.uncapitalize($otherEnd.type.name)}" minOccurs="$otherEnd.minOccurs" maxOccurs="$otherEnd.maxOccurs"/>
#end
#end
#foreach ($attribute in $type.attributes)
#if (!$attribute.xsdAttribute)
            <xs:element name="${attribute.name}" type="xs:${attribute.type.fullyQualifiedName}" minOccurs="$attribute.minOccurs" maxOccurs="$attribute.maxOccurs"/>
#end
#end
        </xs:sequence>
#foreach  ($attribute in $type.attributes)
#if ($attribute.xsdAttribute)
        <xs:attribute name="${attribute.name}"#if($attribute.required) use="required" #end type="xs:${attribute.type.fullyQualifiedName}"/>
#end
#end
#if ($type.generalization)
    </xs:extension>
    </xs:complexContent>
#end
    </xs:complexType>
#end
#end
</xs:schema>