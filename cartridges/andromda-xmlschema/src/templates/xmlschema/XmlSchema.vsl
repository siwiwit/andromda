<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Attention: Generated code! Do not modify by hand!
    Generated by: XmlSchema.vsl in andromda-xmlschema-cartridge.
  -->
<xsd:schema 
    targetNamespace="$namespace"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns:impl="$namespace"
    elementFormDefault="qualified">
#foreach ($type in $types)
#set ($typeName = "${type.name}Type")
    <xsd:element name="${stringUtils.uncapitalize($type.name)}" type="impl:${typeName}"/>
#if ($type.enumeration)
#foreach ( $attribute in $type.attributes ) 
#set ($enumType = $attribute.type.fullyQualifiedName)
#end
    <xsd:simpleType name="$typeName">
        <xsd:restriction base="xsd:${enumType}">
#foreach ( $attribute in $type.attributes ) 
            <xsd:enumeration value="${attribute.defaultValue.replaceAll('"', '')}"/>
#end                   
         </xsd:restriction>
    </xsd:simpleType>
#else
	<xsd:complexType name="$typeName">
		<xsd:sequence>
#foreach ($associationEnd in $type.associationEnds) 
#set ($otherEnd = $associationEnd.otherEnd)
#if ($otherEnd.navigable)
			<xsd:element ref="impl:${stringUtils.uncapitalize($otherEnd.type.name)}" minOccurs="$otherEnd.minOccurs" maxOccurs="$otherEnd.maxOccurs"/>
#end
#end
#foreach ($attribute in $type.attributes) 
#if (!$attribute.xsdAttribute)
			<xsd:element name="${attribute.name}" type="xsd:${attribute.type.fullyQualifiedName}" minOccurs="$attribute.minOccurs" maxOccurs="$attribute.maxOccurs"/>
#end
#end
		</xsd:sequence>
#foreach  ($attribute in $type.attributes)
#if ($attribute.xsdAttribute)
		<xsd:attribute name="${attribute.name}"#if($attribute.required) use="required" #end type="xsd:${attribute.type.fullyQualifiedName}"/>
#end
#end
	</xsd:complexType>
#end
#end
</xsd:schema>     
