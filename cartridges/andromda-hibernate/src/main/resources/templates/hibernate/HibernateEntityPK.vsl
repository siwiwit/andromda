#set ($generatedFile = "${entity.packagePath}/${entity.identifierTypeName}.java")
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntityPK.vsl in andromda-hibernate-cartridge.
//
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end

/**
 * Primary key class for ${entity.entityName}
 */
public class $entity.identifierTypeName implements java.io.Serializable {

    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = ${entity.serialVersionUID}L;

        public ${entity.identifierTypeName}()
        {
        }

        public ${entity.identifierTypeName}(## no newline
#set ($comma = "")
#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
${comma}${associationEnd.otherEnd.type.fullyQualifiedEntityImplementationName} ${associationEnd.otherEnd.name}## no newline
#set ($comma = ", ")
#end
#end
#foreach ( $identifier in $entity.identifiers )
${comma}${identifier.type.fullyQualifiedName} ${identifier.name}## no newline
#set ($comma = ", ")
#end
)
        {
#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
            this.${associationEnd.otherEnd.name} = ${associationEnd.otherEnd.name}; 
#end
#end
#foreach ( $identifier in $entity.identifiers )
            this.${identifier.name} = ${identifier.name};
#end
        }

#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
    private $associationEnd.otherEnd.type.fullyQualifiedEntityImplementationName $associationEnd.otherEnd.name;

    public $associationEnd.otherEnd.type.fullyQualifiedEntityImplementationName ${associationEnd.otherEnd.getterName}()
    {
        return this.${associationEnd.otherEnd.name};
    }

    public void ${associationEnd.otherEnd.setterName}(${associationEnd.otherEnd.type.fullyQualifiedEntityImplementationName} $associationEnd.otherEnd.name)
    {
        this.${associationEnd.otherEnd.name} = $associationEnd.otherEnd.name;
    }

#end
#end
#foreach ( $identifier in $entity.identifiers )
#set ($typeName = $identifier.type.fullyQualifiedName)
    private $typeName $identifier.name;

    /**
$identifier.getDocumentation("     * ")
     */
    public $typeName ${identifier.getterName}()
    {
        return this.${identifier.name};
    }

    public void ${identifier.setterName}(${typeName} $identifier.name)
    {
        this.${identifier.name} = $identifier.name;
    }

#end
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof $entity.identifierTypeName))
        {
            return false;
        }
        final $entity.identifierTypeName that = ($entity.identifierTypeName)object;
        return new org.apache.commons.lang.builder.EqualsBuilder()
#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
            .append(this.${associationEnd.otherEnd.getterName}(),that.${associationEnd.otherEnd.getterName}())
#end
#end
#foreach ( $identifier in $entity.identifiers )
            .append(this.${identifier.getterName}(), that.${identifier.getterName}())
#end
            .isEquals();
    }

    public int hashCode()
    {
        return new org.apache.commons.lang.builder.HashCodeBuilder()
#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
            .append(${associationEnd.otherEnd.getterName}())
#end
#end
#foreach ( $identifier in $entity.identifiers )
            .append(${identifier.getterName}())
#end
            .toHashCode();
    }
}