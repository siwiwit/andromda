/**
 * This class is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package $class.packageName;

#set ($superclass = $class.generalization)
/**
 * @hibernate.subclass
 *    discriminator-value="${class.name}Impl"
 */
#if ($class.abstract)
public abstract class ${class.name}Impl
#else
public class ${class.name}Impl
#end
    extends ${class.name}
{
    // concrete business methods that were declared
    // abstract in class ${class.name} ...

#foreach ( $op in $class.operations)
#set ($msig = $op.signature)
#set ($returntype = $op.returnType.fullyQualifiedName)
#if (!$op.hasStereotype("FinderMethod"))
#if ($op.hasException())
#set ($throws = " throws $op.exceptionList")
#else
#set ($throws = "")
#end
#if ($op.abstract)
    $op.visibility abstract $returntype ${msig}$throws;

#else
    $op.visibility $returntype ${msig}$throws
    {
        // TODO: put your implementation here.
#if ("void" != $returntype)

        // Dummy return value, just that the file compiles
#if (!$returntype.primitive)
        return null;
#elseif ("boolean" == $returntype)
        return false;
#else
        return ($returntype)0;
#end
#end
    }

#end
#end
#end
}
