package $service.packageName;

/**
 * @see $service.fullyQualifiedName
 */
public class ${service.name}BeanImpl
    extends ${service.name}Bean
    implements javax.ejb.SessionBean
{
    // concrete business methods that were declared
    // abstract in class ${service.name}Bean ...

#foreach ( $operation in $service.operations)
##
##  Add one additional parameter to the list of parameters:
##  a reference to the open Hibernate session.
##
#set ($parameterList = $operation.typedArgumentList)
#if ($parameterList.length() == 0)
#set ($parameters = "net.sf.hibernate.Session session")
#else
#set ($parameters = "net.sf.hibernate.Session session, ${parameterList}")
#end
#set ($returnType = $operation.returnType.fullyQualifiedName)
#if ($operation.exceptionsPresent)
    protected $returnType handle${stringUtils.capitalize(${operation.name})} ($parameters)
        throws $operation.exceptionList
    {
#else
    protected $returnType handle${stringUtils.capitalize(${operation.name})} ($parameters)
    {
#end
        // TODO: put your implementation here.
#if ($operation.returnTypePresent)
        // Dummy return value, just that the file compiles
#if (!$operation.returnType.primitive)
        return null;
#elseif ("boolean" == $returnType)
        return false;
#else
        return ($returnType)0;
#end
#end
    }

#end
    // ---------- the usual session bean stuff... ------------

    public void setSessionContext(javax.ejb.SessionContext ctx)
    {
        super.setSessionContext (ctx);
    }

    public void ejbRemove()
    {
    }

    public void ejbPassivate()
    {
    }

    public void ejbActivate()
    {
    }
}
