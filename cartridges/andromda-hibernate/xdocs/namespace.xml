<?xml version="1.0" encoding="UTF-8"?>

<document>
    <properties>
        <title>Hibernate Cartridge Namespace</title>
    </properties>
    <body>
        <section name="Hibernate Cartridge Namespace Properties">
            <p>
                In addition to the applicable
                <a href="../andromda-metafacades-uml/namespace.html">UML Metafacade</a> namespace
                properties which may also be used, this page describes
                namespace properties specific to this cartridge only.
            </p>
            <table>
                <tr>
                      <th>Property</th>
                      <th>Description</th>
                      <th>Required</th>
                </tr>
                <tr>
                    <td>
                        serviceLocatorName
                    </td>
                    <td>
                        The name to give to the generated service locator class.
                    </td>
                    <td>
                        No, default is <code>ServiceLocator</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        securityRealm
                    </td>
                    <td>
                        The name of the security realm (i.e. animal-quiz,
                        other, etc).  <strong>NOTE:</strong>This enables EJB security if specified.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                          entities
                    </td>
                    <td>
                          The directory to which hibernate entities are generated.
                    </td>
                    <td>
                          Yes (unless
                        <code>ignore</code> is specified for this property)
                    </td>
                </tr>
                <tr>
                    <td>
                          entity-impls
                    </td>
                    <td>
                          The location to which hibernate entity implementation files
                          are generated.
                    </td>
                    <td>
                          Yes (unless
                        <code>ignore</code> is specified for this property)
                    </td>
                </tr>
                <tr>
                    <td>
                          session-beans
                    </td>
                    <td>
                          The directory to which Session EJB service wrappers are
                          generated.  If this property is not specified, Session EJB service
                          wrappers will not be generated.
                    </td>
                    <td>
                          No
                    </td>
                </tr>
                <tr>
                    <td>
                          session-impls
                    </td>
                    <td>
                          The directory to which Session Bean implementation files are generated.
                    </td>
                    <td>
                          Yes (unless
                        <code>ignore</code> is specified for this property)
                    </td>
                </tr>
                <tr>
                    <td>
                        configuration
                    </td>
                    <td>
                        The directory to which the hiberante.cfg.xml file is generated.
                    </td>
                    <td>
                        No, unless you want the hibernate.cfg.xml generated.
                    </td>
                </tr>
                <tr>
                    <a name="ejbJndiNamePrefix"/>
                    <td>
                        ejbJndiNamePrefix
                    </td>
                    <td>
                        The prefix to give to the Session EJB JNDI names (this allows
                        the same Session EJB to be deployed multiple times in the same
                        container)
                    </td>
                    <td>
                        No, default is
                        <code>no prefix</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                          defaultHibernateGeneratorClass
                    </td>
                    <td>
                          The default class to use for Hibernate ID generation (can be overridden
                          on a per entity basis with the
                          <a href="modeling.html#andromda.hibernate.generator.class">@andromda.hibernate.generator.class</a>
                          tagged value).
                    </td>
                    <td>
                          No, default is
                        <code>native</code>
                    </td>
                </tr>
                <tr>
                    <a name="hibernateInheritanceStrategy"/>
                    <td>
                          hibernateInheritanceStrategy
                    </td>
                    <td>
                          Defines the hibernate inheritance strategy (unless
                          overridden on an entity level by the
                          <a href="#modeling.html#andromda_hibernate_inheritance">@andromda.hibernate.inheritance</a>
                          tagged value, can be the following possible values:
                        <ul>
                            <li>class - table per hierarchy.</li>
                            <li>subclass - table per class in hierarchy.</li>
                            <li>concrete - Table per class.</li>
                            <li>
                                interface - Root class is defined as an interface and the
                                attributes remapped to the subclasses.  This is useful in
                                the concrete case because it has limitations in the associations.
                            </li>
                        </ul>
                    </td>
                    <td>
                        No, default is <code>subclass</code>.
                    </td>
                </tr>
                <tr>
                <a name="versionProperty"/>
                    <td>
                          versionProperty
                    </td>
                    <td>
                          The name of the property/attribute to automatically add to entities
                          for versioning purposes. If this value is not specified or it contains
                          only whitespace characters it will be ignored and the property will
                          not be generated. This value can be overwridden with the 
                          <a href="modeling.html#andromda.hibernate.version">@andromda.hibernate.version</a>tagged value.
                    </td>
                    <td>
                          No
                    </td>
                </tr>
                <tr>
                    <td>
                        sequenceIdentifierSuffix
                    </td>
                    <td>
                        The suffix to use for identifier sequences.
                    </td>
                    <td>
                        No, the default is <code>_SEQ</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        entityNamePattern
                    </td>
                    <td>
                        The pattern to use when constructing an entity name.
                        <em>{0}</em> is used to represent the entity name
                        in the model, so if you specified a value of
                        <code>{0}Entity</code> all the entities generated
                        would have a suffix of "Entity".
                    </td>
                    <td>
                        No, default is <code>{0}</code>.
                    </td>
                </tr>
                <tr>
                    <td>entityImplementationNamePattern</td>
                    <td>
                        The pattern to use when constructing the entity implementation
                        name.
                    </td>
                    <td>
                        No, default is <code>{0}Impl</code> where <em>{0}</em>
                        is the name of the modeled entity.
                    </td>
                </tr>
                <tr>
                    <td>embeddedValueImplementationNamePattern</td>
                    <td>
                        The pattern to use when constructing an embedded value implementation
                        name.                        
                    </td>
                    <td>
                        No, default is <code>{0}Impl</code> where <em>{0}</em>
                        is the name of the modeled embedded value.                   
                    </td>
                </tr>
                <tr>
                    <td>
                          enumerationNamePattern
                    </td>
                    <td>
                          The pattern to use when constructing hibernate enumerations.
                    </td>
                    <td>
                          No, default is <em>{0}</em>Enum
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceOperationTransactionType
                    </td>
                    <td>
                        The default value to use for service operations transaction types.
                        <ul>
                            Permitted values are:
                            <li>NotSupported</li>
                            <li>Supports</li>
                            <li>Required</li>
                            <li>RequiresNew</li>
                            <li>Mandatory</li>
                            <li>Never</li>
                        </ul>
                        <strong>NOTE:</strong> Can be overridden on a per entity basis with the
                        <a href="modeling.html#andromda.ejb.transaction.type">@andromda.ejb.transaction.type</a>
                        tagged value.
                    </td>
                    <td>
                        No, default is <code>Required</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTypeMappingsUri
                    </td>
                    <td>
                        URI specifying the specific mappings from model types to hibernate types.
                        (i.e. <code>file:${basedir}/HibernateTypeMappings.xml</code>). This
                        is not necessary but useful for defining hibernate user types (when
                        hibernate doesn't support a specific type in the manner needed
                        for your application).
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <a name="compositionDefinesEagerLoading"/>
                    <td>
                        compositionDefinesEagerLoading
                    </td>
                    <td>
                        Allows you to turn on/off whether or not composite associations
                        will define eager loading.
                    </td>
                    <td>
                        No, default is <code>true</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        customTypesPackage
                    </td>
                    <td>
                        The package to which custom types contained
                        within the cartridge should be output (these are classes that
                        are not modeled).
                    </td>
                    <td>
                        No, default is <code>org.andromda.persistence.hibernate</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        userTypesPackage
                    </td>
                    <td>
                        The package to which Hibernate user types are placed.  Be careful
                        when changing this package, as you'll need to update the default
                        Hibernate mappings file as well to use your new package.
                    </td>
                    <td>
                        No, default is <code>org.andromda.persistence.hibernate.usertypes</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateDefaultCascade
                    </td>
                    <td>
                        The value of the <code>default-cascade</code>
                        attribute of the hibernate entity XML mapping.
                    </td>
                    <td>
                        No, default is <code>none</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        driver
                    </td>
                    <td>
                        JDBC Driver to make database connection
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        username
                    </td>
                    <td>
                        The database user login name.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        password
                    </td>
                    <td>
                        The database user password.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        dataSource
                    </td>
                    <td>
                        JNDI name of data source to use. (would be used instead
                        of the connection properties, driver, username, password, etc).
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        connectionUrl
                    </td>
                    <td>
                        URL for the JDBC Driver to make the connection to the database.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        generateEntityEqualsAndHashCode
                    </td>
                    <td>
                        Indicates whether or not a default equals and hashCode
                        implementation should be generated.
                    </td>
                    <td>
                        No, <code>true</code> is the default.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernatePoolSize
                    </td>
                    <td>
                        Hibernate connection pool size.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTransactionManagerStrategy
                    </td>
                    <td>
                        Strategy for obtaining the JTA TransactionManager
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateUserTransactionName
                    </td>
                    <td>
                        The JNDI name of the JTA UserTransaction object
                    </td>
                    <td>
                        No, default is <code>UserTransaction</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTransactionFactoryClass
                    </td>
                    <td>
                        The name of the hibernate transaction factory class to use.
                    </td>
                    <td>
                        No, default is <code>net.sf.hibernate.transaction.JTATransactionFactory</code> for Hibernate2 and <code>org.hibernate.transaction.JTATransactionFactory</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateTransactionManagerLookup
                    </td>
                    <td>
                        The fully qualified class name of the Hibernate TransactionFactory implementation
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateUseOuterJoin
                    </td>
                    <td>
                        Whether or not to use outer join
                    </td>
                    <td>
                         No, defaults to <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateShowSql
                    </td>
                    <td>
                        Whether or not to log SQL statements
                    </td>
                    <td>
                        No, defaults to <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateJndiName
                    </td>
                    <td>
                        JNDI name bound to the SessionFactory.
                    </td>
                    <td>
                        No, default is <code>java:/hibernate/SessionFactory</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateDialect
                    </td>
                    <td>
                        SQL dialect of the database
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateDefaultSchema
                    </td>
                    <td>
                        Qualify unqualified tablenames with the given
                        schema/tablespace in generated SQL.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateJdbcFetchSize
                    </td>
                    <td>
                        A non-zero value determines the JDBC fetch size
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateMaxFetchDepth
                    </td>
                    <td>
                        Sets a maximum "depth" for the outer join fetch tree.
                        eg. recommended values between 0 and 3
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateJdbcBatchSize
                    </td>
                    <td>
                        A nonzero value enables use of JDBC2 batch updates by Hibernate.
                        ex: recommended values between 5 and 30
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateJdbcUseScrollableResultSet
                    </td>
                    <td>
                        Whether or not to enable use of JDBC2 scrollable resultsets by Hibernate.
                        This property is only necessary when using user supplied connections.
                        Hibernate uses connection metadata otherwise.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateJdbcUseStreamsForBinary
                    </td>
                    <td>
                        Whether or not to use streams when writing / reading binary or serializable types to/from JDBC
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateHbm2DDLAuto
                    </td>
                    <td>
                        Automatically export schema DDL to the database when the SessionFactory
                        is created. With create-drop, the database schema will be dropped when
                        the SessionFactory is closed explicitely. Permitted values are:
                        <ol>
                            <li>update</li>
                            <li>create</li>
                            <li>create-drop</li>
                        </ol>
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateQuerySubstitutions
                    </td>
                    <td>
                        Allows you to define new Hibernate query tokens. For example:
                        giving this a value of <em>true=1, false=0</em>
                        would cause the tokens true and false to be translated to integer
                        literals in the generated SQL.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateQueryUseNamedParameters
                    </td>
                    <td>
                        Whether or not named parameters (i.e. ':someParameter') or unnamed
                        (i.e. '?') parameters should be used in the HQL queries embedded
                        within the model.
                        <strong>NOTE:</strong> Does not apply to queries written in OCL.
                    </td>
                    <td>
                        No, default is <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateAssociationEndOuterJoin
                    </td>
                    <td>
                         Defines the default outer join value for many to one and
                         one to one association ends. Possible values are:
                        <ul>
                            <li>auto</li>
                            <li>true</li>
                            <li>false</li>
                         </ul>
                            For hibernate 3 the above values will be translated to
                         <ul>
                             <li>join</li>
                             <li>select</li>
                         </ul>
                    </td>
                    <td>
                        No, default is <code>auto</code>.
                    </td>
                </tr>
                <tr>
                    <a name="ejbViewType"/>
                    <td>
                        ejbViewType
                    </td>
                    <td>
                        If EJBs are being used, this specifies the default view type
                        for the EJB interfaces.  Can be either <em>local</em>
                        or <code>remote</code>.
                    </td>
                    <td>
                        No, default is <code>local</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        xmlEncoding
                    </td>
                    <td>
                        Encoding for xml's generated files.
                    </td>
                    <td>
                        No, default is <code>UTF-8</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateProxy
                    </td>
                    <td>
                        Defines if proxies will be enabled for Hibernate Entities
                    </td>
                    <td>
                        No, default is <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        hibernateQueryUseSpecializedSetters
                    </td>
                    <td>
                        Defines if the finder setters method for parameters will use "setParameter" for all parameters (by default), 
                        or a specialized setter (setDate,setBoolean...) in case the parameter type has it's own setter method.
                    </td>
                    <td>
                        No, default is <code>false</code>.
                    </td>
                </tr>
                <tr>
                    <a name="hibernateAssociationCollectionType"/>
                    <td>
                        hibernateAssociationCollectionType
                    </td>
                    <td>
                         Used to define the default mapping for hibernate collections.
                    </td>
                    <td>
                        No, default is <code>set</code>.
                    </td>
                </tr>
                <tr>
                    <a name="hibernateAssociationSortType"/>
                    <td>
                        hibernateAssociationSortType
                    </td>
                    <td>
                         Used to define how elements will be sorted within the collection defined by the association. (Only available for maps and sets).
                    </td>
                    <td>
                        No, default is <code>unsorted</code>.
                    </td>
                </tr>
                <tr>
                    <a name="specificCollectionInterfaces"/>
                    <td>
                        specificCollectionInterfaces
                    </td>
                    <td>
                         A flag indicating whether or not specific collection interfaces will be used
                         in association end mutators and accessors (i.e. java.util.Set, java.util.Liset, etc).
                         If this is set to false, then the value of the <a href="#defaultCollectionInterface">defaultCollectionInterface</a>
                         property will used to provide the collection interface.
                    </td>
                    <td>
                        No, default is <code>true</code>.
                    </td>
                </tr>
                <tr>
                    <a name="defaultCollectionInterface"/>
                    <td>
                        defaultCollectionInterface
                    </td>
                    <td>
                         The default collection interface, this is the interface used with association end 
                         accessors and mutators if the <a href="#specificCollectionInterfaces">specificCollectionInterfaces</a>
                         flag is set to <code>false</code>.
                    </td>
                    <td>
                        No, default is <code>java.util.Collection</code>.
                    </td>
                </tr>
                <tr>
                    <a name="associationEndCollectionIndexName"/>
                    <td>
                        associationEndCollectionIndexName
                    </td>
                    <td>
                        The default association end collection index name (this can be overridden by the
                        <a href="modeling.html#andromda_hibernate_collection_index">@andromda.hibernate.collection.index</a>.
                    </td>
                    <td>
                        No, by default it isn't set.
                    </td>
                </tr>
                <tr>
                    <a name="associationEndCollectionIndexType"/>
                    <td>
                        associationEndCollectionIndexType
                    </td>
                    <td>
                        The default association end collection index type (this can be overridden by the
                        <a href="modeling.html#andromda_hibernate_collection_index_type">@andromda.hibernate.collection.index.type</a>
                        (this is applicable when the collection is a map).
                    </td>
                    <td>
                        No, by default it isn't set.
                    </td>
                </tr>
            </table>
            <subsection name="Collection type implementations">
                <table>
                    <tr>
                        <th>Property</th>
                        <th>Description</th>
                        <th>Required</th>
                    </tr>
                    <tr>
                        <td>
                            listTypeImplementation
                        </td>
                        <td>
                            The implementation type to use for association ends
                            that are modeled as lists.
                        </td>
                        <td>
                            No, default is <code>java.util.ArrayList</code>.
                        </td>
                     </tr>
                    <tr>
                        <td>
                            setTypeImplementation
                        </td>
                        <td>
                            The implementation type to use for association ends
                            that are modeled as sets.
                        </td>
                        <td>
                            No, default is <code>java.util.HashSet</code>.
                        </td>
                     </tr>
                    <tr>
                        <td>
                            mapTypeImplementation
                        </td>
                        <td>
                            The implementation type to use for association ends
                            that are modeled as maps.
                        </td>
                        <td>
                            No, default is <code>java.util.HashMap</code>.
                        </td>
                     </tr>
                    <tr>
                        <td>
                            bagTypeImplementation
                        </td>
                        <td>
                            The implementation type to use for association ends
                            that are modeled as bags.
                        </td>
                        <td>
                            No, default is <code>java.util.HashMap</code>.
                        </td>
                     </tr>
                </table>
            </subsection>
            <subsection name="Hibernate 3 specific settings">
                <table>
                    <tr>
                        <th>Property</th>
                        <th>Description</th>
                        <th>Required</th>
                    </tr>
                    <tr>
                        <td>
                            hibernateQueryFactory
                        </td>
                        <td>
                            Hibernate3 comes with a brand-new, ANTLR-based HQL/SQL query translator. However, it is still buggy and so in mean time use the Hibernate 2.1 query parser which is still available. 
                            Possible values are:
                             <ul>
                                <li>org.hibernate.hql.ast.ASTQueryTranslatorFactory (for the new query parser)</li>
                                <li>org.hibernate.hql.classic.ClassicQueryTranslatorFactory (for the old parser)</li>
                             </ul>
                        </td>
                        <td>
                            No, default is <code>org.hibernate.hql.classic.ClassicQueryTranslatorFactory</code>.
                        </td>
                    </tr>
                 </table>
                </subsection>
                <subsection name="Hibernate Second Level Cache Values">
                <a name="SecondLevelCache"/>
                 <table>
                        <tr>
                          <th>Property</th>
                          <th>Description</th>
                          <th>Required?</th>
                        </tr>
                        <tr>
                            <td>
                                hibernateEnableCache
                            </td>
                            <td>
                                Enable/disable hibernate's second level cache features for the cartridge.
                            </td>
                            <td>
                                No, default is <code>false</code>.
                            </td>
                       </tr>
                        <tr>
                            <td>
                                hibernateEnableAssociationsCache
                            </td>
                            <td>
                                Enable/disable Hibernate's second level cache feature for entity associations.
                                Please <strong>NOTE</strong> that hibernateEnableCache should also be enabled when
                                specifying this property.
                            </td>
                            <td>
                                No, default is <code>false</code>.
                            </td>
                       </tr>
                       <tr>
                            <td>
                                hibernateEhCacheDiskStore
                            </td>
                            <td>
                                Defines the path to the directory where cache files will be created
                            </td>
                            <td>
                                No, default is <code>java.io.tmpdir</code>.
                            </td>
                       </tr>
                       <tr>
                        <td>
                            hibernateCacheProvider
                        </td>
                        <td>
                             Defines Hibernate Cache Provider implementation class.
                             Possible values for Hibernate2 are:
                             <ul>
                                <li>net.sf.hibernate.cache.EhCacheProvider</li>
                                <li>net.sf.hibernate.cache.HashtableCacheProvider</li>
                                <li>net.sf.hibernate.cache.JCSCacheProvider</li>
                                <li>net.sf.hibernate.cache.SwarmCacheProvider</li>
                                <li>net.sf.hibernate.cache.TreeCacheProvider</li>
                                <li>net.sf.hibernate.cache.OSCacheProvider</li>
                             </ul>
                             Possible values for Hibernate3 are:
                             <ul>
                                <li>org.hibernate.cache.EhCacheProvider</li>
                                <li>org.hibernate.cache.HashtableCacheProvider</li>
                                <li>org.hibernate.cache.JCSCacheProvider</li>
                                <li>org.hibernate.cache.SwarmCacheProvider</li>
                                <li>org.hibernate.cache.TreeCacheProvider</li>
                                <li>org.hibernate.cache.OSCacheProvider</li>
                             </ul>
                        </td>
                        <td>
                            No, default is <code>net.sf.hibernate.cache.EhCacheProvider</code> for Hibernate2 and <code>org.hibernate.cache.EhCacheProvider</code> for Hibernate3.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateQueryCacheFactory
                        </td>
                        <td>
                             Defines Hibernate Query Cache Factory implementation class. Possible value for Hibernate2 is:
                             <ul>
                                <li>net.sf.hibernate.cache.StandardQueryCacheFactory</li>
                             </ul>
                             Possible value for Hibernate3 is:
                             <ul>
                                <li>org.hibernate.cache.StandardQueryCacheFactory</li>
                             </ul>
                        </td>
                        <td>
                            No, default is <code>net.sf.hibernate.cache.StandardQueryCacheFactory</code> for Hibernate2 and <code>org.hibernate.cache.StandardQueryCacheFactory</code> for Hibernate3.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateUseQueryCache
                        </td>
                        <td>
                             The default query cache usage.
                             Can be overwritten using
                             <a href="modeling.html#@andromda.hibernate.query.useCache">@andromda.hibernate.query.useCache</a>.
                             Possible values are:
                             <ul>
                                <li>true</li>
                                <li>false</li>
                             </ul>
                        </td>
                        <td>
                            No, default is <code>false</code>.
                        </td>
                    </tr>
                     <tr>
                        <td>
                            hibernateEntityCache
                        </td>
                        <td>
                             Defines the default strategy for Entities caching. Can be overwritten using the corresponding
                             tagged value. Possible values are:
                             <ul>
                                    <li>read-write</li>
                                    <li>nonstrict-read-write</li>
                                    <li>read-only</li>
                                </ul>
                        </td>
                        <td>
                            No, default is <code>read-write</code>.
                        </td>
                    </tr>
                    <tr>
                    <a name="hibernateEntityDynamicInsert"/>
                        <td>
                            hibernateEntityDynamicInsert
                        </td>
                        <td>
                             Hibernate Entities mapping property. Defines the default value dynamic-insert property on entities.
                        </td>
                        <td>
                            No, default is <code>false</code>.
                        </td>
                    </tr>
                    <tr>
                    <a name="hibernateEntityDynamicUpdate"/>
                        <td>
                            hibernateEntityDynamicUpdate
                        </td>
                        <td>
                             Hibernate Entities mapping property. Defines the default value dynamic-update property on entities.
                        </td>
                        <td>
                            No, default is <code>false</code>.
                        </td>
                    </tr>
                     <tr>
                        <td>
                            hibernateAssociationCache
                        </td>
                        <td>
                             Defines the default strategy for associations between Entities caching. Can be overwrited with the corresponding tagged value. Possible values are:
                             <ul>
                                    <li>read-write</li>
                                    <li>nonstrict-read-write</li>
                                    <li>read-only</li>
                                </ul>
                        </td>
                        <td>
                            No, default is <code>read-write</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ehCacheMaxElementsInMemory
                        </td>
                        <td>
                             EhCache property. Defines the default maximum number of objects that will be created in memory.
                        </td>
                        <td>
                            No, default is <code>10000</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ehCacheEternal
                        </td>
                        <td>
                             EhCache property. Defines a default value for the eternal parameter.
                        </td>
                        <td>
                            No, default is <code>false</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ehCacheTimeToIdleSeconds
                        </td>
                        <td>
                             EhCache property. Defines the default time to idle for an element before it expires.
                        </td>
                        <td>
                            No, default is <code>120</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ehCacheTimeToLiveSeconds
                        </td>
                        <td>
                             EhCache property. Defines the default time to live for an element before it expires.
                        </td>
                        <td>
                            No, default is <code>120</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ehCacheOverflowToDisk
                        </td>
                        <td>
                             EhCache property. Defines the default value for the overflow to disk property.
                        </td>
                        <td>
                            No, default is <code>true</code>.
                        </td>
                    </tr>
                </table>
            </subsection>
        </section>
    </body>
</document>