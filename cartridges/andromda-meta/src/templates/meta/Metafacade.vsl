//
// Attention: generated code (by Metafacade.vsl) - do not modify!
//
package $metafacade.packageName;

/**
$metafacade.getDocumentation(" * ")
 *
 * Metafacade interface to be used by AndroMDA cartridges.
 */
public interface $metafacade.name
#if (!$metafacade.generalizations.empty)
    extends $metafacade.generalizationList
#end
{
#if ($metafacade.generalizations.empty)
    /**
     * Provides any required initialization of the metafacade.
     */
    void initialize();

    /**
     * Gets the metafacade that acts as the <code>owner</code> of this metafacade.
     * (for example: an operation is an owner of its parameters, etc). This is used
     * by AndroMDA's validation framework to provide more context as to where the
     * error has occurred.
     */
    public Object getValidationOwner();

    /**
     * Gets the name of the metafacade used within validation messages.  This provides
     * the full name of the metafacade.
     */
    public String getValidationName();

    /**
     * Performs validation of any invariants found on this model element
     * and stores the messages within the <code>validationMessages</code>
     * collection.
     *
     * @param validationMessages the collection of messages to which additional
     *        validation messages will be added if invariants are broken.
     */
    void validateInvariants(java.util.Collection validationMessages);
#end
#foreach ($method in $metafacade.methodDataForPSM)

   /**
$method.documentation
    */
    ${method.buildMethodDeclaration(true)};
#end

}