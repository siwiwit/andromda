maven.xdoc.includeProjectDocumentation=yes

# -----------------------------------------------------------------
# Cartridge Metafacade Model Properties
# -----------------------------------------------------------------

metafacade.model.file=${maven.src.dir}/uml/MetaMetafacadeModel.xml.zip
metafacade.model.uri=jar:file:${metafacade.model.file}!/MetaMetafacadeModel.xml
metafacade.modelValidation=true
metafacade.cartridgeFilter=meta

# specify that we don't want to process the package containing the core metafacades
# (since by default it is set to process all of them)
metafacade.modelPackage.0.name=org.andromda.metafacades.uml
metafacade.modelPackage.0.shouldProcess=false

# specify the module search path for the base metafacade model
maven.andromda.repository.moduleSearchPath.location.0=${basedir}/../../metafacades/uml/common/src/uml

# Set maven plugin to run in bootstrap mode
maven.andromda.bootstrap.mode=true

# -----------------------------------------------------------------
# Cartridge Test Properties
# -----------------------------------------------------------------

# define the test model
test.model.file=${maven.src.dir}/test/uml/MetaCartridgeTestModel.xml.zip

andromda.cartridge.model.uri=jar:file:${test.model.file}!/MetaCartridgeTestModel.xml

test.output.dir=${andromda.cartridge.test.actual.dir}

# Define the properties of this cartridge to test
andromda.cartridge.test.property.0=languageMappingsUri
andromda.cartridge.test.property.languageMappingsUri=Java
andromda.cartridge.test.property.1=wrapperMappingsUri
andromda.cartridge.test.property.wrapperMappingsUri=JavaWrapper
andromda.cartridge.test.property.2=facades
andromda.cartridge.test.property.facades=${test.output.dir}
andromda.cartridge.test.property.3=facade-logics
andromda.cartridge.test.property.facade-logics=${test.output.dir}
andromda.cartridge.test.property.4=facades-to-impls
andromda.cartridge.test.property.facades-to-impls=${test.output.dir}
andromda.cartridge.test.property.5=facade-logic-impls
andromda.cartridge.test.property.facade-logic-impls=${test.output.dir}