<?xml version="1.0" encoding="UTF-8"?>

<document>
      <properties>
        <title>Spring Cartridge Namespace</title>
      </properties>
      <body>
        <section name="Spring Namespace Properties">
            <p>
                In addition to the applicable
                <a href="../andromda-metafacades-uml/namespace.html">UML Metafacade</a> namespace
                properties which may also be used, this page describes
                namespace properties specific to this cartridge only.
            </p>
              <table>
                <tr>
                    <th>Property</th>
                    <th>Description</th>
                    <th>Required</th>
                </tr>
                <tr>
                    <td>
                        services
                    </td>
                    <td>
                        The location to which all service classes
                        will be generated.
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <td>
                        service-impls
                    </td>
                    <td>
                        The location to which all service implementation classes
                        will be generated.
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <a name="service-locator"/>
                    <td>
                        service-locator
                    </td>
                    <td>
                        The location to which a service locator will be generated.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        daos
                    </td>
                    <td>
                        The location to which Spring DAOs, and any support classes.
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <td>
                        dao-impls
                    </td>
                    <td>
                        The location to which Spring DAO implementation
                        classes will be generated (if there are any classifier scoped business
                        operations modeled on any entity).
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <td>
                        spring-configuration
                    </td>
                    <td>
                        The location to which the Spring applicationContext.xml
                        will be generated.
                    </td>
                    <td>
                        Yes
                    </td>
                </tr>
                <tr>
                    <td>
                        springTypesPackage
                    </td>
                    <td>
                        The package to which the extra non modeled spring types
                        will be generated. (i.e. the service locator, etc).
                    </td>
                    <td>
                        No (unless <a href="#service-locator">service-locator</a>
                        has been defined).  If not specified and <code>service-locator</code>
                        has been defined, it will be generated within <strong>org.andromda.spring</strong>.
                    </td>
                </tr>
                <tr>
                    <td>
                        advice-impls
                    </td>
                    <td>
                        The location to which any advice implementation classes will be generated.  Currently
                        this is useful when using the cartridge's remoting support.
                    </td>
                    <td>
                        No, however it should be enabled when using Spring's remoting support.
                    </td>
                </tr>
                <tr>
                    <td>
                        principalStoreName
                    </td>
                    <td>
                        The name to give the class that stores the <code>java.security.Principal</code>
                        that is made available to the spring POJOs.
                    </td>
                    <td>
                        No, default is <code>PrincipalStore</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceLocatorName
                    </td>
                    <td>
                        The name to give to the generated service locator class.
                    </td>
                    <td>
                        No, default is <code>ServiceLocator</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        clientServiceLocatorName
                    </td>
                    <td>
                        The name to give to the generated client service locator class.
                    </td>
                    <td>
                        No, default is <code>ClientServiceLocator</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        clientServiceLocatorClassloaderSwitching
                    </td>
                    <td>
                        Whether the client service locator should switch classloaders during bean instantiation.
                        This is needed when running in Eclipse.
                    </td>
                    <td>
                        No, default is <code>off</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        clientExceptionHandlingAdviceName
                    </td>
                    <td>
                        The name to give to the one-time generated exception handling advice.
                    </td>
                    <td>
                        No, default is <code>ClientExceptionHandlingAdvice</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        daoNamePattern
                    </td>
                    <td>
                        The pattern to use when constructing the DAO name.
                        <em>{0}</em> is used to represent the entity name
                        in the model, so if you specified a value of
                        <code>{0}Dao</code> all the entities generated
                        would have a suffix of "Dao".
                    </td>
                    <td>
                        No, default is <code>{0}Dao</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        entityNamePattern
                    </td>
                    <td>
                        The pattern to use when constructing an entity name.
                        <em>{0}</em> is used to represent the entity name
                        in the model, so if you specified a value of
                        <code>{0}Entity</code> all the entities generated
                        would have a suffix of "Entity".
                    </td>
                    <td>
                        No, default is <code>{0}</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        daoBaseNamePattern
                    </td>
                    <td>
                        The pattern to use when constructing the base DAO's name.
                        <em>{0}</em> is used to represent the entity name
                        in the model, so if you specified a value of
                        <code>{0}DaoBase</code> all the entities generated
                        would have a suffix of "DaoBase".
                    </td>
                    <td>
                        No, default is <code>{0}DaoBase</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        daoImplementationNamePattern
                    </td>
                    <td>
                        The pattern to use when constructing the DAO's
                        implementation name. <em>{0}</em> is used to represent
                        the entity name in the model, so if you specified a value of
                        <code>{0}DaoImpl</code> all the entities generated
                        would have a suffix of "DaoImpl".
                    </td>
                    <td>
                        No, default is <code>{0}DaoImpl</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        driver
                    </td>
                    <td>
                        JDBC Driver to make database connection
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        username
                    </td>
                    <td>
                        The database user login name.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        password
                    </td>
                    <td>
                        The database user password.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        dataSource
                    </td>
                    <td>
                        JNDI name of data source to use. (would be used instead
                        of the connection properties, driver, username, password, etc).
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        connectionUrl
                    </td>
                    <td>
                        URL for the JDBC Driver to make the connection to the database.
                    </td>
                    <td>
                        No
                    </td>
                </tr>
                <tr>
                    <td>
                        transactionManager
                    </td>
                    <td>
                        The transaction manager implementation used by Spring.
                    </td>
                    <td>
                        No, default is <a href="http://www.springframework.org/docs/api/org/springframework/orm/hibernate/HibernateTransactionManager.html">org.springframework.orm.hibernate.HibernateTransactionManager</a>
                    </td>
                </tr>
                <tr>
                    <td>
                        sessionFactory
                    </td>
                    <td>
                        FactoryBean that creates a local Hibernate SessionFactory instance
                        within Spring.
                    </td>
                    <td>
                        No, default is <a href="http://www.springframework.org/docs/api/org/springframework/orm/hibernate/LocalSessionFactoryBean.html">org.springframework.orm.hibernate.LocalSessionFactoryBean</a>
                    </td>
                </tr>
                <tr>
                    <td>
                        applicationContext
                    </td>
                    <td>
                        The name/path of the application context resource
                        file (i.e. some/path/applicationContext.xml)
                    </td>
                    <td>
                        No, default is <code>applicationContext.xml</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        applicationContextDataSource
                    </td>
                    <td>
                        The name/path of the data source application context file
                        (i.e. some/path/applicationContext-dataSource.xml)
                    </td>
                    <td>
                        No, default is <code>applicationContext-dataSource.xml</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        serverContext
                    </td>
                    <td>
                        The name/path of the application context resource
                        file that contains the remoting exports (i.e. some/path/serverContext.xml)
                    </td>
                    <td>
                        No, default is <code>serverContext.xml</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        clientContext
                    </td>
                    <td>
                        The name/path of the application context resource
                        file that contains the remoting imports (i.e. some/path/clientContext.xml)
                    </td>
                    <td>
                        No, default is <code>clientContext.xml</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        beanRefFactory
                    </td>
                    <td>
                        The name/path of the bean ref factory resource
                        file (i.e. some/path/beanRefFactory.xml)
                    </td>
                    <td>
                        No, default is beanRefFactory.xml
                    </td>
                </tr>
                <tr>
                    <td>
                        beanRefFactoryId
                    </td>
                    <td>
                        The ID for the Spring bean reference factory (used
                        to load the bean factory when using the Session EJB
                        wrappers)
                    </td>
                    <td>
                        No, default is <code>beanRefFactory</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceOperationTransactionType
                    </td>
                    <td>
                        The default transaction type used for service operations (when not
                        wrapping your services with EJBs).
                    </td>
                    <td>
                        No, default is <code>PROPAGATION_REQUIRED</code>.
                        <strong>NOTE:</strong> Can be overridden on a per entity basis with the
                        <a href="modeling.html#@andromda.spring.transaction.type">@andromda.spring.transaction.type</a>
                        tagged value.
                    </td>
                </tr>
                <tr>
                    <td>
                        implementationOperationNamePattern
                    </td>
                    <td>
                        The pattern used to the create the implementation operation name 
                        (i.e. the operations that actually perform the handling of the logic),
                        where <em>{0}</em> represents the operation name
                    </td>
                    <td>
                        No, default is <code>handle{0}</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        defaultServiceExceptions
                    </td>
                    <td>
                        Whether or not to generate a default exception for each service.  This exception
                        will handle unexpected exceptions occuring within the implemented operations.
                    </td>
                    <td>
                        No, default is <code>true</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        defaultServiceExceptionNamePattern
                    </td>
                    <td>
                        The pattern to use when constructing the default service exception name.
                        <strong>NOTE:</strong> This propety is only applicable when defaultServiceExceptions
                        is <code>true</code>.
                    </td>
                    <td>
                        No, default is <code>{0}Exception</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        parameterRequiredCheck
                    </td>
                    <td>
                        Whether or not code for checking if a service or DAO operation parameter
                        is required is generated.  Its sometimes useful to turn this feature
                        off if the tool you're using doesn't support stereotypes on parameters.
                    </td>
                    <td>
                        No, default is <code>true</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        xmlEncoding
                    </td>
                    <td>
                        Encoding for xml's generated files.
                    </td>
                    <td>
                        No, default is <code>UTF-8</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceRemotingType
                    </td>
                    <td>
                        Determines the type of remoting to be used for Spring services. Can any one of
                        <ul>
                            <li>none</li>
                            <li>rmi</li>
                            <li>httpinvoker</li>
                            <li>burlap</li>
                            <li>hessian</li>
                        </ul>
                    </td>
                    <td>
                        No, default is <code>none</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceRemotePort
                    </td>
                    <td>
                        The port the exported services get published on.
                    </td>
                    <td>
                        No, default is <code>8080</code>.
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceRemoteContext
                    </td>
                    <td>
                        The context the exported services get published on.
                    </td>
                    <td>
                        No.
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceRemoteServer
                    </td>
                    <td>
                        The remote server the Spring services get published on.
                    </td>
                    <td>
                        No, default is <code>localhost</code>
                    </td>
                </tr>
                <tr>
                    <td>
                        serviceHibernateInterceptorEnabled
                    </td>
                    <td>
                        Whether or not the hibernate interceptor should be enabled
                        on services.
                    </td>
                    <td>
                        No, default is <code>true</code>.
                    </td>
                </tr>
            </table>
            <subsection name="Hibernate Specific Properties">
                <table>
                    <tr>
                        <td>
                            hibernateQueryUseNamedParameters
                        </td>
                        <td>
                            Whether or not named parameters (i.e. ':someParameter') or unnamed
                            (i.e. '?') parameters should be used in the HQL queries embedded
                            within the model.
                            <strong>NOTE:</strong> Does not apply to queries written in OCL.
                        </td>
                        <td>
                            No, default is <code>false</code>.
                        </td>
                    </tr>
                    <tr>
                        <a name="hibernateInheritanceStrategy"/>
                        <td>
                              hibernateInheritanceStrategy
                        </td>
                        <td>
                              Defines the hibernate inheritance strategy (unless
                              overridden on an entity level by the
                              <a href="#modeling.html#andromda.hibernate.inheritance">@andromda.hibernate.inheritance</a>
                              tagged value, can be the following possible values:
                            <ul>
                                <li>class - table per hierarchy.</li>
                                <li>subclass - table per class in hierarchy.</li>
                                <li>concrete - Table per class.</li>
                                <li>
                                    interface - Root class is defined as an interface and the
                                    attributes remapped to the subclasses.  This is useful in
                                    the concrete case because it has limitations in the associations.
                                </li>
                            </ul>
                        </td>
                        <td>
                            No, default is <code>subclass</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernatePoolSize
                        </td>
                        <td>
                            Hibernate connection pool size.
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateTransactionManagerStrategy
                        </td>
                        <td>
                            Strategy for obtaining the JTA TransactionManager
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateUserTransactionName
                        </td>
                        <td>
                            The JNDI name of the JTA UserTransaction object
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateTransactionManagerLookup
                        </td>
                        <td>
                            The fully qualified class name of the Hibernate TransactionFactory implementation
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateUseOuterJoin
                        </td>
                        <td>
                            Whether or not to use outer join
                        </td>
                        <td>
                             No, defaults to <code>false</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateAssociationEndOuterJoin
                        </td>
                        <td>
                             Defines the default outer join value for many to one and
                             one to one association ends. Possible values are:
                             <ul>
                                <li>auto</li>
                                <li>true</li>
                                <li>false</li>
                             </ul>
                        </td>
                        <td>
                            No, default is <code>auto</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateShowSql
                        </td>
                        <td>
                            Whether or not to log SQL statements
                        </td>
                        <td>
                            No, defaults to <code>false</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateJndiName
                        </td>
                        <td>
                            JNDI name bound to the SessionFactory.
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateDialect
                        </td>
                        <td>
                            SQL dialect of the database
                        </td>
                        <td>
                            Yes
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateDefaultSchema
                        </td>
                        <td>
                            Qualify unqualified tablenames with the given
                            schema/tablespace in generated SQL.
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateJdbcFetchSize
                        </td>
                        <td>
                            A non-zero value determines the JDBC fetch size
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateMaxFetchDepth
                        </td>
                        <td>
                            Sets a maximum "depth" for the outer join fetch tree.
                            eg. recommended values between 0 and 3
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateJdbcBatchSize
                        </td>
                        <td>
                            A nonzero value enables use of JDBC2 batch updates by Hibernate.
                            ex: recommended values between 5 and 30
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateJdbcUseScrollableResultSet
                        </td>
                        <td>
                            Whether or not to enable use of JDBC2 scrollable resultsets by Hibernate.
                            This property is only necessary when using user supplied connections.
                            Hibernate uses connection metadata otherwise.
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateJdbcUseStreamsForBinary
                        </td>
                        <td>
                            Whether or not to use streams when writing / reading binary or serializable types to/from JDBC
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateHbm2DDLAuto
                        </td>
                        <td>
                            Automatically export schema DDL to the database when the SessionFactory
                            is created. With create-drop, the database schema will be dropped when
                            the SessionFactory is closed explicitely. Permitted values are:
                            <ol>
                                <li>update</li>
                                <li>create</li>
                                <li>create-drop</li>
                            </ol>
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            hibernateQuerySubstitutions
                        </td>
                        <td>
                            Allows you to define new Hibernate query tokens. For example:
                            giving this a value of <em>true=1, false=0</em>
                            would cause the tokens true and false to be translated to integer
                            literals in the generated SQL.
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            criteriaSearchBaseName
                        </td>
                        <td>
                            Allows you to define a base name for the helper classes needed for the
                            hibernate criteria search facility.
                        </td>
                        <td>
                            No, default is <code>CriteriaSearch</code>
                        </td>
                    </tr>
                </table>
            </subsection>
            <subsection name="EJB Specific Properties">
                <table>
                    <tr>
                        <a name="session-ejbs"/>
                        <td>
                            session-ejbs
                        </td>
                        <td>
                            The location to which Spring Session EJBs will be generated,
                            if this is specified, then session EJBs will wrap Spring
                            service POJOs and transaction management will be handled
                            by the Session EJB (instead of Spring).
                            <strong>IMPORTANT:</strong> This enables Session EJB support,
                            if you want your Spring service objects to be wrapped with
                            Session EJBs then you need to specify this property.
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ejbJndiNamePrefix
                        </td>
                        <td>
                            The prefix to give to the Session EJB JNDI names (this allows
                            the same Session EJB to be deployed multiple times in the same
                            container)
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ejbPackageNamePattern
                        </td>
                        <td>
                            If EJBs are being used, this specifies the pattern to be
                            used when constructing the EJB package name
                            (this allows a Spring Service to be wrapped by a Session EJB
                            and avoids name conflicts).  The <em>{0}</em> character
                            represents the service package name.  This could be something like
                            <em>{0}.ejb</em> which would create the Spring Session EJBs in the
                            package ending in the <em>ejb</em> package.
                        </td>
                        <td>
                            No, default is <code>{0}.ejb</code>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ejbServiceOperationTransactionType
                        </td>
                        <td>
                            The default transaction type definition used if EJB service operations.
                            <ul>
                                Permitted values are:
                                <li>NotSupported</li>
                                <li>Supports</li>
                                <li>Required</li>
                                <li>RequiresNew</li>
                                <li>Mandatory</li>
                                <li>Never</li>
                            </ul>
                        </td>
                        <td>
                            No, default is <code>Required</code>.
                            <strong>NOTE:</strong> Can be overridden on a per entity basis with the
                            <a href="modeling.html#@andromda.ejb.transaction.type">@andromda.ejb.transaction.type</a>
                            tagged value.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ejbViewType
                        </td>
                        <td>
                            If EJBs are being used, this specifies the view type
                            for the EJB interfaces.  Can be either <em>local</em>
                            or <code>remote</code>.
                        </td>
                        <td>
                            No, default is <code>local</code>.
                        </td>
                    </tr>
                    <tr>
                        <td>
                            securityRealm
                        </td>
                        <td>
                            The name of the security realm (i.e. animal-quiz,
                            other, etc).  <strong>NOTE:</strong>This enables EJB security if specified.
                        </td>
                        <td>
                            No
                        </td>
                    </tr>
                </table>
            </subsection>
        </section>
      </body>
</document>