<?xml version="1.0" encoding="ISO-8859-1" ?>

<profile>
    <documentation>
        <p>
             Dependencies can be used between Services and Entities, they
             won't need any stereotype assigned to them. These dependencies
             are used to produce entity references (from a entity or service)
             in the Spring applicationContext.xml and within
             the Spring base classes (i.e. DaoBase and ServiceBase),
             or to produce service references (from another service)
             in the Spring applicationContext.xml and within
             the ServiceBase classes.
         </p>
         <p>
             Entity business operations can be set to <code>classifier</code> scope
             instead of the usual <code>instance</code> scope. By doing so they
             will be generated into the corresponding DAO for that entity instead
             of the entity implementation class.
         </p>
         <p>
             Entity query operations (i.e. finders) can be denoted by setting the
             query flag on the modeled operation to true
             (they do not require any stereotypes).
         </p>
         <p>
             Actors represent roles within your model.  To designate that a role
             has access to a given service you must draw a dependency from an Actor
             to the <a href="Service"><![CDATA[<<Service>>]]></a>.  To designate the
             role has access to to a given operation, you must draw a dependency from
             an Actor to the operation.
         </p>
    </documentation>
    <elements>
        <elementGroup name="Stereotypes">
            <element name="ENTITY">
                <documentation>
                    See the documentation from the
                    <a href="../andromda-hibernate-cartridge/profile.html#Entity">Hibernate cartridge</a>.
                </documentation>
                <value>Entity</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
            <element name="SERVICE">
                <documentation>
                    Either denotes a class is representing an EJB session bean or a Spring service. This service
                    is supposed to be used as a facade for a set of entities. If you want to use Spring services
                    instead of the default EJB session beans then you will need to remove the
                    <code>session-ejbs</code> outlet from the spring cartridge's namespace in the
                    <a href="../configuration.html">andromda.xml</a> configuration.
                </documentation>
                <value>Service</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
        </elementGroup>
        <elementGroup name="Tagged Values">
            <documentation>
                The tagged values which apply to the Spring namespace.
            </documentation>
            <element name="EJB_TRANSACTION_TYPE">
                <documentation>
                    Defines an EJB transaction type for the service operation (when wrapped
                    by EJBs)
                </documentation>
                <value>@andromda.ejb.transaction.type</value>
                <appliedOnElement>Service Operation</appliedOnElement>
                <allowedValues>
                    <value>NotSupported</value>
                    <value>Supports</value>
                    <value>Required</value>
                    <value>RequiresNew</value>
                    <value>Mandatory</value>
                    <value>Never</value>
                </allowedValues>
            </element>
            <element name="EJB_VIEW_TYPE">
                <documentation>
                    Defines an EJB service's view type (when Spring services are wrapped by
                    EJBs).
                </documentation>
                <value>@andromda.ejb.viewType</value>
                <appliedOnElement>Service</appliedOnElement>
                <allowedValues>
                    <value>local</value>
                    <value>remote</value>
                </allowedValues>
            </element>
            <element name="TRANSACTION_TYPE">
                <documentation>
                    Defines a Spring transaction type for the service operation
                    (when <strong>NOT</strong> wrapped by EJBs).
                </documentation>
                <value>@andromda.spring.transaction.type</value>
                <appliedOnElement>Service Operation</appliedOnElement>
                <allowedValues>
                    <value>PROPAGATION_NEVER</value>
                    <value>PROPAGATION_NESTED</value>
                    <value>PROPAGATION_MANDATORY</value>
                    <value>PROPAGATION_REQUIRED</value>
                    <value>PROPAGATION_REQUIRES_NEW</value>
                    <value>PROPAGATION_SUPPORTS</value>
                    <value>PROPAGATION_NOT_SUPPORTED</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_QUERY">
                <documentation></documentation>
                <value>@andromda.hibernate.query</value>
            </element>
            <element name="HIBERNATE_INHERITANCE">
                <documentation></documentation>
                <value>@andromda.hibernate.inheritance</value>
            </element>
            <element name="SPRING_SERVICE_REMOTING_TYPE">
                <documentation>
                    Services marked with this stereotype will be exported using Spring's remoting
                    architecture.
                </documentation>
                <value>@andromda.spring.service.remoting.type</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
                <allowedValues>
                    <value>none</value>
                    <value>rmi</value>
                    <value>httpinvoker</value>
                    <value>burlap</value>
                    <value>hessian</value>
                </allowedValues>
            </element>
            <element name="SPRING_SERVICE_REMOTE_PORT">
                <documentation>
                    Sets the port this service will be exported on. You must also tag the
                    service using <a href="#@andromda.spring.service.remote.port">@andromda.spring.service.remote.port</a>.
                </documentation>
                <value>@andromda.spring.service.remote.port</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
            </element>
            <element name="SPRING_SERVICE_INTERCEPTORS">
                <documentation>
                    Sets a list of additional interceptors to be applied to the service's ProxyBeanFactory declaration.
                    They will be listed after the serviceSecurityInterceptor, serviceTransactionInterceptor and
                    hibernateInterceptor if present.
                </documentation>
                <value>@andromda.spring.service.interceptors</value>
                <appliedOnElement><![CDATA[<<Service>>]]></appliedOnElement>
            </element>
            <element name="HIBERNATE_CRITERIA_NULLABLE">
                <documentation>
                    If this tagged value is set to <code>true</code>, the tagged attribute will be considered in the
                    search even if it is <code>null</code>. Use this feature to query entities that have attributes
                    that may be <code>NULL</code> (in the sense of SQL).
                </documentation>
                <value>@andromda.hibernate.criteria.nullable</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>true</value>
                    <value>false</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_ATTRIBUTE">
                <documentation>
                    Sets the name of the attribute on the hibernate entity that should be added to a criteria
                    search. If the attribute you want to search for is not in the entity itself, but rather in
                    an associated class, you can use a fully qualified name here. Assume you have two entites
                    <code>Person</code> and <code>Address</code>, the address being referenced as a one-to-one
                    relationship with the role name <code>homeAddress</code> and the address having an attribute
                    named "city". If you want to retrieve all people living in Hamburg, simply set the value of
                    this tagged value to <code>homeAddress.city</code>.
                    If you ommit this tagged value, the name of the attribute in the criteria class will be used.
                </documentation>
                <value>@andromda.hibernate.criteria.attribute</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
            </element>
            <element name="HIBERNATE_CRITERIA_COMPARATOR">
                <documentation>
                    Using this tagged value to define the logical condition for the underlying attribute in the query is set.
                </documentation>
                <value>@andromda.hibernate.criteria.comparator</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>like</value>
                    <value>insensitive_like</value>
                    <value>equal</value>
                    <value>greater</value>
                    <value>greater_equal</value>
                    <value>less</value>
                    <value>less_equal</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_MATCHMODE">
                <documentation>
                    Use this value to denote the hibernate matchmode to be used for comparing strings.
                </documentation>
                <value>@andromda.hibernate.criteria.matchmode</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>anywhere</value>
                    <value>start</value>
                    <value>end</value>
                    <value>exact</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_ORDER_DIRECTION">
                <documentation>
                    Using this tagged value, you can determine the sort order of the result set.
                </documentation>
                <value>@andromda.hibernate.criteria.order.direction</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>ascending</value>
                    <value>descending</value>
                </allowedValues>
            </element>
            <element name="HIBERNATE_CRITERIA_ORDER_RELEVANCE">
                <documentation>
                    Use this tagged value to determine the relevance of this ordering. You may enter any
                    integer value. The smaller the value, the more relevant the ordering will be.
                </documentation>
                <value>@andromda.hibernate.criteria.order.relevance</value>
                <appliedOnElement>an attribute of a <![CDATA[<<Criteria>>]]> class</appliedOnElement>
                <allowedValues>
                    <value>an integer</value>
                </allowedValues>
            </element>
        </elementGroup>
        <elementGroup name="Constants">
            <documentation>
                Values of contants used in the Spring namespace.
            </documentation>
            <element name="LIKE_COMPARATOR">
                <documentation></documentation>
                <value>like</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="INSENSITIVE_LIKE_COMPARATOR">
                <documentation></documentation>
                <value>insensitive_like</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="EQUAL_COMPARATOR">
                <documentation></documentation>
                <value>equal</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="GREATER_THAN_OR_EQUAL_COMPARATOR">
                <documentation></documentation>
                <value>greater_equal</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="GREATER_THAN_COMPARATOR">
                <documentation></documentation>
                <value>greater</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="LESS_THAN_OR_EQUAL_COMPARATOR">
                <documentation></documentation>
                <value>less_equal</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="LESS_THAN_COMPARATOR">
                <documentation></documentation>
                <value>less</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_ANYWHERE">
                <documentation></documentation>
                <value>anywhere</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_END">
                <documentation></documentation>
                <value>end</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_EXACT">
                <documentation></documentation>
                <value>exact</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="MATCHMODE_START">
                <documentation></documentation>
                <value>start</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="ORDER_ASCENDING">
                <documentation></documentation>
                <value>ascending</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
            <element name="ORDER_DESCENDING">
                <documentation></documentation>
                <value>descending</value>
                <appliedOnElement></appliedOnElement>
                <allowedValues>
                    <value></value>
                </allowedValues>
            </element>
        </elementGroup>
    </elements>
</profile>