## Only produce the file if the entity doesn't
## have any super entities, since those will be
## generated as <subclass/> elements of the parent 
#if ($entity.generalizations.empty)
#set ($generatedFile = "${entity.packagePath}/${entity.entityName}.hbm.xml")
<?xml version="1.0"?>
<!-- 
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate.hbm.xml.vsl in andromda-spring-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 2.0//EN"
          "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">

<hibernate-mapping default-cascade="${hibernateDefaultCascade}">
	<class name="${entity.fullyQualifiedEntityImplementationName}" table="${entity.tableName}">

#set ($foreignGeneratorClass = $entity.hibernateGeneratorClass.equalsIgnoreCase("foreign"))
#set ($identifier = $entity.identifiers.iterator().next())
		<id name="$identifier.name" type="$identifier.type.fullyQualifiedName" column="$identifier.columnName" unsaved-value="null">
			<generator class="$entity.hibernateGeneratorClass">
#if ($entity.hibernateGeneratorClass.equalsIgnoreCase("sequence"))			
				<param name="sequence">${entity.tableName}_SEQ</param>
#elseif ($foreignGeneratorClass)
			    <param name="property">$entity.parentEnd.name</param>
#end
			</generator>
		</id>
## Provide the specialization if this is a superclass 		
#if (!$entity.specializations.empty)

        <discriminator
            column="class"
            type="string"/>
#end

## render the properties and associations (if any)
#renderPropertiesAndAssociations($entity)
## render the <subclass/> elements (if any)
#foreach ($entity in $entity.specializations)
#renderSubClass($entity)
#end
	</class>         	
</hibernate-mapping>
#end