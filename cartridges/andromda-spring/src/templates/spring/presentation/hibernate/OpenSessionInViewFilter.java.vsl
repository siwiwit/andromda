#if($stringUtils.isNotEmpty($springPresentationTypesPackage))
package $springPresentationTypesPackage;
#set ($generatedFile = "${stringUtils.replace($springPresentationTypesPackage,'.','/')}/${openSessionInViewFilterName}.java")
#end

/**
 * This class extends Spring's regular OpenSessionInViewFilter to take into account the particular Spring
 * configuration files structure generated by AndroMDA, that is one root beanRefFactory application
 * context with separated datasource and common beans sub-application contexts.
 * 
 * @author Sebastien Arbogast
 */
public class $openSessionInViewFilterName 
    extends ${hibernateUtils.springHibernatePackage}.support.OpenSessionInViewFilter 
{
   /**
    * @see ${hibernateUtils.springHibernatePackage}.support.OpenSessionInViewFilter#lookupSessionFactory()
    */
   protected ${hibernateUtils.basePackage}.SessionFactory lookupSessionFactory() 
   {
      final org.springframework.web.context.WebApplicationContext context = 
          org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());
      final org.springframework.beans.factory.BeanFactory beanFactory = 
          (org.springframework.beans.factory.BeanFactory)context.getBean("$beanRefFactoryId");
      return (${hibernateUtils.basePackage}.SessionFactory)beanFactory.getBean(getSessionFactoryBeanName());
   }
} 