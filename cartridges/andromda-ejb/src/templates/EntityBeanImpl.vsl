package $entity.packageName;

import javax.ejb.EntityContext;
import javax.ejb.RemoveException;
//import org.apache.log4j.Logger;

/**
 * The $entity.name entity bean.
 *
$entity.getDocumentation(" * ")
 *
 * <p>This class is intended to hold manual changes to the autogenerated
 * implementation in {@link ${entity.name}Bean}.</p>
 */
public abstract class ${entity.name}BeanImpl extends ${entity.name}Bean {
    //private static Logger log = Logger.getLogger(${entity.name}BeanImpl.class);
	private EntityContext ctx;
	
	public void setEntityContext(EntityContext ctx) {
        //if(log.isDebugEnabled()) log.debug("${entity.name}Bean.setEntityContext...");
        this.ctx = ctx;
    }

    public void unsetEntityContext() {
        //if(log.isDebugEnabled()) log.debug("${entity.name}Bean.unsetEntityContext...");
        ctx = null;
    }

    public void ejbRemove() throws RemoveException {
        //if(log.isDebugEnabled()) log.debug("${entity.name}Bean.ejbRemove...");
    }

    public void ejbLoad() {
        //if(log.isDebugEnabled()) log.debug("${entity.name}Bean.ejbLoad...");
    }

    public void ejbStore() {
        //if(log.isDebugEnabled()) log.debug("${entity.name}Bean.ejbStore...");
    }

    public void ejbPassivate() {
        //if(log.isDebugEnabled()) log.debug("${entity.name}Bean.ejbPassivate...");
    }

    public void ejbActivate() {
        //if(log.isDebugEnabled()) log.debug("${entity.name}Bean.ejbActivate...");
    }

#foreach ( $operation in $entity.operations)
#if (!$operation.hasStereotype("FinderMethod"))
#set ($returnType = $operation.returnType.fullyQualifiedName)
#set ($signature = $operation.signature)
#set ($visibility = $operation.visibility)
## Public static methods are exposed on the home
## interface instead of the component interface and must
## be prepended with "ejbHome"
#if ($visibility == "public" && $operation.static)
#set ($signature = "ejbHome${str.capitalize($signature)}")
#end
    /**
$operation.getDocumentation("     * ")
     */
#if ($operation.exceptionsPresent)
    $visibility $returnType $signature
        throws $operation.exceptionList {
#else
    $visibility $returnType $signature {
#end
        // TODO put your implementation here.
#if ($operation.returnTypePresent())

        // Dummy return value, just so that the file compiles
        return $operation.returnType.javaNullString;
#end
    }

#end
#end
## Handle explicitly defined create methods.
#foreach ( $op in $class.getCreateMethods(true))
	
    /**
$op.getDocumentation("     * ")
     */
    public void ejbCreateImpl(${op.typedArgumentList}) throws javax.ejb.CreateException {
	
	}
	
	/**
$op.getDocumentation("     * ")
     */
     public void ejbPostCreate(${op.typedArgumentList}) {
		
	 }
#end  
}
