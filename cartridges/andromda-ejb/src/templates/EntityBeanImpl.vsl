package $entity.packageName;

import javax.ejb.EntityContext;
import javax.ejb.RemoveException;

/**
 * The $entity.name entity bean.
 *
$entity.getDocumentation(" * ")
 *
 * <p>This class is intended to hold manual changes to the autogenerated
 * implementation in {@link ${entity.name}Bean}.</p>
 */
public abstract class ${entity.name}BeanImpl 
    extends ${entity.name}Bean
{
    // concrete business methods that were declared
    // abstract in class ${entity.name}Bean ...

#foreach ( $operation in $entity.operations)
#if (!$operation.hasStereotype("FinderMethod"))
#set ($returnType = $operation.returnType.fullyQualifiedName)
#set ($signature = $operation.signature)
#set ($visibility = $operation.visibility)
## Public static methods are exposed on the home
## interface instead of the component interface and must
## be prepended with "ejbHome"
#if ($visibility == "public" && $operation.static)
#set ($signature = "ejbHome${str.capitalize($signature)}")
#end
    /**
$operation.getDocumentation("     * ")
     */
#if ($operation.hasExceptions())
    $visibility $returnType $signature
        throws $operation.exceptionList 
    {
#else
    $visibility $returnType $signature 
    {
#end
        // TODO put your implementation here.
#if ($operation.hasReturnType())

        // Dummy return value, just so that the file compiles
#if (!$operation.returnType.primitiveType)
        return null;
#elseif ("boolean" == $returnType)
        return false;
#else
        return ($returnType)0;
#end
#end
    }

#end
#end

    // ------------ and the rest of the EJB stuff ---------------

    private EntityContext context;

    public void setEntityContext(EntityContext ctx)
    {
        context = ctx;
    }

    public void unsetEntityContext()
    {
        context = null;
    }

    public void ejbRemove() throws RemoveException
    {
    }

    public void ejbLoad()
    {
    }

    public void ejbStore()
    {
    }

    public void ejbPassivate()
    {
    }

    public void ejbActivate()
    {
    }
}
