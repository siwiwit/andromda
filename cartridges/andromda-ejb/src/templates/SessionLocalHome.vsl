## Include global definitions. ##
#parse("templates/EJBglobals.vm")
##
#set($viewtype = $class.findTaggedValue("@ejb.viewType"))
#if(!($viewtype == "remote"))
/* Autogenerated by AndroMDA (SessionLocalHome.vsl) - do not edit */
#if ($superclass)
#if ($superclass.hasStereotype("Service"))
## Extend the component interface of the super type if the super type 
## is a <<Service>>
#set ($parentInterface = "${superclass.fullyQualifiedName}LocalHome")
#end
#end
#if (!$parentInterface)
#set ($parentInterface = "javax.ejb.EJBLocalHome")
#end

##################################################################################
##                         The actual template starts here                      ##
##################################################################################
package $packagename;

/**
 * Local home interface for the $servicename session bean.
$class.getDocumentation(" * ")
 *
#copyTaggedValues($class " " [ "@ejb.viewType", "@ejb.transactionType" ])
 */
public interface ${servicename}LocalHome  extends $parentInterface {
#if (!$class.abstract)
    // -- JNDI entries
	public static final String COMP_NAME="java:comp/env/${ejbRefName}/Local";
	public static final String JNDI_NAME="${ejbRefName}/Local";


    // ---------------- create methods --------------------
## Handle explicitly defined create methods.
#foreach ( $op in $class.getCreateMethods(true))

    /**
$op.getDocumentation("    * ")
     *
     */
    public ${servicename}Local create($op.typedArgumentList)
           throws javax.ejb.CreateException;
#end
## Only expose the autogenerated create method with no arguments if it 
## is not explicitly switched off.
#if (!$class.findTaggedValue("@ejb.noSyntheticCreateMethod")) 

    /**
     * Default create method.
     */
    public ${servicename}Local create() throws javax.ejb.CreateException;
#end
#end
}
#end