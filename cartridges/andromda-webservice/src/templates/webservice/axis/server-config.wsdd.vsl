<?xml version="1.0" encoding="UTF-8"?>
<!-- Axis Web Service Deployment Descriptor (WSDD), 
     generated by webservice cartridge (server-config.wsdd.vsl) do not edit! -->
<deployment xmlns="http://xml.apache.org/axis/wsdd/" xmlns:java="http://xml.apache.org/axis/wsdd/providers/java">
	<globalConfiguration>
		<parameter name="adminPassword" value="admin"/>
		<parameter name="attachments.implementation" value="org.apache.axis.attachments.AttachmentsImpl"/>
		<parameter name="sendXsiTypes" value="true"/>
		<parameter name="sendMultiRefs" value="true"/>
		<parameter name="sendXMLDeclaration" value="true"/>
		<parameter name="axis.sendMinimizedElements" value="true"/>
	</globalConfiguration>
	<handler name="LocalResponder" type="java:org.apache.axis.transport.local.LocalResponder"/>
	<handler name="URLMapper" type="java:org.apache.axis.handlers.http.URLMapper"/>
	<handler name="Authenticate" type="java:org.apache.axis.handlers.SimpleAuthenticationHandler"/>
#foreach ($service in $services)
#if (!$service.allowedOperations.empty)
#parse("templates/webservice/Globals.vm")
    <service name="${serviceName}" provider="java:${service.provider}" style="$service.style" use="$service.use">
## if the signedRequest or encyptedRequest flag is true, then we'll add in the appropriate
## handler
#if ($signedRequest == 'true'|| $encryptedRequest == 'true')
#if ($signedRequest == 'true')
#set ($action = "Signature")
#end
#if ($encryptedRequest == 'true')
#set ($action = " $action Encrypt")
#end
        <!-- define the WSS4J security handler to handle requests -->
        <requestFlow>
            <handler type="java:org.apache.ws.axis.security.WSDoAllReceiver">
                <parameter name="action" value="$action.trim()"/>
                <parameter name="signaturePropFile" value="wss4j/crypto.properties" />
            </handler>
        </requestFlow>
#end
## For now only define the static wsdl with wrapped
#if ($service.style.equalsIgnoreCase("wrapped"))
        <wsdlFile>${service.wsdlFile}</wsdlFile>
#end
        <documentation> 
$service.getDocumentation("            ", 64, false)
        </documentation>
        <namespace>${namespace}</namespace>
        <parameter name="allowedMethods" value="${service.allowedMethods}"/>
#parse("templates/webservice/${service.provider}-Globals.vm")       
#parse("templates/webservice/axis/${service.provider}-provider.vm")
#foreach ( $operation in $service.allowedOperations )
        <operation name="${operation.name}">
#foreach ( $parameter in $operation.parameters )
#if ($parameter.name != 'return')
            <parameter name="${parameter.name}"/>
#end
#end
        </operation>
#end
#foreach ( $typeMapping in $service.typeMappingElements )
#set ($type = $typeMapping.type)
        <typeMapping 
            type="java:${type.fullyQualifiedName}" 
            xmlns:ns${velocityCount}="${namespace}"
#set ($serialPrefix = "Bean")
#if ($typeMapping.type.arrayType)
#set ($serialPrefix = "Array")
            qname="ns${velocityCount}:ArrayOf${type.name.replaceAll('\[\]', '')}" 
#else
            qname="ns${velocityCount}:${type.name}" 
#if ($typeMapping.type.hasStereotype("Enumeration"))
#set ($serialPrefix = "Enum")
#end
#end
            serializer="org.apache.axis.encoding.ser.${serialPrefix}SerializerFactory" 
            deserializer="org.apache.axis.encoding.ser.${serialPrefix}DeserializerFactory" 
            encodingStyle="${encodingStyle}">
            <documentation> 
$typeMapping.getDocumentation("            ", 64, false)
            </documentation>
        </typeMapping> 
## Handle any type mappings that happen to be associationEnds 	
#if ($typeMapping.many)
        <typeMapping 
            type="java:${type.fullyQualifiedName}[]" 
            xmlns:ns${velocityCount}="${namespace}"
            qname="ns${velocityCount}:ArrayOf${type.name}" 
            serializer="org.apache.axis.encoding.ser.ArraySerializerFactory"
            deserializer="org.apache.axis.encoding.ser.ArrayDeserializerFactory"
            encodingStyle="${encodingStyle}">
            <documentation> 
$typeMapping.getDocumentation("            ", 64, false)
            </documentation>
        </typeMapping>  
#end
#end  
	</service>	
#end  
#end
	<transport name="http">
		<requestFlow>
			<handler type="URLMapper"/>
			<handler type="java:org.apache.axis.handlers.http.HTTPAuthHandler"/>
		</requestFlow>
	</transport>
	<transport name="local">
		<responseFlow>
			<handler type="LocalResponder"/>
		</responseFlow>
	</transport>		
</deployment>
