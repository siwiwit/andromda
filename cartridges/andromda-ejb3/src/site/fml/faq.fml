<?xml version="1.0"?>
<faqs id="General FAQ">
  <part id="General">
    <faq id="problem_installing">
      <question>Problems installing the EJB3 cartridge?</question>
      <answer>
        <p>
          Re-read the installation howto.  If that doesn't help, post a new topic in the EJB cartridge forum.
          Do not post in the sticky guides.
        </p>
      </answer>
    </faq>
    <faq id="release">
      <question>When is the EJB3 cartridge going to be released?</question>
      <answer>
        <p>
          Hopefully soon.  Thanks to a few people who use the cartridge, we are able to fix some of the issues
          with releasing a new cartride.  Unfortunately, until JBoss AS 5, the JBoss EJB 3.0 implementation will
          not satisfy the EJB 3.0 FR specification, although it is very close.
        </p>
      </answer>
    </faq>
    <faq id="jboss_seam">
      <question>Is JBoss Seam going to be supported?</question>
      <answer>
        <p>
          That is definitely in the pipeworks.  There is some initial support in the cartridge in CVS, and
          some minimal documentation <a href="howto21.html">here</a>.
          Stay tuned and keep your eye on the EJB cartridge forum.
        </p>
      </answer>
    </faq>
    <faq id="migrating_from_hibernate">
      <question>Migrating from Hibernate to EJB3?</question>
      <answer>
        <p>
          Migrating from Hibernate will be easier than you think.  Just remember that if you have specified
          tagged values with tags in the <b>andromda.hibernate</b> namespace, you need to change these to the
          corresponding tag in the <b>andromda.persistence</b> namespace.  Check the 
          <a href="profile.html">profile</a> page to find the tagged value you are looking for.
        </p>
      </answer>
    </faq>
    <faq id="use_of_orm.xml">
      <question>How does an EJB 3.0 project define meta information?</question>
      <answer>
        <p>
          The cartridge now uses a combination of annotations and orm.xml deployment descriptor to define
          meta mapping information.  The orm.xml will override or even replace certain annotations and allows
          you to maintain full control by separating generated code and your implementation code.
        </p>
      </answer>
    </faq>
    <faq id="how_to_stay_up_to_date">
      <question>How can I stay up to date with the changes to the EJB3 cartridge?</question>
      <answer>
        <p>
          The first thing you should do is register with the AndroMDA forums and select the forums you want to
          keep your eye on to receive emails of posts.
        </p>
        <p>
          Regularly read the updates in the <a href="changes-report.html">changes report</a>.
        </p>
      </answer>
    </faq>
    <faq id="how_to_rename_ear">
      <question>How can I rename the EAR file?</question>
      <answer>
        <p>
          In more complex circumstances, you may want to rename your EAR.  For JBoss AS, you may have
          the prefix sorter deployer enabled, in which case you want to prefix a non-negative digit to the EAR.
          There are a couple of pitfals you need to know about to get this working.
        </p>
        <p>
          In your top-level POM, in the properties section, create an entry to hold the prefix, if you required
          a prefix.  You could name it <b>application.deploy.prefix</b>.
        </p>
        <p>
          In your app folder POM, modify the <code>finalName</code> element under the <code>build</code>
          element to reflect the prefix above.  It would read
          <code>${application.deploy.prefix}${application.id}-${pom.version}</code>
        </p>
        <p>
          You must also modify the <code>targetPath</code> element in the <code>resource</code> section corresponding
          to the <b>src/main/application</b> <code>directory</code> element.  This would read
          <code>../${application.deploy.prefix}${application.id}-${pom.version}</code>
        </p>
        <p>
          Finally, make sure you rename the <code>jndiNamePrefix</code> property in the ejb3 namespace of your
          andromda.xml application descriptor to reflect this change.  The <code>jndiNamePrefix</code> would read
          <code>${application.deploy.prefix}${application.id}-${pom.version}</code>.
        </p>
      </answer>
    </faq>
    <faq id="MalformedURLException_with_Tests">
      <question>I am getting "java.net.MalformedURLException: no protocol: and" when running the test!</question>
      <answer>
        <p>
          This is a class loader issue where somewhere in the JBoss Microcontainer, the URL referencing your
          Maven 2 repository is not encoded and you have spaces in this URL.  This is particularly the case
          if you are running under a Windows OS platform and your default Maven 2 repository is 
          C:\Documents and Settings\username\.m2\repository.  The problem is the space in the URL!
        </p>
        <p>
          You need to move your repository to a location on your filesystem without spaces and update/add
          the <i>settings.xml</i> in your .m2 folder to set the <i>localRepository</i> element to
          this new location.  Here is the <a href="http://maven.apache.org/settings.html">Maven settings guide</a>.
        </p>
      </answer>
    </faq>
  </part>
</faqs>
