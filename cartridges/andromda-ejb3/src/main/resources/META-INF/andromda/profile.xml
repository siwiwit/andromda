<?xml version="1.0" encoding="ISO-8859-1" ?>

<profile>
	<documentation>
		Entity query operations (i.e. finders) can be denoted by setting
		the query flag on the modeled operation to true (they do not
		require any stereotypes).
	</documentation>
	<elements>
		<elementGroup name="Stereotypes">
			<element name="ENTITY">
				<documentation>
					Produces a POJO EJB entity.
				</documentation>
				<value>Entity</value>
				<appliedOnElement>class</appliedOnElement>
			</element>
			<element name="SERVICE">
				<documentation>
					Produces a Session EJB facade for the POJO EJB
					entities.
				</documentation>
				<value>Service</value>
				<appliedOnElement>class</appliedOnElement>
			</element>
			<element name="MESSAGE_DRIVEN">
				<documentation>
					Produces a JMS Message Driven EJB facade that
					received messages.
				</documentation>
				<value>MessageDriven</value>
				<appliedOnElement>class</appliedOnElement>
			</element>
            <element name="ENUMERATION">
                <documentation>
                    This stereotype will instruct to define an
                    enumeration class variable of type enum introduced
                    in JDK 1.5. That way it is possible for Entities to
                    use this enumeration type for their attributes.
                </documentation>
                <value>Enumeration</value>
                <appliedOnElement>class</appliedOnElement>
            </element>
			<element name="VERSION">
				<documentation>
					Identifies an attribute as an version property
					(optimistic lock value) of an entity.  Used to 
					ensure integrity when reattaching and for overall
					optimistic concurrency control.  Only one attribute
					per entity class is allowed to have the Version
					stereotype.
					The following <code>types</code> are supported:
					<ul>
					    <li>int</li>
					    <li>Integer</li>
					    <li>short</li>
					    <li>Short</li>
					    <li>long</li>
					    <li>Long</li>
					    <li>Timestamp</li>
					</ul>
				</documentation>
				<value>Version</value>
				<appliedOnElement>Entity attribute</appliedOnElement>
			</element>
			<element name="TRANSIENT">
				<documentation>
					Identifies an entity attribute as a transient
					attribute which is non persistent.
				</documentation>
				<value>Transient</value>
				<appliedOnElement>Entity attribute</appliedOnElement>
			</element>
			<element name="PERSISTENCE_CONTEXT">
				<documentation>
					Identifies a persistence context used to express a dependency
					on an EntityManager persistence context.
				</documentation>
				<value>PersistenceContext</value>
				<appliedOnElement>class</appliedOnElement>
			</element>
			<element name="IDENTIFIER">
				<documentation>
					Identifies an attribute as an identifier (primary
					key).
				</documentation>
				<value>Identifier</value>
				<appliedOnElement>Entity attribute</appliedOnElement>
			</element>
			<element name="CREATE_METHOD">
				<documentation>
					Used to tag an EJB create method NOTE: However POJO
					constructors are used in EJB3
				</documentation>
				<value>CreateMethod</value>
				<appliedOnElement>Entity operation and Session operation</appliedOnElement>
			</element>
			<element name="ENTITY_REF">
				<documentation>
					Used to reference an entity from another entity or
					service.
				</documentation>
				<value>EntityRef</value>
				<appliedOnElement>
					A dependency going into an Entity
				</appliedOnElement>
			</element>
			<element name="SERVICE_REF">
				<documentation>
					Used to reference a service from an entity or
					another service.
				</documentation>
				<value>ServiceRef</value>
				<appliedOnElement>
					A dependency going into a Service
				</appliedOnElement>
			</element>
			<element name="RESOURCE_REF">
				<documentation>
					Used to reference a resource, like a 
					DataSource from a service bean.  
				</documentation>
				<value>ResourceRef</value>
				<appliedOnElement>
					A dependency going into a class having 
					a stereotype of UserTransaction or DataSource,
					out of a Service.
				</appliedOnElement>
			</element>
			<element name="MESSAGE_DRIVEN_REF">
				<documentation>
					Used to reference a JMS message driven
					bean with stereotype MessageDriven.
					This is used to inject the Queue,
					QueueConnectionFactory or TopicConnectionFactory
					resources.
				</documentation>
				<value>MessageDrivenRef</value>
				<appliedOnElement>
					A dependency going into a class
					having a stereotype of MessageDriven,
					out of a Service.
				</appliedOnElement>
			</element>
			<element name="USER_TRANSACTION">
				<documentation>
					Used to inject a javax.transaction.UserTransaction
					resource.
				</documentation>
				<value>UserTransaction</value>
				<appliedOnElement>
					class
				</appliedOnElement>
			</element>
			<element name="DATA_SOURCE">
				<documentation>
					Used to inject a javax.sql.DataSource
					resource.
				</documentation>
				<value>DataSource</value>
				<appliedOnElement>
					class
				</appliedOnElement>
			</element>
			<element name="INTERCEPTOR">
			    <documentation>
			        Defines a customer made interceptor for the business
			        methods of the session bean and message driven
			        bean.
			    </documentation>
			    <value>Interceptor</value>
			    <appliedOnElement>
			        class
			    </appliedOnElement>
			</element>
			<element name="SECURITY_RUN_AS">
				<documentation>
                    Represents a dependency from an actor that is 
                    identified to apply a run-as identity to the bean 
                    when making calls.
                    It does not affect the identity of the 
                    method callers.
				</documentation>
				<value>RunAs</value>
				<appliedOnElement>
					Dependency
				</appliedOnElement>
			</element>
			<element name="VALUE_REF">
				<documentation>
					Used to generate an association between an entity
					and a value object class. Found attributes inside
					the entity as well as the value object are used to
					get automatically filled out. The entity will
					provide the helper method, also for saving a value
					object to an existing entity. NOTE: This should not
					be used any longer with EJB3 as there are no value
					object.
				</documentation>
				<value>ValueRef</value>
				<appliedOnElement>
					A dependency going into a ValueObject and out of an
					Entity
				</appliedOnElement>
			</element>
			<element name="ENV_ENTRY">
			    <documentation>
			        Used to specify an environment entry which is defined
			        in the ejb-jar.xml descriptor and can be injected
			        in a bean.
			    </documentation>
			    <value>EnvEntry</value>
			    <appliedOnElement>
			        Attribute
			    </appliedOnElement>
			</element>
		</elementGroup>
		<elementGroup name="Tagged Values">
			<element name="ATTRIBUTE_PERSISTENCE_OPTIONAL">
				<documentation>
					Defines the attribute non-null relationship annotations.
					If set to false, then a non-null relationship must always
					exist.
				</documentation>
				<value>@andromda.persistence.optional</value>
				<appliedOnElement>Entity attribute</appliedOnElement>
				<allowedValues>
					<value default="true">true</value>
					<value>false</value>
				</allowedValues>
			</element>
			<element name="ENTITY_ACCESS_TYPE">
				<documentation>
					Used to override the default entity access type
					specified by
					<a href="namespace.html#entityAccessType">
						entityAccessType
					</a>
					namespace property.
					<ul>
						Permitted values are:
						<li>PROPERTY</li>
						<li>FIELD</li>
					</ul>
					<p>
						The tagged value of
						@andromda.persistence.access.type is set once on
						the entity class to indicate whether the
						persistence runtime uses properties or fields to
						access the entity state. The persistence runtime
						will default to
						<code>PROPERTY</code>
						if not specified. Currenly, AndroMDA support the
						<code>PROPERTY</code>
						value only. The default access type is defined
						by the
						<a href="namespaces.html#entityAccessType">
							entityAccessType
						</a>
						namespace property.
					</p>
				</documentation>
				<value>@andromda.persistence.access.type</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
				<allowedValues>
					<value>PROPERTY</value>
					<value>FIELD</value>
				</allowedValues>
			</element>
			<element name="ENTITY_INHERITANCE">
				<documentation>
					Used to override the default entity inheritance
					strategy defined by the
					<a
						href="namespace.html#entityInheritanceStrategy">
						entityInheritanceStrategy
					</a>
					namespace property.
					<ul>
						Permitted values are:
						<li>SINGLE_TABLE - table per hierarchy.</li>
						<li>
							TABLE_PER_CLASS - table per class in
							hierarchy.
						</li>
						<li>JOINED - Table per class.</li>
					</ul>
					<p>
						The tagged value of
						@andromda.persistence.inheritance is set on the
						base/root class. All subclasses must then follow
						the same strategy. The default strategy is
						defined by the
						<a
							href="namespaces.html#entityInheritanceStrategy">
							entityInheritanceStrategy
						</a>
						namespace property.
					</p>
				</documentation>
				<value>@andromda.persistence.inheritance</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
				<allowedValues>
					<value>SINGLE_TABLE</value>
					<value>TABLE_PER_CLASS</value>
					<value>JOINED</value>
				</allowedValues>
			</element>
			<element name="ENTITY_DISCRIMINATOR_TYPE">
				<documentation>
					Used to override the default entity inheritance
					discriminator type defined by the
					<a href="namespace.html#entityDiscriminatorType">
						entityDiscriminatorType
					</a>
					namespace property.
					<ul>
						Permitted values are:
						<li>STRING</li>
						<li>CHAR</li>
						<li>INTEGER</li>
					</ul>
					<p>
						The tagged value of
						@andromda.persistence.discriminator.type is set
						once on the base/root class to indicate the type
						of the column used for the discriminator. The
						default discriminator type is defined by the
						<a
							href="namespaces.html#entityDiscriminatorType">
							entityDiscriminatorType
						</a>
						namespace property.
					</p>
				</documentation>
				<value>@andromda.persistence.discriminator.type</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
				<allowedValues>
					<value>STRING</value>
					<value>CHAR</value>
					<value>INTEGER</value>
				</allowedValues>
			</element>
			<element name="ENTITY_DISCRIMINATOR_VALUE">
				<documentation>
					Used at the class level of an entity and is
					optional. This is the value that indicates that the
					row is an entity of the annotated entity type. It
					should be specified for each class in the hierarchy.
				</documentation>
				<value>@andromda.persistence.discriminator.value</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
			</element>
			<element name="ENTITY_DISCRIMINATOR_COLUMN">
				<documentation>
					Used at the class level of an entity and is
					optional. This value indicates the name of the
					column to be used for the discriminator. If not
					specified for the SINGLE_TABLE or JOINED inheritance
					mapping strategies, then default to <b>TYPE</b>.
				</documentation>
				<value>
					@andromda.persistence.discriminator.column.name
				</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
			</element>
			<element name="ENTITY_DISCRIMINATOR_COLUMN_DEFINITION">
				<documentation>
					Used at the class level of an entity and is
					optional. This value indicates the SQL fragment used
					when generating the DDL for the discriminator
					column.
				</documentation>
				<value>
					@andromda.persistence.discriminator.column.definition
				</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
			</element>
			<element name="ENTITY_DISCRIMINATOR_COLUMN_LENGTH">
				<documentation>
					Used at the class level of an entity and is
					optional. This value indicates the column length for
					the String-based discriminator types. It is ignored
					for the other discriminator types.
				</documentation>
				<value>
					@andromda.persistence.discriminator.column.length
				</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
			</element>
			<element name="ENTITY_EMBEDDABLE_SUPERCLASS">
				<documentation>
					Used at the class level of an entity to determine if
					this class is defined as an embeddable super class.
				</documentation>
				<value>
					@andromda.persistence.embeddable.superclass
				</value>
				<appliedOnElement>
					<![CDATA[<<Entity>>]]>
				</appliedOnElement>
			</element>
			<element name="ENTITY_FINDER_TEMPORAL_TYPE">
			    <documentation>
			        The temporal type tagged value specified on
			        the finder method parameter specifying
			        whether to expect one of the following
			        types Date, Time or Timestamp.
			    </documentation>
			    <value>
			        @andromda.persistence.finder.temporal.type
			    </value>
			    <appliedOnElement>
			        Entity Finder Method Parameter
			    </appliedOnElement>
			    <allowedValues>
			        <value default="true">DATE</value>
			        <value>TIME</value>
			        <value>TIMESTAMP</value>
			        <value>NONE</value>
			    </allowedValues>
			</element>
			<element name="ENTITY_FINDER_RESULT_TYPE">
			    <documentation>
			        Specifies the finder method parameter
			        result type to specify the limit and/or
			        starting index.
			    </documentation>
			    <value>
			        @andromda.persistence.finder.result.type
			    </value>
			    <appliedOnElement>
			        Entity Finder Method Parameter
			    </appliedOnElement>
			    <allowedValues>
			        <value default="true">First</value>
			        <value>Max</value>
			    </allowedValues>
			</element>
			<element name="FETCH_TYPE">
			    <documentation>
			        Denotes whether or not to hint to the EJB3 container 
			        that the EJB relationship/property should be lazily 
			        or eagerly loaded.
                    By default, the loading persistence is EAGER for 
                    attributes and relationships of type OneToOne and
                    ManyToOne.
                    Relationships with OneToMany and ManyToMany syntax are 
                    LAZY loaded.  You don't need to set anything to 
                    accept these default settings.
			    </documentation>
			    <value>
			        @andromda.persistence.fetch.type
			    </value>
			    <appliedOnElement>
			        Association End or Entity Attribute
			    </appliedOnElement>
			    <allowedValues>
			        <value>LAZY</value>
			        <value>EAGER</value>
			    </allowedValues>
			</element>
			<element name="LOB_TYPE">
			    <documentation>
			        Specifies either binary or character types
			        for an entity attribute.
			        BLOB fields represent Byte[] or Serializable types.
			        CLOB fiels represent char[], Character[] or String
			        types.
			    </documentation>
			    <value>
			        @andromda.persistence.lob.type
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			    <allowedValues>
			        <value default="true">CLOB</value>
			        <value>BLOB</value>
			    </allowedValues>
			</element>
			<element name="CASCADE_TYPE">
			    <documentation>
			        Specifies the override value for the default
			        cascade setting for this relationship.
			    </documentation>
			    <value>
			        @andromda.persistence.cascade.type
			    </value>
			    <appliedOnElement>
			        Association End
			    </appliedOnElement>
			    <allowedValues>
			        <value>ALL</value>
			        <value>PERSIST</value>
			        <value>MERGE</value>
			        <value>REMOVE</value>
			        <value>REFRESH</value>
			    </allowedValues>
			</element>
			<element name="GENERATOR_TYPE">
			    <documentation>
			        Specifies the primary key generation strategy
			        associated with an entity bean attribute identifier.
			    </documentation>
			    <value>
			        @andromda.persistence.generator.type
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			    <allowedValues>
			        <value default="true">AUTO</value>
			        <value>SEQUENCE</value>
			        <value>IDENTITY</value>
			        <value>TABLE</value>
			        <value>NONE</value>
			    </allowedValues>
			</element>
			<element name="GENERATOR_NAME">
			    <documentation>
			        Defines a unique name which is referenced by one
			        or more classes to be the generator for an
			        entity bean.
			    </documentation>
			    <value>
			        @andromda.persistence.generator.name
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="GENERATOR_SOURCE_NAME">
			    <documentation>
			        Specifies either the table name that stores the
			        generated ids or the sequence name which is the
			        name of the database sequence object used to
			        get the ids.
			    </documentation>
			    <value>
			        @andromda.persistence.generator.source.name
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="GENERATOR_PK_COLUMN_VALUE">
			    <documentation>
			        The primary key value in the generator table
			        that identifies the generated value from
			        other values in the table.
			    </documentation>
			    <value>
			        @andromda.persistence.generator.pkcolumn.value
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="GENERATOR_INITIAL_VALUE">
			    <documentation>
			        Specifies the initial starting sequence for id
			        generation for an entity PK generator.
			    </documentation>
			    <value>
			        @andromda.persistence.generator.initial.value
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="GENERATOR_ALLOCATION_SIZE">
			    <documentation>
			        Specifies the amount to increment by when
			        allocating an id number from the generator.
			    </documentation>
			    <value>
			        @andromda.persistence.generator.allocation.size
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="COLUMN_DEFINITION">
			    <documentation>
			        Specifies the SQL to create the DDL for the 
			        column or entity property.
			    </documentation>
			    <value>
			        @andromda.persistence.column.definition
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="COLUMN_PRECISION">
			    <documentation>
			        Specifies the precision value for a decimal
			        column.
			    </documentation>
			    <value>
			        @andromda.persistence.column.precision
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="COLUMN_SCALE">
			    <documentation>
			        Specifies the scale to use for a decimal
			        column.
			    </documentation>
			    <value>
			        @andromda.persistence.column.scale
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			</element>
			<element name="COLUMN_NULLABLE">
			    <documentation>
			        Specifies whether the underlying column
			        for the entity attribute may be NULL.
			    </documentation>
			    <value>
			        @andromda.persistence.column.nullable
			    </value>
			    <appliedOnElement>
			        Entity Attribute
			    </appliedOnElement>
			    <allowedValues>
			        <value>true</value>
			        <value>false</value>
			    </allowedValues>
			</element>
			<element name="ORDER_BY">
			    <documentation>
			        Specifies the column name(s) that will be
			        used for sorting the returned collection, 
			        with  ASC or DESC optional.  Without a 
			        value, the primary key is assumed.
			    </documentation>
			    <value>
			        @andromda.persistence.orderBy
			    </value>
			    <appliedOnElement>
			        Association End
			    </appliedOnElement>
			</element>
            <element name="ASSOCIATION_COLLECTION_TYPE">
                <documentation>
                    Used to define the mapping for EJB3 collections.
                    This value overrides the
                    <a href="namespace.html#associationCollectionType">namespace property</a>.
                </documentation>
                <value>@andromda.persistence.collection.type</value>
                <appliedOnElement>Association ends between <![CDATA[<<Entity>>]]> classes</appliedOnElement>
                <allowedValues>
                    <value>set</value>
                    <value>map</value>
                    <value>list</value>
                </allowedValues>
            </element>
			<element name="SERVICE_TYPE">
				<documentation>
					Used at the class level of a service bean to 
					override the default session bean type which
					is determined by the existence of instance
					variables.
				</documentation>
				<value>
					@andromda.service.type
				</value>
				<appliedOnElement>
					<![CDATA[<<Service>>]]>
				</appliedOnElement>
				<allowedValues>
					<value>Stateless</value>
					<value>Stateful</value>
				</allowedValues>
			</element>
			<element name="SERVICE_PERSISTENCE_CONTEXT_UNIT_NAME">
				<documentation>
					Used at the class level of a service bean or 
					a class with stereotype PersistenceContext to 
					determine the persistence context unit
					name.
				</documentation>
				<value>
					@andromda.service.persistence.context.unit.name
				</value>
				<appliedOnElement>
					<![CDATA[<<Service>>]]>
				</appliedOnElement>
			</element>
			<element name="SERVICE_PERSISTENCE_CONTEXT_TYPE">
				<documentation>
					Used at the class level of a service bean or 
					a class with stereotype PersistenceContext to 
					determine the persistence context type.
					This can be set to extend the transaction
					on a Stateful session bean for it's 
					EntityManager.
				</documentation>
				<value>
					@andromda.service.persistence.context.unit.type
				</value>
				<appliedOnElement>
					<![CDATA[<<Service>>]]>
				</appliedOnElement>
				<allowedValues>
					<value>EXTENDED</value>
					<value>TRANSACTION</value>
				</allowedValues>
			</element>
			<element name="SERVICE_PERSISTENCE_FLUSH_MODE">
				<documentation>
					Used on session bean operations to set
					the flush mode that determines when the
					changes to the changes to the database
					are applied in a transation.
				</documentation>
				<value>
					@andromda.service.persistence.flush.mode
				</value>
				<appliedOnElement>
					Service operation
				</appliedOnElement>
				<allowedValues>
					<value default="true">AUTO</value>
					<value>COMMIT</value>
					<value>NEVER</value>
				</allowedValues>
			</element>
			<element name="SERVICE_JNDI_NAME_REMOTE">
			    <documentation>
			        Used on a session bean to manually specify
			        the JNDI name the remote interface is bound
			        to.
			    </documentation>
			    <value>
			        @andromda.service.jndi.remote
			    </value>
			    <appliedOnElement>
			        <![CDATA[<<Service>>]]>
			    </appliedOnElement>
			</element>
			<element name="SERVICE_JNDI_NAME_LOCAL">
			    <documentation>
			        Used on a session bean to manually specify
			        the JNDI name the local interface is bound
			        to.
			    </documentation>
			    <value>
			        @andromda.service.jndi.local
			    </value>
			    <appliedOnElement>
			        <![CDATA[<<Service>>]]>
			    </appliedOnElement>
			</element>
			<element name="SERVICE_TIMER_TIMEOUT">
			    <documentation>
			        Specifies whether the session bean operation 
			        as a Timer Service timeout callback method.
			    </documentation>
			    <value>
			        @andromda.service.timer.timeout
			    </value>
			    <appliedOnElement>
			        Service Operation
			    </appliedOnElement>
			    <allowedValues>
			        <value>true</value>
			        <value>false</value>
			    </allowedValues>
			</element>
			<element name="SERVICE_TRANSACTION_MANAGEMENT">
			    <documentation>
			        Specifies the transaction demarcation strategy
			        for the session bean.  By default, this does not
			        need to be set for CONTAINER managed transaction
			        demarcation.
			    </documentation>
			    <value>
			        @andromda.service.transaction.management
			    </value>
			    <appliedOnElement>
			        Service
			    </appliedOnElement>
			    <allowedValues>
			        <value default="true">BEAN</value>
			        <value>CONTAINER</value>
			    </allowedValues>
			</element>
			<element name="SECURITY_PERMIT_ALL">
				<documentation>
					Specifies whether to permit all roles to
					execute the opertions in the bean.
					This can be set on the session bean or on
					individual operations.
					If set on the session bean, all operations will
					inherit this behaviour.
					The permit all tagged value will override
					the roles allowed.  If both are set, only the
					permit all tagged value is rendered.
				</documentation>
				<value>
					@andromda.service.security.permitAll
				</value>
				<appliedOnElement>
					Service and service operation
				</appliedOnElement>
				<allowedValues>
					<value>true</value>
					<value>false</value>
				</allowedValues>
			</element>
			<element name="SECURITY_DENY_ALL">
				<documentation>
					Specifies whether to deny all roles to
					execute the opertions in the bean.
					This can be set on the session bean or on
					individual operations.
					If set on the session bean, all operations will
					inherit this behaviour.
					The deny all tagged value will override
					the roles allowed.  If both are set, only the
					deny all tagged value is rendered.
				</documentation>
				<value>
					@andromda.service.security.denyAll
				</value>
				<appliedOnElement>
					Service and service operation
				</appliedOnElement>
				<allowedValues>
					<value>true</value>
					<value>false</value>
				</allowedValues>
			</element>
			<element name="SECURITY_REALM">
				<documentation>
					Specifies the security domain for
					role based authorization.  JBoss uses
					the security realm to match allowed roles. 
				</documentation>
				<value>
					@andromda.service.security.realm
				</value>
				<appliedOnElement>
					Service
				</appliedOnElement>
			</element>
			<element name="AUTOMATIC_KEY">
				<documentation>
					Can be used in class level of an entity. If you set
					this to true, the class will use an automatic key
					generation for the defined primary key. Please note:
					This is currently only available in BEA Weblogic and
					can not be used with combined primary keys.
				</documentation>
				<value>@andromda.ejb.automaticKey</value>
				<appliedOnElement>
				    Entity attribute
				</appliedOnElement>
			</element>
			<element name="NO_SYNTHETIC_CREATE_METHOD">
			    <documentation>
			        Used on an Entity bean to decide whether to allow
			        synthetic (auto generated) create/constructors.
			    </documentation>
			    <value>@andromda.ejb.noSyntheticCreateMethod</value>
			    <appliedOnElement>
			        Entity
			    </appliedOnElement>
			</element>
			<element name="QUERY">
				<documentation>
					Defines a hibernate query expression. Note that it's
					encouraged to model your query body as an OCL
					constraint (instead of using this tagged value).
				</documentation>
				<value>@andromda.ejb.query</value>
				<appliedOnElement>
					An Entity operation marked as a
					<code>query</code>
					.
				</appliedOnElement>
			</element>
			<element name="VIEW_TYPE">
				<documentation>
					Defines the view type for a Session EJB at the class
					level or at the operation level for each Session
					method.
				</documentation>
				<value>@andromda.ejb.viewType</value>
				<appliedOnElement>Service or Service operation</appliedOnElement>
				<allowedValues>
					<value default="true">remote</value>
					<value>local</value>
					<value>both</value>
				</allowedValues>
			</element>
			<element name="TRANSACTION_TYPE">
				<documentation>
					Defines a transaction type for a method in the Session
					EJB or for entity EJB POJO accessor method.
				</documentation>
				<value>@andromda.ejb.transaction.type</value>
				<appliedOnElement>Service operation or Entity attribute</appliedOnElement>
				<allowedValues>
					<value>NotSupported</value>
					<value>Supports</value>
					<value>Required</value>
					<value>RequiresNew</value>
					<value>Mandatory</value>
					<value>Never</value>
				</allowedValues>
			</element>
			<element name="TABLE">
				<documentation>
					Defines the relational table name for entity
					persistence.
				</documentation>
				<value>@andromda.persistence.table</value>
				<appliedOnElement>
					Entity or a many-to-many association.
				</appliedOnElement>
			</element>
			<element name="COLUMN">
				<documentation>
					Represents the column name for entity persistence.
				</documentation>
				<value>@andromda.persistence.column</value>
				<appliedOnElement>Entity attribute</appliedOnElement>
			</element>
			<element name="COLUMN_LENGTH">
				<documentation>
					Represents the column length for entity persistence.
				</documentation>
				<value>@andromda.persistence.column.length</value>
				<appliedOnElement>Entity attribute</appliedOnElement>
			</element>
			<element name="MDB_ACKNOWLEDGE_MODE">
				<documentation>
					Represents the acknowledge mode for the JMS message
					driven bean.  Only needs to be specified if
					DUPS_OK_ACKNOWLEDGE mode is required.  The default
					mode is AUTO_ACKNOWLEDGE.
				</documentation>
				<value>@andromda.ejb.mdb.acknowledge.mode</value>
				<appliedOnElement>Message Driven Bean</appliedOnElement>
				<allowedValues>
					<value default="true">AUTO_ACKNOWLEDGE</value>
					<value>DUPS_OK_ACKNOWLEDGE</value>
				</allowedValues>
			</element>
			<element name="MDB_DESTINATION">
				<documentation>
					Represents the destination queue or topic name
					this JMS message driven bean is associated with.
				</documentation>
				<value>@andromda.ejb.mdb.destination</value>
				<appliedOnElement>Message Driven Bean</appliedOnElement>
			</element>
			<element name="MDB_DESTINATION_TYPE">
				<documentation>
					Represents the destination type of the JMS message 
					driven bean. If not specified, it is assumed to 
					be a Queue.
				</documentation>
				<value>@andromda.ejb.mdb.destination.type</value>
				<appliedOnElement>Message Driven Bean</appliedOnElement>
				<allowedValues>
					<value default="true">javax.jms.Queue</value>
					<value>javax.jms.Topic</value>
				</allowedValues>
			</element>
			<element name="MDB_SELECTOR">
				<documentation>
					Represents the JMS message selector logic used
					when determining the messages that a JMS message
					driven bean is to receive.
				</documentation>
				<value>@andromda.ejb.mdb.selector</value>
				<appliedOnElement>Message Driven Bean</appliedOnElement>
			</element>
			<element name="MDB_SUBSCRIPTION_DURABILITY">
				<documentation>
					Represents the JMS message driven bean subscription
					durability mode.  Queues are always durable.  The
					durability only needs to be specified on topics.
					By default, topics are non-durable.
				</documentation>
				<value>@andromda.ejb.mdb.subscription.durability</value>
			</element>
			<element name="CONTAINER_CONFIGURATION">
			    <documentation>
			        Defines the container configuration name set in
			        jboss.xml to configure the container for a
			        session bean or MDB.
			    </documentation>
			    <value>@andromda.ejb.container.configuration</value>
			</element>
		</elementGroup>
	</elements>
</profile>