<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
   "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
   "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">

##
## Set global variables.
##
#set ($allUseCases = $transform.filterWithStereotypeName($transform.dynamicHelper.allUseCases, "FrontEndUseCase"))
#set ($allWorkflows = $transform.filterWithStereotypeName($transform.dynamicHelper.allUseCases, "FrontEndWorkflow"))
#set ($allControllerForms = $transform.filterWithStereotypeName($transform.staticHelper.allClasses, "FrontEndPresentation"))
#set ($allInitialStates = $transform.getAllInitialStates($allUseCases))
<struts-config>

##
## For each controller form we will declare a form bean.
##
   <form-beans>
#foreach ($formBeanControllerForm in $allControllerForms)
#set ($formBeanName = "$transform.toJavaMethodName($formBeanControllerForm)")
#set ($formBeanType = "$transform.toFullyQualifiedJavaClassName($formBeanControllerForm)")
      <form-bean name="$formBeanName" type="$formBeanType" />
#end
   </form-beans>

##
## We will take all workflow use-cases and their initial states will determine the global
## entry points of the application. For each workflow there will be exactly one global-forward declaration here.
##
   <global-forwards>
#foreach ($workflow in $allWorkflows)
#set ($forwardName = $transform.toForwardName($transform.getInitialState($transform.getStateMachine($workflow))))
#set ($firstUseCase = $transform.getFirstFrontEndUseCase($workflow))
#set ($forwardPath = $transform.toJavaClassName($transform.getControllerClass($firstUseCase)))
      <forward name="$forwardName" path="/${forwardPath}" redirect="false"/>
#end
   </global-forwards>

##
## Each use-case will be mapping onto an action controller, optionally associated to an action form.
## Final states of a use-cases will be connected to the next use-case as determined by the global workflows
## that contain these use-cases.
## Each state in the use-case's state machine will render a forward.
##
   <action-mappings>
#foreach ($useCase in $allUseCases)
#set ($stateMachine = $transform.getStateMachine($useCase))
#set ($actionMappingControllerClass = $transform.getControllerClass($useCase))
#set ($actionMappingPath = $transform.toJavaClassName($actionMappingControllerClass))
#set ($actionMappingType = $transform.toFullyQualifiedJavaClassName($actionMappingControllerClass))
#set ($actionMappingForm = $transform.getControllerForm($useCase))
#set ($actionMappingFormName = $transform.toJavaMethodName($actionMappingForm))
      <action
         path="/$actionMappingPath" type="$actionMappingType"
#if ($transform.getControllerForm($useCase))
         name="$actionMappingFormName"
#end
         scope="request" unknown="false" validate="true" parameter="target" >
#set ($actionStates = $transform.dynamicHelper.getActionStates($stateMachine))
#foreach ($actionState in $actionStates)
#set ($actionForwardName = $transform.toWebFileName($actionState))
#set ($actionForwardPath = $transform.toFullyQualifiedWebFileName($actionState))
         <forward name="$actionForwardName" path="/${actionForwardPath}.jsp" redirect="false" />
#end
#set ($finalStates = $transform.dynamicHelper.getFinalStates($stateMachine))
#foreach ($finalState in $finalStates)
#set ($actionForwardName = $transform.toForwardName($finalState))
#set ($nextUseCase = $transform.findNextUseCaseInWorkflow($useCase, $finalState.name))
#set ($actionForwardPath = $transform.toJavaClassName($transform.getControllerClass($nextUseCase)))
         <forward name="$actionForwardName" path="/${actionForwardPath}" redirect="false"/>
#end
      </action>
#end
   </action-mappings>

   <!-- not used yet by struts, but present because of a bug in current struts version -->
   <message-resources parameter="application-resources" null="false"/>

   <plug-in className="org.apache.struts.tiles.TilesPlugin" >
      <set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml" />
      <set-property property="moduleAware" value="true" />
   </plug-in>

</struts-config>


