##
## A macro that renders the appropriate action form input field
##
## parameters:
##     o  $parameter - the actual parameter to render
##     o  $ownerParameter - the parameter that is the owner of this parameter (in the case of complex objects)
##     o  $renderLabel - whether or not a labeled should be rendered (i.e. we don't render labels with input tables)
##
#macro(renderActionInputTrinidad $parameter $ownerParameter)
#if ($parameter.backingListName)
#if ($ownerParameter.type.hasStereotype('Entity'))
#set ($propertyId = $parameter.getFormPropertyId($ownerParameter))
#set ($valuePropertyName = ${parameter.getFormPropertyName($ownerParameter)})
#else
#set ($propertyId = $parameter.name)
#set ($valuePropertyName = $parameter.name)
#end
#set ($backingListName = $parameter.backingListName)
#set ($backingValueName = $parameter.backingValueName)
#else
#set ($propertyId = $parameter.getFormPropertyId($ownerParameter))
#set ($valuePropertyName = ${parameter.getFormPropertyName($ownerParameter)})
#set ($backingListName = ${parameter.getBackingListName($ownerParameter)})
#set ($backingValueName = ${parameter.getBackingValueName($ownerParameter)})
#end
#set ($formValuePropertyName = "${formName}.${valuePropertyName}")
#if (!$parameter.table && !($parameter.inputHidden || $ownerParameter.inputHidden))
#if ($parameter.type.dateType)
#if ($parameter.readOnly)
        <tr:inputText id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" readOnly="true"#if($parameter.maxLength) maximumLength="$parameter.maxLength"#end/>
#else
        <tr:inputDate id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required">
            <f:convertDateTime pattern="$parameter.format"/>
        </tr:inputDate>
#end
#elseif ($parameter.inputCheckbox)
        <tr:selectBooleanCheckbox id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required" readOnly="$parameter.readOnly"/>
#elseif ($parameter.inputSelect || $parameter.type.enumeration)
#set ($multiSelect = $parameter.many || $parameter.type.collectionType || $parameter.type.arrayType)
#set ($selectBoxType = "selectOneChoice")
#if ($multiSelect)
#set ($selectBoxType = "selectManyListbox")
#end
        <tr:$selectBoxType id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required" readOnly="$parameter.readOnly" valuePassThru="true"#if ($multiSelect) size="$defaultMultiSelectSize"#end>
#if ($parameter.type.enumeration)
            <f:selectItems value="#{ajsf:getEnumSelectItems('${parameter.type.messageKey}.','${parameter.type.fullyQualifiedName}')}"/>
#else
            <f:selectItems value="#{${formName}.${backingListName}}" />
#end
        </tr:$selectBoxType>
#elseif ($parameter.inputFile)
        <tr:inputFile id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required" columns="50"/>
#elseif ($parameter.inputMultibox)
        <tr:selectManyCheckbox id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required">
            <f:selectItems value="#{${formName}.${backingListName}}" />
        </tr:selectManyCheckbox>
#elseif ($parameter.inputRadio)
        <tr:selectOneRadio id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required">
            <f:selectItems value="#{${formName}.${backingListName}}" />
        </tr:selectOneRadio>
#elseif ($parameter.plainText)
        <tr:outputText id="$propertyId" value="#{${formValuePropertyName}}"/>
#elseif ($parameter.inputSecret)
        <tr:inputText id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required" readOnly="$parameter.readOnly" secret="true"#if($parameter.maxLength) maximumLength="$parameter.maxLength"#end/>
#else
##if the widget type is not defined explicit ...
#if($parameter.inputFile)
        <tr:inputFile id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required" columns="50"/>
#elseif($parameter.type.enumeration)
#set ($multiSelect = $parameter.many || $parameter.type.collectionType || $parameter.type.arrayType)
#set ($selectBoxType = "selectOneChoice")
#if ($multiSelect)
#set ($selectBoxType = "selectManyListbox")
#end
        <tr:$selectBoxType id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required" readOnly="$parameter.readOnly"#if ($multiSelect) size="$defaultMultiSelectSize"#else unselectedLabel=""#end>
#foreach ($literal in $field.type.literals)
##To be reviewed: actually this is done this way because $literal.value does not work
#set($literalValue = $literal.defaultValue.replace("'","").replace('"',''))
#if($literalValue == "")
#set($literalValue = $literal.name)
#end
            <f:selectItem itemLabel="#{messages['${parameter.type.messageKey}.${literal.name}']}" itemValue="$literalValue" />
#end
        </tr:$selectBoxType>
#else
        <tr:inputText id="$propertyId" value="#{${formValuePropertyName}}" label="#{messages['$parameter.messageKey']}:" required="$parameter.required" readOnly="$parameter.readOnly"#if($parameter.inputTextarea) rows="3" columns="40"#end#if($parameter.maxLength) maximumLength="$parameter.maxLength"#end>
#if ($parameter.type.timeType)
            <f:convertDateTime pattern="$parameter.format"/>
#end
        </tr:inputText>
#end
#end
#end
#end